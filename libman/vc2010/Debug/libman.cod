; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\notes\pcbeleg\software\libman\libman.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_DrawWindowMaxX
PUBLIC	_DrawWindowMaxY
PUBLIC	_ReverseY
PUBLIC	_ProjectIndexNr
PUBLIC	_ListWindowWidth
PUBLIC	_ListWindowHeight
PUBLIC	_ButtonSizeX
PUBLIC	_ButtonSizeY
PUBLIC	_ButtonStepX
PUBLIC	_ButtonStepY
PUBLIC	_TimerIdentifier
PUBLIC	_SaveBrush
PUBLIC	_SavePen
PUBLIC	_SaveFont
_DATA	SEGMENT
COMM	_PS:BYTE:040H
COMM	_RealWindow:BYTE:010H
COMM	_ClientRect:BYTE:010H
COMM	_UpdateRect:BYTE:010H
COMM	_RectListWindow1:BYTE:010H
COMM	_RectListWindow2:BYTE:010H
COMM	_EditingRegion:DWORD
COMM	_LIBMANWindow:DWORD
COMM	_LIBMANDisplay:DWORD
COMM	_OutputDisplay:DWORD
COMM	_NewFont:DWORD
COMM	_TimerValue:DWORD
COMM	_WindowWidth:DWORD
COMM	_WindowHeigth:DWORD
COMM	_SymbolsSelected:DWORD
COMM	_DialogMode:DWORD
COMM	_NrLibEntries:DWORD
COMM	_MouseCount:DWORD
COMM	_ok:DWORD
COMM	_ScreenSizeX:DWORD
COMM	_ScreenSizeY:DWORD
COMM	_WindowStartX:DWORD
COMM	_WindowStartY:DWORD
COMM	_DCInUse:DWORD
COMM	_Painting:DWORD
COMM	_ProjectActive:DWORD
COMM	_DrawWindowMinX:DWORD
COMM	_DrawWindowMinY:DWORD
COMM	_MousePosX:DWORD
COMM	_MousePosY:DWORD
COMM	_SymbolToBeEditedPos:DWORD:02H
COMM	_SymbolCountToBeEditedPos:DWORD:02H
COMM	_OperatingSystem:DWORD
COMM	_LibIndex:DWORD:0100aH
COMM	_OkToUseSharedMemory:DWORD
COMM	_BackupMade:DWORD:02H
COMM	_TotalNrLibmanNames:DWORD
COMM	_FoundInstallation:DWORD
COMM	_LibraryMode:DWORD
COMM	_MaxTempMemory:DWORD
COMM	_TempMemoryPos:DWORD
COMM	_TextBufPos:DWORD
COMM	_TextBufLength:DWORD
COMM	_FileP2:DWORD
COMM	_TimerObject:DWORD
COMM	_StartUpMessage:DWORD
COMM	_MainMenu:DWORD
COMM	_SubMenu:DWORD
COMM	_Buf:DWORD
COMM	_ExportDir:BYTE:0200H
COMM	_ExecutableDir:BYTE:0200H
COMM	_VersionStr:BYTE:0200H
COMM	_InstallDirStr:BYTE:0200H
COMM	_ProgramFilesDir:BYTE:0200H
COMM	_ProjectDirStr:BYTE:0200H
COMM	_ProjectPath:BYTE:0200H
COMM	_DefaultLibraryPath:BYTE:0200H
COMM	_DefaultSymbolPath:BYTE:0200H
COMM	_TextBuf:DWORD
COMM	_LibraryText1:BYTE:0200H
COMM	_LibraryText2:BYTE:0200H
COMM	_EditPath:BYTE:0200H
COMM	_LibraryFile:BYTE:0400H
COMM	_DialogTextLine:BYTE:0200H
COMM	_NrParams:DWORD
COMM	_NewLibName:BYTE:0200H
COMM	_Params:BYTE:01000H
COMM	_ExePath:BYTE:0200H
COMM	_SymbolToBeEdited:BYTE:05000H
COMM	_TempPath:BYTE:0200H
COMM	_SymbolImportDir:BYTE:0200H
COMM	_LibNames:BYTE:050000H
COMM	_LibNamesDeleted:BYTE:01000H
COMM	_SharedMemory:DWORD
COMM	_TempMem:DWORD
COMM	_Lib:BYTE:0a0H
COMM	_NewLib:BYTE:0a0H
COMM	_OSInfo:BYTE:094H
COMM	_ProjectInfo:DWORD
COMM	_SharedMemoryHandle:DWORD
COMM	_BlackPen:DWORD
COMM	_GrayPen:DWORD
COMM	_LightGrayPen:DWORD
COMM	_WhitePen:DWORD
COMM	_EmptyPen:DWORD
COMM	_LineColor:DWORD
COMM	_LIBMANClass:BYTE:028H
COMM	_ListClass:BYTE:028H
COMM	_TextBufGlobal:DWORD
COMM	_GlobalTempMem:DWORD
COMM	_StartupInfo:BYTE:044H
COMM	_LIBMANMenu:DWORD
COMM	_LIBMANMenu1:DWORD
COMM	_ListWindow1:DWORD
COMM	_ListWindow2:DWORD
COMM	_CreateNewLibButton1:DWORD
COMM	_CreateNewLibButton2:DWORD
COMM	_OpenLibButton1:DWORD
COMM	_OpenLibButton2:DWORD
COMM	_SaveLibButton1:DWORD
COMM	_SaveLibButton2:DWORD
COMM	_CloseLibButton1:DWORD
COMM	_CloseLibButton2:DWORD
COMM	_ImportSymbolsButton1:DWORD
COMM	_ImportSymbolsButton2:DWORD
COMM	_ExportSymbolsButton1:DWORD
COMM	_ExportSymbolsButton2:DWORD
COMM	_DeleteSymbolsButton1:DWORD
COMM	_DeleteSymbolsButton2:DWORD
COMM	_DeselectAllButton1:DWORD
COMM	_DeselectAllButton2:DWORD
COMM	_SelectAllButton1:DWORD
COMM	_SelectAllButton2:DWORD
COMM	_CopyButton1:DWORD
COMM	_CopyButton2:DWORD
COMM	_MoveButton1:DWORD
COMM	_MoveButton2:DWORD
COMM	_NrLibmanNames:DWORD
COMM	_LibmanNamesPos:DWORD
COMM	_LibmanNamesId:DWORD:0400H
COMM	_LibmanNamesBuf:BYTE:08020H
COMM	_TextLineNr:DWORD
COMM	_FileP:DWORD
_DATA	ENDS
_DATA	SEGMENT
_DrawWindowMaxX DD 02710H
_DrawWindowMaxY DD 02710H
_ReverseY DD	01H
_ProjectIndexNr DD 0ffffffffH
_ListWindowWidth DD 01a4H
_ListWindowHeight DD 015eH
_ButtonSizeX DD	078H
_ButtonSizeY DD	019H
_ButtonStepX DD	096H
_ButtonStepY DD	023H
_TimerIdentifier DD 012345678H
_SaveBrush DD	0ffffffffH
_SavePen DD	0ffffffffH
_SaveFont DD	0ffffffffH
_DATA	ENDS
PUBLIC	_WinMain@16
PUBLIC	___local_stdio_printf_options
PUBLIC	___local_stdio_scanf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	__vsscanf_l
PUBLIC	_sscanf
PUBLIC	_StringConvert
PUBLIC	_LIBMANWinProc@16
PUBLIC	_LoadSymbolFileNames
PUBLIC	_SetDialogItemText
PUBLIC	_AboutDialogBody@16
PUBLIC	_PointInRectangle
PUBLIC	_InsertWindowInProject
PUBLIC	_AllocateMemTemp
PUBLIC	_DeAllocateMemTemp
PUBLIC	_CopyFileNameToTempMem
PUBLIC	_GetDirDialog2@16
PUBLIC	_GetNewDirectory
PUBLIC	_InitDeviceContext
PUBLIC	_StartDrawingEditingWindow
PUBLIC	_DoneDeviceContext
PUBLIC	_EndDrawingEditingWindow
PUBLIC	_ExitDrawing
PUBLIC	_InitDrawingColorWhite
PUBLIC	_InitDrawingColorBlack
PUBLIC	_InitDrawingColorGray
PUBLIC	_InitDrawingColorLightGray
PUBLIC	_DisplayRectangleIn3dLook
PUBLIC	_rect4a
PUBLIC	_DisplayLibraryText
PUBLIC	_WindowPaint
PUBLIC	_DeselectList1
PUBLIC	_DeselectList2
PUBLIC	_SelectList1
PUBLIC	_SelectList2
PUBLIC	_MakeBackup
PUBLIC	_PutSymbolsIntoList
PUBLIC	_AddSymbolToList
PUBLIC	_RemoveSymbolFromList
PUBLIC	_NewLibDialog2@16
PUBLIC	_MakeNewLib
PUBLIC	_CloseLib
PUBLIC	_LoadLib
PUBLIC	_AddSymbolToLibrary
PUBLIC	_DeleteSymbols
PUBLIC	_ExportSymbols
PUBLIC	_AddSymbols
PUBLIC	_EditSymbol
PUBLIC	_ExitEditingSymbol
PUBLIC	_ReloadSymbolsIntoLibrary
PUBLIC	_PopupMenu
PUBLIC	_CreateWindowObjects
PUBLIC	_MakeMenu
PUBLIC	_Help
PUBLIC	_LIBMANCommand
PUBLIC	_DecodeParameters
PUBLIC	_AddLibmanLanguageString
PUBLIC	_AddLibmanLanguageStrings
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0CD@PECGDHGE@About?5library?5manager?5PCB?5elegan@ ; `string'
PUBLIC	??_C@_0BN@HAKPMFFG@library?5manager?5PCB?5Elegance?$AA@ ; `string'
PUBLIC	??_C@_02GIPFHKNO@OK?$AA@			; `string'
PUBLIC	??_C@_0N@MBDMEPPJ@18?5May?0?52012?$AA@		; `string'
PUBLIC	??_C@_0BP@LOJGINCP@Build?5version?5?$CFi?4?$CFi?4?$CFi?5?5?$FL?5?$CFs?5?$FN?$AA@ ; `string'
PUBLIC	??_C@_0CP@PPFINMMK@?$AN?6?$AN?6Compiled?5with?5Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_06FMBNCPDL@Cancel?$AA@			; `string'
PUBLIC	??_C@_0BB@CGBBLDCE@Select?5directory?$AA@	; `string'
PUBLIC	??_C@_06BNHEIDIH@?$CFs?2?$CK?4?$CK?$AA@		; `string'
PUBLIC	??_C@_13JOFGPIOO@?$AA?4?$AA?$AA@		; `string'
PUBLIC	??_C@_15DDHGOCBH@?$AA?4?$AA?4?$AA?$AA@		; `string'
PUBLIC	??_C@_09GBIPEEFN@?$CFs?2?$CFs?2sym?$AA@		; `string'
PUBLIC	??_C@_0BB@KOPNLDEO@?$CFs?2?$CFs?2pcb?2shapes?$AA@ ; `string'
PUBLIC	??_C@_0EM@CNNPBJJJ@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ ; `string'
PUBLIC	??_C@_0BA@EICOPOHD@?$CFs?5?$FL?$CFi?5symbols?$FN?$AA@ ; `string'
PUBLIC	??_C@_0BD@HPLGHJHN@?$CFs?5?$FL?$CFi?5geometries?$FN?$AA@ ; `string'
PUBLIC	??_C@_0N@CPAHMBAI@?$CFs?2backup?2?$CFs?$AA@	; `string'
PUBLIC	??_C@_05NAOIJFC@Error?$AA@			; `string'
PUBLIC	??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@	; `string'
PUBLIC	??_C@_03JOOLLLO@?$CFs?2?$AA@			; `string'
PUBLIC	??_C@_06GNGMGJIB@?$CFs?4lib?$AA@		; `string'
PUBLIC	??_C@_06GDNNOMKD@?$CFs?4slb?$AA@		; `string'
PUBLIC	??_C@_0BM@GDCHEAEN@File?5?$CFs?5exists?5overwerite?5?$DP?$AA@ ; `string'
PUBLIC	??_C@_0BL@CAKLMLEK@Symbol?5library?5version?51?40?$AA@ ; `string'
PUBLIC	??_C@_0BN@LDKPIGNM@Geometry?5library?5version?51?40?$AA@ ; `string'
PUBLIC	??_C@_0BF@PACNIOIP@Symbol?5library?5files?$AA@	; `string'
PUBLIC	??_C@_03LPIGJBNC@lib?$AA@			; `string'
PUBLIC	??_C@_0BH@EMEBPGGA@Geometry?5library?5files?$AA@ ; `string'
PUBLIC	??_C@_03LBDHBEPA@slb?$AA@			; `string'
PUBLIC	??_C@_0BM@EPLEAHJC@Error?5in?5reading?5library?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0BE@BECAACMB@Library?5?$CFs?5is?5wrong?$AA@ ; `string'
PUBLIC	??_C@_0BP@CFMDOOK@Can?5not?5open?5symbol?5in?5file?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0CB@HGKICLGE@Can?5not?5open?5geometry?5in?5file?5?$CFs@ ; `string'
PUBLIC	??_C@_07MKBOLLDP@Symb1?40?$AA@			; `string'
PUBLIC	??_C@_07NIKLBENB@Symb2?40?$AA@			; `string'
PUBLIC	??_C@_07GABHHDLE@Symb3?40?$AA@			; `string'
PUBLIC	??_C@_0BD@BOPCBFNK@Symbol?5?$CFs?5is?5wrong?$AA@ ; `string'
PUBLIC	??_C@_0BF@JAOEBJBK@Shape?5definition?51?40?$AA@	; `string'
PUBLIC	??_C@_0BF@ONJDONFP@Shape?5definition?51?45?$AA@	; `string'
PUBLIC	??_C@_0BC@HCOEMECA@Shape?5?$CFs?5is?5wrong?$AA@	; `string'
PUBLIC	??_C@_0BH@GDAKKDFA@Library?5size?5?$DO32?5Mbyte?$AA@ ; `string'
PUBLIC	??_C@_0BI@BFFPJHHG@Symbol?5size?5?$DO1024?5kbyte?$AA@ ; `string'
PUBLIC	??_C@_0BK@KFCEOLDI@Geometry?5size?5?$DO4096?5kbyte?$AA@ ; `string'
PUBLIC	??_C@_0BO@LAEEEFKG@Symbol?5?$CFs?5exists?0?5overwrite?5?$DP?$AA@ ; `string'
PUBLIC	??_C@_0CA@LGAHECG@Geometry?5?$CFs?5exists?0?5overwrite?5?$DP?$AA@ ; `string'
PUBLIC	??_C@_07BEIHKDLJ@Message?$AA@			; `string'
PUBLIC	??_C@_0BE@OIDBEMPJ@Symbol?5?$CFs?5not?5found?$AA@ ; `string'
PUBLIC	??_C@_0BG@OCMKLJEI@Geometry?5?$CFs?5not?5found?$AA@ ; `string'
PUBLIC	??_C@_0P@ELJOPBKN@?$CFs?2library?4$?$CD?$EA?$AA@ ; `string'
PUBLIC	??_C@_06POKIJBPH@?$CFs?4sym?$AA@		; `string'
PUBLIC	??_C@_09CIIEHHID@?$CFs__?$CD?4sym?$AA@		; `string'
PUBLIC	??_C@_06BMCADEKM@?$CFs?4shp?$AA@		; `string'
PUBLIC	??_C@_09MKAMNCNI@?$CFs__?$CD?4shp?$AA@		; `string'
PUBLIC	??_C@_05BMGBEOOC@?$CFs?2?$CFs?$AA@		; `string'
PUBLIC	??_C@_0BP@MDKINCIN@File?5?$CFs?2?$CFs?5exists?0?5overwrite?5?$DP?$AA@ ; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_0CJ@PHNPFLAE@?$CFd?5symbols?5added?1replaced?5for?5li@ ; `string'
PUBLIC	??_C@_0CM@EJCPCEL@?$CFd?5geometries?5added?1replaced?5for@ ; `string'
PUBLIC	??_C@_0N@JCIAGPG@Symbol?5files?$AA@		; `string'
PUBLIC	??_C@_0P@ODHBNOGE@Geometry?5files?$AA@		; `string'
PUBLIC	??_C@_03CMECGJKE@sym?$AA@			; `string'
PUBLIC	??_C@_03MOMKMMPP@shp?$AA@			; `string'
PUBLIC	??_C@_09OCJNPHPC@?$CFs?2?$CFs?4sym?$AA@		; `string'
PUBLIC	??_C@_09BFFCKJ@?$CFs?2?$CFs?4shp?$AA@		; `string'
PUBLIC	??_C@_0L@KGOMJMBN@?$CFs?2sch?4exe?$AA@		; `string'
PUBLIC	??_C@_0CJ@OIEBFKKJ@?$CC?$CFs?2sch?4exe?$CC?5?$CC?$CFs?$CC?5?1e?5?$CC?$CFs?$CC?5?1a?5?1w?5@ ; `string'
PUBLIC	??_C@_0M@JJKMJFCI@?$CFs?2geom?4exe?$AA@		; `string'
PUBLIC	??_C@_0CK@IGIFOMJJ@?$CC?$CFs?2geom?4exe?$CC?5?$CC?$CFs?$CC?5?1e?5?$CC?$CFs?$CC?5?1a?5?1w@ ; `string'
PUBLIC	??_C@_0M@DOMPHBIC@Edit?5symbol?$AA@		; `string'
PUBLIC	??_C@_0O@OENDAIBJ@Edit?5geometry?$AA@		; `string'
PUBLIC	??_C@_0BA@JCADGPII@Exit?5popup?5menu?$AA@	; `string'
PUBLIC	??_C@_11LOCGONAA@?$AA?$AA@			; `string'
PUBLIC	??_C@_1BA@BFOCGNID@?$AAL?$AAI?$AAS?$AAT?$AAB?$AAO?$AAX?$AA?$AA@ ; `string'
PUBLIC	??_C@_19GAFEELMN@?$AAL?$AAI?$AAS?$AAT?$AA?$AA@	; `string'
PUBLIC	??_C@_07MJJPDAEH@New?5lib?$AA@			; `string'
PUBLIC	??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@ ; `string'
PUBLIC	??_C@_08PPABCFEK@Open?5lib?$AA@			; `string'
PUBLIC	??_C@_09PPCBCBOH@Close?5lib?$AA@		; `string'
PUBLIC	??_C@_0P@LOIAGIPA@Import?5symbols?$AA@		; `string'
PUBLIC	??_C@_0P@BJGEJDBF@Export?5symbols?$AA@		; `string'
PUBLIC	??_C@_0BC@FLIGJAJL@Import?5geometries?$AA@	; `string'
PUBLIC	??_C@_0BC@KEIAJMGA@Export?5geometries?$AA@	; `string'
PUBLIC	??_C@_0N@KPCPMOND@Deselect?5all?$AA@		; `string'
PUBLIC	??_C@_0L@IAIFFGEP@Select?5all?$AA@		; `string'
PUBLIC	??_C@_0P@JFIENDBP@Delete?5symbols?$AA@		; `string'
PUBLIC	??_C@_0BC@PJGELEEH@Delete?5geometries?$AA@	; `string'
PUBLIC	??_C@_08GNGEMOGB@Copy?5?b?$JG?$LK?$AA@		; `string'
PUBLIC	??_C@_08LCGCOCCJ@Move?5?b?$JG?$LK?$AA@		; `string'
PUBLIC	??_C@_08IFJMFLCA@?b?$JH?$IE?5Copy?$AA@		; `string'
PUBLIC	??_C@_08NIFGMEKO@?b?$JH?$IE?5Move?$AA@		; `string'
PUBLIC	??_C@_04PBAHLACE@File?$AA@			; `string'
PUBLIC	??_C@_04LBABLPF@Exit?$AA@			; `string'
PUBLIC	??_C@_05BDOHFCKE@About?$AA@			; `string'
PUBLIC	??_C@_0BI@HHHFDOOH@?$CFs?2libman?4chm?3?3?1html?1?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0CB@JKDIKEEG@?$CFd?5symbols?5added?5to?5directory?5?$CFs@ ; `string'
PUBLIC	??_C@_0CE@NKBHKMLM@?$CFd?5geometries?5added?5to?5directory@ ; `string'
PUBLIC	??_C@_01JEJKBAGA@g?$AA@				; `string'
PUBLIC	??_C@_01LPLHEDKD@d?$AA@				; `string'
PUBLIC	??_C@_01KGKMHCOC@e?$AA@				; `string'
PUBLIC	??_C@_01OMGOGALD@u?$AA@				; `string'
PUBLIC	??_C@_01FMEDJKGI@o?$AA@				; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
PUBLIC	??_C@_0EI@HNOCINJG@This?5version?5of?5the?5library?5mana@ ; `string'
PUBLIC	??_C@_06JNIAGKJN@LIBMAN?$AA@			; `string'
PUBLIC	??_C@_0BE@HIBAEOJ@MMFILE_PCB_ELEGANCE?$AA@	; `string'
PUBLIC	??_C@_0BG@CJLLMCAF@?$CFs?2LanguageLibman?4txt?$AA@ ; `string'
PUBLIC	??_C@_06OOHONKCO@?$CFs?2lib?$AA@		; `string'
PUBLIC	??_C@_06HNLKCCFI@?$CFs?2sym?$AA@		; `string'
PUBLIC	??_C@_09NPGOFAPL@?$CFs?2shplib?$AA@		; `string'
PUBLIC	??_C@_09MCOCNMJK@?$CFs?2shapes?$AA@		; `string'
PUBLIC	??_C@_05MPFIAJAP@Arial?$AA@			; `string'
PUBLIC	??_C@_1O@HPNKJLOD@?$AAL?$AAI?$AAB?$AAM?$AAA?$AAN?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BI@NMJBCEHE@Library?5manager?5symbols?$AA@ ; `string'
PUBLIC	??_C@_0BL@ILMGADFO@Library?5manager?5geometries?$AA@ ; `string'
EXTRN	___report_rangecheckfailure:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	_strchr:PROC
EXTRN	_wcscmp:PROC
EXTRN	_strcat:PROC
EXTRN	_strcmp:PROC
EXTRN	_strcpy:PROC
EXTRN	_strlen:PROC
EXTRN	_stricmp:PROC
EXTRN	_strnicmp:PROC
EXTRN	__imp__GlobalAlloc@8:PROC
EXTRN	__imp__GlobalReAlloc@12:PROC
EXTRN	__imp__GlobalLock@4:PROC
EXTRN	__imp__GlobalUnlock@4:PROC
EXTRN	__imp__GlobalFree@4:PROC
EXTRN	__imp__GetLongPathNameA@12:PROC
EXTRN	__imp__FindClose@4:PROC
EXTRN	__imp__MapViewOfFile@20:PROC
EXTRN	__imp__OpenFileMappingA@12:PROC
EXTRN	__imp__CreateProcessA@40:PROC
EXTRN	__imp__GetCommandLineA@0:PROC
EXTRN	__imp__GetTempPathA@8:PROC
EXTRN	__imp__GetFullPathNameA@16:PROC
EXTRN	__imp__FindNextFileW@8:PROC
EXTRN	__imp__GetVersionExA@4:PROC
EXTRN	__imp__CreateFontA@56:PROC
EXTRN	__imp__CreatePen@12:PROC
EXTRN	__imp__DeleteObject@4:PROC
EXTRN	__imp__GetStockObject@4:PROC
EXTRN	__imp__SelectObject@8:PROC
EXTRN	__imp__SetBkColor@8:PROC
EXTRN	__imp__SetBkMode@8:PROC
EXTRN	__imp__SetROP2@8:PROC
EXTRN	__imp__SetTextColor@8:PROC
EXTRN	__imp__GetMessageA@16:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__DispatchMessageA@4:PROC
EXTRN	__imp__SendMessageA@16:PROC
EXTRN	__imp__PostMessageA@16:PROC
EXTRN	__imp__DefWindowProcA@16:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__RegisterClassA@4:PROC
EXTRN	__imp__CreateWindowExW@48:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__DialogBoxParamA@20:PROC
EXTRN	__imp__EndDialog@8:PROC
EXTRN	__imp__SendDlgItemMessageA@20:PROC
EXTRN	__imp__GetSystemMetrics@4:PROC
EXTRN	__imp__SetMenu@8:PROC
EXTRN	__imp__CreateMenu@0:PROC
EXTRN	__imp__CreatePopupMenu@0:PROC
EXTRN	__imp__DestroyMenu@4:PROC
EXTRN	__imp__TrackPopupMenu@28:PROC
EXTRN	__imp__GetDC@4:PROC
EXTRN	__imp__ReleaseDC@8:PROC
EXTRN	__imp__BeginPaint@8:PROC
EXTRN	__imp__EndPaint@8:PROC
EXTRN	__imp__GetUpdateRect@12:PROC
EXTRN	__imp__SetWindowTextA@8:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__GetWindowRect@8:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	__imp__GetCursorPos@4:PROC
EXTRN	__imp__ClipCursor@4:PROC
EXTRN	__imp__ClientToScreen@8:PROC
EXTRN	__imp__ScreenToClient@8:PROC
EXTRN	__imp__FillRect@12:PROC
EXTRN	__imp__SetClassLongA@12:PROC
EXTRN	__imp__LoadCursorA@8:PROC
EXTRN	__imp__LoadIconA@8:PROC
EXTRN	__imp__DragQueryFileW@16:PROC
EXTRN	__imp__DragFinish@4:PROC
EXTRN	_malloc:PROC
EXTRN	_exit:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	___stdio_common_vsscanf:PROC
EXTRN	_FileOpenReadOnly:PROC
EXTRN	_ReadLn:PROC
EXTRN	_TextFileClose:PROC
EXTRN	_FileClose:PROC
EXTRN	_FileSeek:PROC
EXTRN	_FileRead:PROC
EXTRN	_FileWrite:PROC
EXTRN	_GetString:PROC
EXTRN	_GetQuoteString:PROC
EXTRN	_GetQuoteString2:PROC
EXTRN	_GetDirFromFileName:PROC
EXTRN	_GetFilePartFromFileName:PROC
EXTRN	_CutExtensionFileName:PROC
EXTRN	_GetNameWithOutExtensionFromFileName:PROC
EXTRN	_DecodeQuotedString:PROC
EXTRN	_FileOpenUTF8:PROC
EXTRN	_FileOpenWriteUTF8:PROC
EXTRN	_CheckForWritingAndOpenUTF8:PROC
EXTRN	_FileOpenReadOnlyUTF8:PROC
EXTRN	_TextFileOpenUTF8:PROC
EXTRN	_CopyFileUTF8:PROC
EXTRN	_DeleteFileUTF8:PROC
EXTRN	_DirectoryExistsUTF8:PROC
EXTRN	_FileExistsUTF8:PROC
EXTRN	_FileSizeUTF8:PROC
EXTRN	_GetCurrentDirectoryUTF8:PROC
EXTRN	_GetNewFileUTF8:PROC
EXTRN	_DrawLine:PROC
EXTRN	_GetParameters:PROC
EXTRN	_GetCPUID:PROC
EXTRN	_HtmlHelpA@16:PROC
EXTRN	_SetWindowTextUTF8:PROC
EXTRN	_SendDlgItemMessageUTF8:PROC
EXTRN	_MessageBoxUTF8:PROC
EXTRN	_SendMessageUTF8:PROC
EXTRN	_TextOutUTF8:PROC
EXTRN	_AppendMenuUTF8:PROC
EXTRN	_FindFirstFileUTF8:PROC
EXTRN	_Utf8ToUnicode:PROC
EXTRN	_UnicodeToUtf8:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__chkstk:PROC
EXTRN	_Parameters:BYTE
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
COMM	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9:QWORD							; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0BL@ILMGADFO@Library?5manager?5geometries?$AA@
CONST	SEGMENT
??_C@_0BL@ILMGADFO@Library?5manager?5geometries?$AA@ DB 'Library manager '
	DB	'geometries', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NMJBCEHE@Library?5manager?5symbols?$AA@
CONST	SEGMENT
??_C@_0BI@NMJBCEHE@Library?5manager?5symbols?$AA@ DB 'Library manager sym'
	DB	'bols', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@HPNKJLOD@?$AAL?$AAI?$AAB?$AAM?$AAA?$AAN?$AA?$AA@
CONST	SEGMENT
??_C@_1O@HPNKJLOD@?$AAL?$AAI?$AAB?$AAM?$AAA?$AAN?$AA?$AA@ DB 'L', 00H, 'I'
	DB	00H, 'B', 00H, 'M', 00H, 'A', 00H, 'N', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MPFIAJAP@Arial?$AA@
CONST	SEGMENT
??_C@_05MPFIAJAP@Arial?$AA@ DB 'Arial', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MCOCNMJK@?$CFs?2shapes?$AA@
CONST	SEGMENT
??_C@_09MCOCNMJK@?$CFs?2shapes?$AA@ DB '%s\shapes', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NPGOFAPL@?$CFs?2shplib?$AA@
CONST	SEGMENT
??_C@_09NPGOFAPL@?$CFs?2shplib?$AA@ DB '%s\shplib', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06HNLKCCFI@?$CFs?2sym?$AA@
CONST	SEGMENT
??_C@_06HNLKCCFI@?$CFs?2sym?$AA@ DB '%s\sym', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06OOHONKCO@?$CFs?2lib?$AA@
CONST	SEGMENT
??_C@_06OOHONKCO@?$CFs?2lib?$AA@ DB '%s\lib', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CJLLMCAF@?$CFs?2LanguageLibman?4txt?$AA@
CONST	SEGMENT
??_C@_0BG@CJLLMCAF@?$CFs?2LanguageLibman?4txt?$AA@ DB '%s\LanguageLibman.'
	DB	'txt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HIBAEOJ@MMFILE_PCB_ELEGANCE?$AA@
CONST	SEGMENT
??_C@_0BE@HIBAEOJ@MMFILE_PCB_ELEGANCE?$AA@ DB 'MMFILE_PCB_ELEGANCE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06JNIAGKJN@LIBMAN?$AA@
CONST	SEGMENT
??_C@_06JNIAGKJN@LIBMAN?$AA@ DB 'LIBMAN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@HNOCINJG@This?5version?5of?5the?5library?5mana@
CONST	SEGMENT
??_C@_0EI@HNOCINJG@This?5version?5of?5the?5library?5mana@ DB 'This versio'
	DB	'n of the library manager requires a CPU with SSE2 extensions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01FMEDJKGI@o?$AA@
CONST	SEGMENT
??_C@_01FMEDJKGI@o?$AA@ DB 'o', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01OMGOGALD@u?$AA@
CONST	SEGMENT
??_C@_01OMGOGALD@u?$AA@ DB 'u', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KGKMHCOC@e?$AA@
CONST	SEGMENT
??_C@_01KGKMHCOC@e?$AA@ DB 'e', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01LPLHEDKD@d?$AA@
CONST	SEGMENT
??_C@_01LPLHEDKD@d?$AA@ DB 'd', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01JEJKBAGA@g?$AA@
CONST	SEGMENT
??_C@_01JEJKBAGA@g?$AA@ DB 'g', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@NKBHKMLM@?$CFd?5geometries?5added?5to?5directory@
CONST	SEGMENT
??_C@_0CE@NKBHKMLM@?$CFd?5geometries?5added?5to?5directory@ DB '%d geomet'
	DB	'ries added to directory %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@JKDIKEEG@?$CFd?5symbols?5added?5to?5directory?5?$CFs@
CONST	SEGMENT
??_C@_0CB@JKDIKEEG@?$CFd?5symbols?5added?5to?5directory?5?$CFs@ DB '%d sy'
	DB	'mbols added to directory %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HHHFDOOH@?$CFs?2libman?4chm?3?3?1html?1?$CFs?$AA@
CONST	SEGMENT
??_C@_0BI@HHHFDOOH@?$CFs?2libman?4chm?3?3?1html?1?$CFs?$AA@ DB '%s\libman'
	DB	'.chm::/html/%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05BDOHFCKE@About?$AA@
CONST	SEGMENT
??_C@_05BDOHFCKE@About?$AA@ DB 'About', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LBABLPF@Exit?$AA@
CONST	SEGMENT
??_C@_04LBABLPF@Exit?$AA@ DB 'Exit', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PBAHLACE@File?$AA@
CONST	SEGMENT
??_C@_04PBAHLACE@File?$AA@ DB 'File', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08NIFGMEKO@?b?$JH?$IE?5Move?$AA@
CONST	SEGMENT
??_C@_08NIFGMEKO@?b?$JH?$IE?5Move?$AA@ DB 0e2H, 097H, 084H, ' Move', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08IFJMFLCA@?b?$JH?$IE?5Copy?$AA@
CONST	SEGMENT
??_C@_08IFJMFLCA@?b?$JH?$IE?5Copy?$AA@ DB 0e2H, 097H, 084H, ' Copy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08LCGCOCCJ@Move?5?b?$JG?$LK?$AA@
CONST	SEGMENT
??_C@_08LCGCOCCJ@Move?5?b?$JG?$LK?$AA@ DB 'Move ', 0e2H, 096H, 0baH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08GNGEMOGB@Copy?5?b?$JG?$LK?$AA@
CONST	SEGMENT
??_C@_08GNGEMOGB@Copy?5?b?$JG?$LK?$AA@ DB 'Copy ', 0e2H, 096H, 0baH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PJGELEEH@Delete?5geometries?$AA@
CONST	SEGMENT
??_C@_0BC@PJGELEEH@Delete?5geometries?$AA@ DB 'Delete geometries', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JFIENDBP@Delete?5symbols?$AA@
CONST	SEGMENT
??_C@_0P@JFIENDBP@Delete?5symbols?$AA@ DB 'Delete symbols', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IAIFFGEP@Select?5all?$AA@
CONST	SEGMENT
??_C@_0L@IAIFFGEP@Select?5all?$AA@ DB 'Select all', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KPCPMOND@Deselect?5all?$AA@
CONST	SEGMENT
??_C@_0N@KPCPMOND@Deselect?5all?$AA@ DB 'Deselect all', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KEIAJMGA@Export?5geometries?$AA@
CONST	SEGMENT
??_C@_0BC@KEIAJMGA@Export?5geometries?$AA@ DB 'Export geometries', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FLIGJAJL@Import?5geometries?$AA@
CONST	SEGMENT
??_C@_0BC@FLIGJAJL@Import?5geometries?$AA@ DB 'Import geometries', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BJGEJDBF@Export?5symbols?$AA@
CONST	SEGMENT
??_C@_0P@BJGEJDBF@Export?5symbols?$AA@ DB 'Export symbols', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LOIAGIPA@Import?5symbols?$AA@
CONST	SEGMENT
??_C@_0P@LOIAGIPA@Import?5symbols?$AA@ DB 'Import symbols', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PPCBCBOH@Close?5lib?$AA@
CONST	SEGMENT
??_C@_09PPCBCBOH@Close?5lib?$AA@ DB 'Close lib', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PPABCFEK@Open?5lib?$AA@
CONST	SEGMENT
??_C@_08PPABCFEK@Open?5lib?$AA@ DB 'Open lib', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
CONST	SEGMENT
??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@ DB 'B', 00H, 'U'
	DB	00H, 'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MJJPDAEH@New?5lib?$AA@
CONST	SEGMENT
??_C@_07MJJPDAEH@New?5lib?$AA@ DB 'New lib', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_19GAFEELMN@?$AAL?$AAI?$AAS?$AAT?$AA?$AA@
CONST	SEGMENT
??_C@_19GAFEELMN@?$AAL?$AAI?$AAS?$AAT?$AA?$AA@ DB 'L', 00H, 'I', 00H, 'S', 00H
	DB	'T', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@BFOCGNID@?$AAL?$AAI?$AAS?$AAT?$AAB?$AAO?$AAX?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@BFOCGNID@?$AAL?$AAI?$AAS?$AAT?$AAB?$AAO?$AAX?$AA?$AA@ DB 'L', 00H
	DB	'I', 00H, 'S', 00H, 'T', 00H, 'B', 00H, 'O', 00H, 'X', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@?$AA?$AA@
CONST	SEGMENT
??_C@_11LOCGONAA@?$AA?$AA@ DB 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JCADGPII@Exit?5popup?5menu?$AA@
CONST	SEGMENT
??_C@_0BA@JCADGPII@Exit?5popup?5menu?$AA@ DB 'Exit popup menu', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OENDAIBJ@Edit?5geometry?$AA@
CONST	SEGMENT
??_C@_0O@OENDAIBJ@Edit?5geometry?$AA@ DB 'Edit geometry', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DOMPHBIC@Edit?5symbol?$AA@
CONST	SEGMENT
??_C@_0M@DOMPHBIC@Edit?5symbol?$AA@ DB 'Edit symbol', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@IGIFOMJJ@?$CC?$CFs?2geom?4exe?$CC?5?$CC?$CFs?$CC?5?1e?5?$CC?$CFs?$CC?5?1a?5?1w@
CONST	SEGMENT
??_C@_0CK@IGIFOMJJ@?$CC?$CFs?2geom?4exe?$CC?5?$CC?$CFs?$CC?5?1e?5?$CC?$CFs?$CC?5?1a?5?1w@ DB '"'
	DB	'%s\geom.exe" "%s" /e "%s" /a /w %x /z %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JJKMJFCI@?$CFs?2geom?4exe?$AA@
CONST	SEGMENT
??_C@_0M@JJKMJFCI@?$CFs?2geom?4exe?$AA@ DB '%s\geom.exe', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@OIEBFKKJ@?$CC?$CFs?2sch?4exe?$CC?5?$CC?$CFs?$CC?5?1e?5?$CC?$CFs?$CC?5?1a?5?1w?5@
CONST	SEGMENT
??_C@_0CJ@OIEBFKKJ@?$CC?$CFs?2sch?4exe?$CC?5?$CC?$CFs?$CC?5?1e?5?$CC?$CFs?$CC?5?1a?5?1w?5@ DB '"'
	DB	'%s\sch.exe" "%s" /e "%s" /a /w %x /z %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KGOMJMBN@?$CFs?2sch?4exe?$AA@
CONST	SEGMENT
??_C@_0L@KGOMJMBN@?$CFs?2sch?4exe?$AA@ DB '%s\sch.exe', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BFFCKJ@?$CFs?2?$CFs?4shp?$AA@
CONST	SEGMENT
??_C@_09BFFCKJ@?$CFs?2?$CFs?4shp?$AA@ DB '%s\%s.shp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09OCJNPHPC@?$CFs?2?$CFs?4sym?$AA@
CONST	SEGMENT
??_C@_09OCJNPHPC@?$CFs?2?$CFs?4sym?$AA@ DB '%s\%s.sym', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03MOMKMMPP@shp?$AA@
CONST	SEGMENT
??_C@_03MOMKMMPP@shp?$AA@ DB 'shp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CMECGJKE@sym?$AA@
CONST	SEGMENT
??_C@_03CMECGJKE@sym?$AA@ DB 'sym', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ODHBNOGE@Geometry?5files?$AA@
CONST	SEGMENT
??_C@_0P@ODHBNOGE@Geometry?5files?$AA@ DB 'Geometry files', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JCIAGPG@Symbol?5files?$AA@
CONST	SEGMENT
??_C@_0N@JCIAGPG@Symbol?5files?$AA@ DB 'Symbol files', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@EJCPCEL@?$CFd?5geometries?5added?1replaced?5for@
CONST	SEGMENT
??_C@_0CM@EJCPCEL@?$CFd?5geometries?5added?1replaced?5for@ DB '%d geometr'
	DB	'ies added/replaced for library %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@PHNPFLAE@?$CFd?5symbols?5added?1replaced?5for?5li@
CONST	SEGMENT
??_C@_0CJ@PHNPFLAE@?$CFd?5symbols?5added?1replaced?5for?5li@ DB '%d symbo'
	DB	'ls added/replaced for library %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MDKINCIN@File?5?$CFs?2?$CFs?5exists?0?5overwrite?5?$DP?$AA@
CONST	SEGMENT
??_C@_0BP@MDKINCIN@File?5?$CFs?2?$CFs?5exists?0?5overwrite?5?$DP?$AA@ DB 'F'
	DB	'ile %s\%s exists, overwrite ?', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05BMGBEOOC@?$CFs?2?$CFs?$AA@
CONST	SEGMENT
??_C@_05BMGBEOOC@?$CFs?2?$CFs?$AA@ DB '%s\%s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09MKAMNCNI@?$CFs__?$CD?4shp?$AA@
CONST	SEGMENT
??_C@_09MKAMNCNI@?$CFs__?$CD?4shp?$AA@ DB '%s__#.shp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06BMCADEKM@?$CFs?4shp?$AA@
CONST	SEGMENT
??_C@_06BMCADEKM@?$CFs?4shp?$AA@ DB '%s.shp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09CIIEHHID@?$CFs__?$CD?4sym?$AA@
CONST	SEGMENT
??_C@_09CIIEHHID@?$CFs__?$CD?4sym?$AA@ DB '%s__#.sym', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06POKIJBPH@?$CFs?4sym?$AA@
CONST	SEGMENT
??_C@_06POKIJBPH@?$CFs?4sym?$AA@ DB '%s.sym', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ELJOPBKN@?$CFs?2library?4$?$CD?$EA?$AA@
CONST	SEGMENT
??_C@_0P@ELJOPBKN@?$CFs?2library?4$?$CD?$EA?$AA@ DB '%s\library.$#@', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OCMKLJEI@Geometry?5?$CFs?5not?5found?$AA@
CONST	SEGMENT
??_C@_0BG@OCMKLJEI@Geometry?5?$CFs?5not?5found?$AA@ DB 'Geometry %s not f'
	DB	'ound', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OIDBEMPJ@Symbol?5?$CFs?5not?5found?$AA@
CONST	SEGMENT
??_C@_0BE@OIDBEMPJ@Symbol?5?$CFs?5not?5found?$AA@ DB 'Symbol %s not found'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_07BEIHKDLJ@Message?$AA@
CONST	SEGMENT
??_C@_07BEIHKDLJ@Message?$AA@ DB 'Message', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LGAHECG@Geometry?5?$CFs?5exists?0?5overwrite?5?$DP?$AA@
CONST	SEGMENT
??_C@_0CA@LGAHECG@Geometry?5?$CFs?5exists?0?5overwrite?5?$DP?$AA@ DB 'Geo'
	DB	'metry %s exists, overwrite ?', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LAEEEFKG@Symbol?5?$CFs?5exists?0?5overwrite?5?$DP?$AA@
CONST	SEGMENT
??_C@_0BO@LAEEEFKG@Symbol?5?$CFs?5exists?0?5overwrite?5?$DP?$AA@ DB 'Symb'
	DB	'ol %s exists, overwrite ?', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KFCEOLDI@Geometry?5size?5?$DO4096?5kbyte?$AA@
CONST	SEGMENT
??_C@_0BK@KFCEOLDI@Geometry?5size?5?$DO4096?5kbyte?$AA@ DB 'Geometry size'
	DB	' >4096 kbyte', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BFFPJHHG@Symbol?5size?5?$DO1024?5kbyte?$AA@
CONST	SEGMENT
??_C@_0BI@BFFPJHHG@Symbol?5size?5?$DO1024?5kbyte?$AA@ DB 'Symbol size >10'
	DB	'24 kbyte', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GDAKKDFA@Library?5size?5?$DO32?5Mbyte?$AA@
CONST	SEGMENT
??_C@_0BH@GDAKKDFA@Library?5size?5?$DO32?5Mbyte?$AA@ DB 'Library size >32'
	DB	' Mbyte', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HCOEMECA@Shape?5?$CFs?5is?5wrong?$AA@
CONST	SEGMENT
??_C@_0BC@HCOEMECA@Shape?5?$CFs?5is?5wrong?$AA@ DB 'Shape %s is wrong', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@ONJDONFP@Shape?5definition?51?45?$AA@
CONST	SEGMENT
??_C@_0BF@ONJDONFP@Shape?5definition?51?45?$AA@ DB 'Shape definition 1.5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JAOEBJBK@Shape?5definition?51?40?$AA@
CONST	SEGMENT
??_C@_0BF@JAOEBJBK@Shape?5definition?51?40?$AA@ DB 'Shape definition 1.0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BOPCBFNK@Symbol?5?$CFs?5is?5wrong?$AA@
CONST	SEGMENT
??_C@_0BD@BOPCBFNK@Symbol?5?$CFs?5is?5wrong?$AA@ DB 'Symbol %s is wrong', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07GABHHDLE@Symb3?40?$AA@
CONST	SEGMENT
??_C@_07GABHHDLE@Symb3?40?$AA@ DB 'Symb3.0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07NIKLBENB@Symb2?40?$AA@
CONST	SEGMENT
??_C@_07NIKLBENB@Symb2?40?$AA@ DB 'Symb2.0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07MKBOLLDP@Symb1?40?$AA@
CONST	SEGMENT
??_C@_07MKBOLLDP@Symb1?40?$AA@ DB 'Symb1.0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@HGKICLGE@Can?5not?5open?5geometry?5in?5file?5?$CFs@
CONST	SEGMENT
??_C@_0CB@HGKICLGE@Can?5not?5open?5geometry?5in?5file?5?$CFs@ DB 'Can not'
	DB	' open geometry in file %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@CFMDOOK@Can?5not?5open?5symbol?5in?5file?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BP@CFMDOOK@Can?5not?5open?5symbol?5in?5file?5?$CFs?$AA@ DB 'Can no'
	DB	't open symbol in file %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BECAACMB@Library?5?$CFs?5is?5wrong?$AA@
CONST	SEGMENT
??_C@_0BE@BECAACMB@Library?5?$CFs?5is?5wrong?$AA@ DB 'Library %s is wrong'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EPLEAHJC@Error?5in?5reading?5library?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BM@EPLEAHJC@Error?5in?5reading?5library?5?$CFs?$AA@ DB 'Error in r'
	DB	'eading library %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LBDHBEPA@slb?$AA@
CONST	SEGMENT
??_C@_03LBDHBEPA@slb?$AA@ DB 'slb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EMEBPGGA@Geometry?5library?5files?$AA@
CONST	SEGMENT
??_C@_0BH@EMEBPGGA@Geometry?5library?5files?$AA@ DB 'Geometry library fil'
	DB	'es', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_03LPIGJBNC@lib?$AA@
CONST	SEGMENT
??_C@_03LPIGJBNC@lib?$AA@ DB 'lib', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PACNIOIP@Symbol?5library?5files?$AA@
CONST	SEGMENT
??_C@_0BF@PACNIOIP@Symbol?5library?5files?$AA@ DB 'Symbol library files', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LDKPIGNM@Geometry?5library?5version?51?40?$AA@
CONST	SEGMENT
??_C@_0BN@LDKPIGNM@Geometry?5library?5version?51?40?$AA@ DB 'Geometry lib'
	DB	'rary version 1.0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CAKLMLEK@Symbol?5library?5version?51?40?$AA@
CONST	SEGMENT
??_C@_0BL@CAKLMLEK@Symbol?5library?5version?51?40?$AA@ DB 'Symbol library'
	DB	' version 1.0', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GDCHEAEN@File?5?$CFs?5exists?5overwerite?5?$DP?$AA@
CONST	SEGMENT
??_C@_0BM@GDCHEAEN@File?5?$CFs?5exists?5overwerite?5?$DP?$AA@ DB 'File %s'
	DB	' exists overwerite ?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06GDNNOMKD@?$CFs?4slb?$AA@
CONST	SEGMENT
??_C@_06GDNNOMKD@?$CFs?4slb?$AA@ DB '%s.slb', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06GNGMGJIB@?$CFs?4lib?$AA@
CONST	SEGMENT
??_C@_06GNGMGJIB@?$CFs?4lib?$AA@ DB '%s.lib', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03JOOLLLO@?$CFs?2?$AA@
CONST	SEGMENT
??_C@_03JOOLLLO@?$CFs?2?$AA@ DB '%s\', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
CONST	SEGMENT
??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@ DB 'No library file open', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05NAOIJFC@Error?$AA@
CONST	SEGMENT
??_C@_05NAOIJFC@Error?$AA@ DB 'Error', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CPAHMBAI@?$CFs?2backup?2?$CFs?$AA@
CONST	SEGMENT
??_C@_0N@CPAHMBAI@?$CFs?2backup?2?$CFs?$AA@ DB '%s\backup\%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HPLGHJHN@?$CFs?5?$FL?$CFi?5geometries?$FN?$AA@
CONST	SEGMENT
??_C@_0BD@HPLGHJHN@?$CFs?5?$FL?$CFi?5geometries?$FN?$AA@ DB '%s [%i geome'
	DB	'tries]', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EICOPOHD@?$CFs?5?$FL?$CFi?5symbols?$FN?$AA@
CONST	SEGMENT
??_C@_0BA@EICOPOHD@?$CFs?5?$FL?$CFi?5symbols?$FN?$AA@ DB '%s [%i symbols]'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@CNNPBJJJ@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
CONST	SEGMENT
??_C@_0EM@CNNPBJJJ@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ DB ' '
	DB	'                                                             '
	DB	'             ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KOPNLDEO@?$CFs?2?$CFs?2pcb?2shapes?$AA@
CONST	SEGMENT
??_C@_0BB@KOPNLDEO@?$CFs?2?$CFs?2pcb?2shapes?$AA@ DB '%s\%s\pcb\shapes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GBIPEEFN@?$CFs?2?$CFs?2sym?$AA@
CONST	SEGMENT
??_C@_09GBIPEEFN@?$CFs?2?$CFs?2sym?$AA@ DB '%s\%s\sym', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15DDHGOCBH@?$AA?4?$AA?4?$AA?$AA@
CONST	SEGMENT
??_C@_15DDHGOCBH@?$AA?4?$AA?4?$AA?$AA@ DB '.', 00H, '.', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_13JOFGPIOO@?$AA?4?$AA?$AA@
CONST	SEGMENT
??_C@_13JOFGPIOO@?$AA?4?$AA?$AA@ DB '.', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06BNHEIDIH@?$CFs?2?$CK?4?$CK?$AA@
CONST	SEGMENT
??_C@_06BNHEIDIH@?$CFs?2?$CK?4?$CK?$AA@ DB '%s\*.*', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CGBBLDCE@Select?5directory?$AA@
CONST	SEGMENT
??_C@_0BB@CGBBLDCE@Select?5directory?$AA@ DB 'Select directory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FMBNCPDL@Cancel?$AA@
CONST	SEGMENT
??_C@_06FMBNCPDL@Cancel?$AA@ DB 'Cancel', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@PPFINMMK@?$AN?6?$AN?6Compiled?5with?5Microsoft?5Visu@
CONST	SEGMENT
??_C@_0CP@PPFINMMK@?$AN?6?$AN?6Compiled?5with?5Microsoft?5Visu@ DB 0dH, 0aH
	DB	0dH, 0aH, 'Compiled with Microsoft Visual Studio 2010', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@LOJGINCP@Build?5version?5?$CFi?4?$CFi?4?$CFi?5?5?$FL?5?$CFs?5?$FN?$AA@
CONST	SEGMENT
??_C@_0BP@LOJGINCP@Build?5version?5?$CFi?4?$CFi?4?$CFi?5?5?$FL?5?$CFs?5?$FN?$AA@ DB 'B'
	DB	'uild version %i.%i.%i  [ %s ]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MBDMEPPJ@18?5May?0?52012?$AA@
CONST	SEGMENT
??_C@_0N@MBDMEPPJ@18?5May?0?52012?$AA@ DB '18 May, 2012', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02GIPFHKNO@OK?$AA@
CONST	SEGMENT
??_C@_02GIPFHKNO@OK?$AA@ DB 'OK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HAKPMFFG@library?5manager?5PCB?5Elegance?$AA@
CONST	SEGMENT
??_C@_0BN@HAKPMFFG@library?5manager?5PCB?5Elegance?$AA@ DB 'library manag'
	DB	'er PCB Elegance', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@PECGDHGE@About?5library?5manager?5PCB?5elegan@
CONST	SEGMENT
??_C@_0CD@PECGDHGE@About?5library?5manager?5PCB?5elegan@ DB 'About librar'
	DB	'y manager PCB elegance', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _AddLibmanLanguageStrings
_TEXT	SEGMENT
$T1 = -5260						; size = 4
_str6$ = -3712						; size = 512
_str4$ = -3192						; size = 512
_str3$ = -2672						; size = 512
_LanguageFileName$ = -2152				; size = 512
_str$ = -1632						; size = 512
_str2$ = -1112						; size = 512
_LineBuf$ = -592					; size = 512
_StringNr$ = -72					; size = 4
_count$ = -60						; size = 4
_Length$ = -48						; size = 4
_str3length$ = -36					; size = 4
_cnt2$ = -24						; size = 4
_fp$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_FileName$ = 8						; size = 4
_AddLibmanLanguageStrings PROC				; COMDAT

; 2760 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 90 14 00 00	 mov	 eax, 5264		; 00001490H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	53		 push	 ebx
  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	8d bd 70 eb ff
	ff		 lea	 edi, DWORD PTR [ebp-5264]
  00016	b9 24 05 00 00	 mov	 ecx, 1316		; 00000524H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 2761 : 
; 2762 :   int32  fp,cnt2,str3length,Length,count,StringNr;
; 2763 :   char   LineBuf[512],str2[MAX_LENGTH_STRING],str[MAX_LENGTH_STRING],
; 2764 :          LanguageFileName[MAX_LENGTH_STRING],str3[MAX_LENGTH_STRING],
; 2765 :          str4[MAX_LENGTH_STRING],str6[MAX_LENGTH_STRING];
; 2766 : 
; 2767 :   count=0;

  0002c	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 2768 :   if (FileName[0]==0) return -1;

  00033	b8 01 00 00 00	 mov	 eax, 1
  00038	6b c8 00	 imul	 ecx, eax, 0
  0003b	8b 55 08	 mov	 edx, DWORD PTR _FileName$[ebp]
  0003e	0f be 04 0a	 movsx	 eax, BYTE PTR [edx+ecx]
  00042	85 c0		 test	 eax, eax
  00044	75 08		 jne	 SHORT $LN9@AddLibmanL
  00046	83 c8 ff	 or	 eax, -1
  00049	e9 43 03 00 00	 jmp	 $LN21@AddLibmanL
$LN9@AddLibmanL:

; 2769 :   if ((fp=TextFileOpenUTF8(FileName))<0) {

  0004e	8b 45 08	 mov	 eax, DWORD PTR _FileName$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 _TextFileOpenUTF8
  00057	83 c4 04	 add	 esp, 4
  0005a	89 45 f4	 mov	 DWORD PTR _fp$[ebp], eax
  0005d	83 7d f4 00	 cmp	 DWORD PTR _fp$[ebp], 0
  00061	7d 08		 jge	 SHORT $LN10@AddLibmanL

; 2770 : /*
; 2771 :     sprintf(str,SC(47,"Can not read from language file %s, default language used"),FileName);
; 2772 :     MessageBox(NULL,str,SC(48,"Warning"),MB_APPLMODAL|MB_OK);
; 2773 : */
; 2774 :     return -1;

  00063	83 c8 ff	 or	 eax, -1
  00066	e9 26 03 00 00	 jmp	 $LN21@AddLibmanL
$LN10@AddLibmanL:

; 2775 :   }
; 2776 : 
; 2777 :   LanguageFileName[0]=0;

  0006b	b8 01 00 00 00	 mov	 eax, 1
  00070	6b c8 00	 imul	 ecx, eax, 0
  00073	89 8d 74 eb ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  00079	81 bd 74 eb ff
	ff 00 02 00 00	 cmp	 DWORD PTR $T1[ebp], 512	; 00000200H
  00083	73 02		 jae	 SHORT $LN22@AddLibmanL
  00085	eb 05		 jmp	 SHORT $LN23@AddLibmanL
$LN22@AddLibmanL:
  00087	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN23@AddLibmanL:
  0008c	8b 95 74 eb ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00092	c6 84 15 98 f7
	ff ff 00	 mov	 BYTE PTR _LanguageFileName$[ebp+edx], 0
$LN2@AddLibmanL:

; 2778 :   while ((Length=ReadLn(fp,LineBuf))>=0) {

  0009a	8d 85 b0 fd ff
	ff		 lea	 eax, DWORD PTR _LineBuf$[ebp]
  000a0	50		 push	 eax
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR _fp$[ebp]
  000a4	51		 push	 ecx
  000a5	e8 00 00 00 00	 call	 _ReadLn
  000aa	83 c4 08	 add	 esp, 8
  000ad	89 45 d0	 mov	 DWORD PTR _Length$[ebp], eax
  000b0	83 7d d0 00	 cmp	 DWORD PTR _Length$[ebp], 0
  000b4	0f 8c eb 00 00
	00		 jl	 $LN3@AddLibmanL

; 2779 :     strcpy(str4,LineBuf);

  000ba	8d 85 b0 fd ff
	ff		 lea	 eax, DWORD PTR _LineBuf$[ebp]
  000c0	50		 push	 eax
  000c1	8d 8d 88 f3 ff
	ff		 lea	 ecx, DWORD PTR _str4$[ebp]
  000c7	51		 push	 ecx
  000c8	e8 00 00 00 00	 call	 _strcpy
  000cd	83 c4 08	 add	 esp, 8

; 2780 :     if ((Length>1)
; 2781 :        &&
; 2782 :        (LineBuf[0]!=';')
; 2783 :        &&
; 2784 :        (LineBuf[0]!='/')
; 2785 :        &&

  000d0	83 7d d0 01	 cmp	 DWORD PTR _Length$[ebp], 1
  000d4	0f 8e c6 00 00
	00		 jle	 $LN11@AddLibmanL
  000da	b8 01 00 00 00	 mov	 eax, 1
  000df	6b c8 00	 imul	 ecx, eax, 0
  000e2	0f be 94 0d b0
	fd ff ff	 movsx	 edx, BYTE PTR _LineBuf$[ebp+ecx]
  000ea	83 fa 3b	 cmp	 edx, 59			; 0000003bH
  000ed	0f 84 ad 00 00
	00		 je	 $LN11@AddLibmanL
  000f3	b8 01 00 00 00	 mov	 eax, 1
  000f8	6b c8 00	 imul	 ecx, eax, 0
  000fb	0f be 94 0d b0
	fd ff ff	 movsx	 edx, BYTE PTR _LineBuf$[ebp+ecx]
  00103	83 fa 2f	 cmp	 edx, 47			; 0000002fH
  00106	0f 84 94 00 00
	00		 je	 $LN11@AddLibmanL
  0010c	b8 01 00 00 00	 mov	 eax, 1
  00111	6b c8 00	 imul	 ecx, eax, 0
  00114	0f be 94 0d b0
	fd ff ff	 movsx	 edx, BYTE PTR _LineBuf$[ebp+ecx]
  0011c	83 fa 23	 cmp	 edx, 35			; 00000023H
  0011f	74 7f		 je	 SHORT $LN11@AddLibmanL

; 2786 :        (LineBuf[0]!='#')) {
; 2787 :       if (LanguageFileName[0]==0) {

  00121	b8 01 00 00 00	 mov	 eax, 1
  00126	6b c8 00	 imul	 ecx, eax, 0
  00129	0f be 94 0d 98
	f7 ff ff	 movsx	 edx, BYTE PTR _LanguageFileName$[ebp+ecx]
  00131	85 d2		 test	 edx, edx
  00133	75 6b		 jne	 SHORT $LN11@AddLibmanL

; 2788 :         GetString(LineBuf,str);

  00135	8d 85 a0 f9 ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  0013b	50		 push	 eax
  0013c	8d 8d b0 fd ff
	ff		 lea	 ecx, DWORD PTR _LineBuf$[ebp]
  00142	51		 push	 ecx
  00143	e8 00 00 00 00	 call	 _GetString
  00148	83 c4 08	 add	 esp, 8

; 2789 :         if (ExePath[0]!=0) {

  0014b	b8 01 00 00 00	 mov	 eax, 1
  00150	6b c8 00	 imul	 ecx, eax, 0
  00153	0f be 91 00 00
	00 00		 movsx	 edx, BYTE PTR _ExePath[ecx]
  0015a	85 d2		 test	 edx, edx
  0015c	74 22		 je	 SHORT $LN13@AddLibmanL

; 2790 :           sprintf(LanguageFileName,"%s\\%s",ExePath,str);

  0015e	8d 85 a0 f9 ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  00164	50		 push	 eax
  00165	68 00 00 00 00	 push	 OFFSET _ExePath
  0016a	68 00 00 00 00	 push	 OFFSET ??_C@_05BMGBEOOC@?$CFs?2?$CFs?$AA@
  0016f	8d 8d 98 f7 ff
	ff		 lea	 ecx, DWORD PTR _LanguageFileName$[ebp]
  00175	51		 push	 ecx
  00176	e8 00 00 00 00	 call	 _sprintf
  0017b	83 c4 10	 add	 esp, 16			; 00000010H

; 2791 :         } else {

  0017e	eb 20		 jmp	 SHORT $LN11@AddLibmanL
$LN13@AddLibmanL:

; 2792 :           sprintf(LanguageFileName,"%s\\%s",ExecutableDir,str);

  00180	8d 85 a0 f9 ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  00186	50		 push	 eax
  00187	68 00 00 00 00	 push	 OFFSET _ExecutableDir
  0018c	68 00 00 00 00	 push	 OFFSET ??_C@_05BMGBEOOC@?$CFs?2?$CFs?$AA@
  00191	8d 8d 98 f7 ff
	ff		 lea	 ecx, DWORD PTR _LanguageFileName$[ebp]
  00197	51		 push	 ecx
  00198	e8 00 00 00 00	 call	 _sprintf
  0019d	83 c4 10	 add	 esp, 16			; 00000010H
$LN11@AddLibmanL:

; 2793 :         }
; 2794 :       }
; 2795 :     }
; 2796 :   }

  001a0	e9 f5 fe ff ff	 jmp	 $LN2@AddLibmanL
$LN3@AddLibmanL:

; 2797 :   TextFileClose(fp);

  001a5	8b 45 f4	 mov	 eax, DWORD PTR _fp$[ebp]
  001a8	50		 push	 eax
  001a9	e8 00 00 00 00	 call	 _TextFileClose
  001ae	83 c4 04	 add	 esp, 4

; 2798 : 
; 2799 : // ********************************************************************************************************
; 2800 : 
; 2801 :   if ((LanguageFileName[0]==0)
; 2802 :      ||

  001b1	b8 01 00 00 00	 mov	 eax, 1
  001b6	6b c8 00	 imul	 ecx, eax, 0
  001b9	0f be 94 0d 98
	f7 ff ff	 movsx	 edx, BYTE PTR _LanguageFileName$[ebp+ecx]
  001c1	85 d2		 test	 edx, edx
  001c3	74 18		 je	 SHORT $LN16@AddLibmanL
  001c5	8d 85 98 f7 ff
	ff		 lea	 eax, DWORD PTR _LanguageFileName$[ebp]
  001cb	50		 push	 eax
  001cc	e8 00 00 00 00	 call	 _TextFileOpenUTF8
  001d1	83 c4 04	 add	 esp, 4
  001d4	89 45 f4	 mov	 DWORD PTR _fp$[ebp], eax
  001d7	83 7d f4 00	 cmp	 DWORD PTR _fp$[ebp], 0
  001db	7d 08		 jge	 SHORT $LN15@AddLibmanL
$LN16@AddLibmanL:

; 2803 :      ((fp=TextFileOpenUTF8(LanguageFileName))<0)) {
; 2804 : /*
; 2805 :     sprintf(str,SC(49,"Can not read from language file %s"),LanguageFileName);
; 2806 :     MessageBox(NULL,str,SC(2,"System error"),MB_APPLMODAL|MB_OK);
; 2807 :     return -2;
; 2808 : */
; 2809 :     return -1;

  001dd	83 c8 ff	 or	 eax, -1
  001e0	e9 ac 01 00 00	 jmp	 $LN21@AddLibmanL
$LN15@AddLibmanL:

; 2810 :   }
; 2811 : 
; 2812 :   count=0;

  001e5	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
$LN4@AddLibmanL:

; 2813 :   while ((Length=ReadLn(fp,LineBuf))>=0) {

  001ec	8d 85 b0 fd ff
	ff		 lea	 eax, DWORD PTR _LineBuf$[ebp]
  001f2	50		 push	 eax
  001f3	8b 4d f4	 mov	 ecx, DWORD PTR _fp$[ebp]
  001f6	51		 push	 ecx
  001f7	e8 00 00 00 00	 call	 _ReadLn
  001fc	83 c4 08	 add	 esp, 8
  001ff	89 45 d0	 mov	 DWORD PTR _Length$[ebp], eax
  00202	83 7d d0 00	 cmp	 DWORD PTR _Length$[ebp], 0
  00206	0f 8c 77 01 00
	00		 jl	 $LN5@AddLibmanL

; 2814 :     strcpy(str4,LineBuf);

  0020c	8d 85 b0 fd ff
	ff		 lea	 eax, DWORD PTR _LineBuf$[ebp]
  00212	50		 push	 eax
  00213	8d 8d 88 f3 ff
	ff		 lea	 ecx, DWORD PTR _str4$[ebp]
  00219	51		 push	 ecx
  0021a	e8 00 00 00 00	 call	 _strcpy
  0021f	83 c4 08	 add	 esp, 8

; 2815 :     if ((Length>1)
; 2816 :        &&
; 2817 :        (LineBuf[0]!=';')
; 2818 :        &&
; 2819 :        (LineBuf[0]!='/')
; 2820 :        &&

  00222	83 7d d0 01	 cmp	 DWORD PTR _Length$[ebp], 1
  00226	0f 8e 52 01 00
	00		 jle	 $LN17@AddLibmanL
  0022c	b8 01 00 00 00	 mov	 eax, 1
  00231	6b c8 00	 imul	 ecx, eax, 0
  00234	0f be 94 0d b0
	fd ff ff	 movsx	 edx, BYTE PTR _LineBuf$[ebp+ecx]
  0023c	83 fa 3b	 cmp	 edx, 59			; 0000003bH
  0023f	0f 84 39 01 00
	00		 je	 $LN17@AddLibmanL
  00245	b8 01 00 00 00	 mov	 eax, 1
  0024a	6b c8 00	 imul	 ecx, eax, 0
  0024d	0f be 94 0d b0
	fd ff ff	 movsx	 edx, BYTE PTR _LineBuf$[ebp+ecx]
  00255	83 fa 2f	 cmp	 edx, 47			; 0000002fH
  00258	0f 84 20 01 00
	00		 je	 $LN17@AddLibmanL
  0025e	b8 01 00 00 00	 mov	 eax, 1
  00263	6b c8 00	 imul	 ecx, eax, 0
  00266	0f be 94 0d b0
	fd ff ff	 movsx	 edx, BYTE PTR _LineBuf$[ebp+ecx]
  0026e	83 fa 23	 cmp	 edx, 35			; 00000023H
  00271	0f 84 07 01 00
	00		 je	 $LN17@AddLibmanL

; 2821 :        (LineBuf[0]!='#')) {
; 2822 : 
; 2823 :       GetString(LineBuf,str6);

  00277	8d 85 80 f1 ff
	ff		 lea	 eax, DWORD PTR _str6$[ebp]
  0027d	50		 push	 eax
  0027e	8d 8d b0 fd ff
	ff		 lea	 ecx, DWORD PTR _LineBuf$[ebp]
  00284	51		 push	 ecx
  00285	e8 00 00 00 00	 call	 _GetString
  0028a	83 c4 08	 add	 esp, 8

; 2824 :       GetQuoteString2(LineBuf,str2);

  0028d	8d 85 a8 fb ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  00293	50		 push	 eax
  00294	8d 8d b0 fd ff
	ff		 lea	 ecx, DWORD PTR _LineBuf$[ebp]
  0029a	51		 push	 ecx
  0029b	e8 00 00 00 00	 call	 _GetQuoteString2
  002a0	83 c4 08	 add	 esp, 8

; 2825 :       if ((str6[0]!=0)
; 2826 :          &&

  002a3	b8 01 00 00 00	 mov	 eax, 1
  002a8	6b c8 00	 imul	 ecx, eax, 0
  002ab	0f be 94 0d 80
	f1 ff ff	 movsx	 edx, BYTE PTR _str6$[ebp+ecx]
  002b3	85 d2		 test	 edx, edx
  002b5	0f 84 c3 00 00
	00		 je	 $LN17@AddLibmanL
  002bb	8d 45 b8	 lea	 eax, DWORD PTR _StringNr$[ebp]
  002be	50		 push	 eax
  002bf	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
  002c4	8d 8d 80 f1 ff
	ff		 lea	 ecx, DWORD PTR _str6$[ebp]
  002ca	51		 push	 ecx
  002cb	e8 00 00 00 00	 call	 _sscanf
  002d0	83 c4 0c	 add	 esp, 12			; 0000000cH
  002d3	83 f8 01	 cmp	 eax, 1
  002d6	0f 85 a2 00 00
	00		 jne	 $LN17@AddLibmanL

; 2827 :          (sscanf(str6,"%d",&StringNr)==1)) {
; 2828 :         DecodeQuotedString(str2,str3);

  002dc	8d 85 90 f5 ff
	ff		 lea	 eax, DWORD PTR _str3$[ebp]
  002e2	50		 push	 eax
  002e3	8d 8d a8 fb ff
	ff		 lea	 ecx, DWORD PTR _str2$[ebp]
  002e9	51		 push	 ecx
  002ea	e8 00 00 00 00	 call	 _DecodeQuotedString
  002ef	83 c4 08	 add	 esp, 8

; 2829 :         str3length=(int32)strlen(str3);

  002f2	8d 85 90 f5 ff
	ff		 lea	 eax, DWORD PTR _str3$[ebp]
  002f8	50		 push	 eax
  002f9	e8 00 00 00 00	 call	 _strlen
  002fe	83 c4 04	 add	 esp, 4
  00301	89 45 dc	 mov	 DWORD PTR _str3length$[ebp], eax

; 2830 :         for (cnt2=0;cnt2<str3length;cnt2++) {

  00304	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _cnt2$[ebp], 0
  0030b	eb 09		 jmp	 SHORT $LN8@AddLibmanL
$LN6@AddLibmanL:
  0030d	8b 45 e8	 mov	 eax, DWORD PTR _cnt2$[ebp]
  00310	83 c0 01	 add	 eax, 1
  00313	89 45 e8	 mov	 DWORD PTR _cnt2$[ebp], eax
$LN8@AddLibmanL:
  00316	8b 45 e8	 mov	 eax, DWORD PTR _cnt2$[ebp]
  00319	3b 45 dc	 cmp	 eax, DWORD PTR _str3length$[ebp]
  0031c	7d 4d		 jge	 SHORT $LN7@AddLibmanL

; 2831 :           if (((BYTE)str3[cnt2]<(BYTE)' ')
; 2832 :              &&
; 2833 :              (str3[cnt2]!='\r')
; 2834 :              &&
; 2835 :              (str3[cnt2]!='\t')
; 2836 :              &&

  0031e	8b 45 e8	 mov	 eax, DWORD PTR _cnt2$[ebp]
  00321	0f b6 8c 05 90
	f5 ff ff	 movzx	 ecx, BYTE PTR _str3$[ebp+eax]
  00329	83 f9 20	 cmp	 ecx, 32			; 00000020H
  0032c	7d 3b		 jge	 SHORT $LN20@AddLibmanL
  0032e	8b 45 e8	 mov	 eax, DWORD PTR _cnt2$[ebp]
  00331	0f be 8c 05 90
	f5 ff ff	 movsx	 ecx, BYTE PTR _str3$[ebp+eax]
  00339	83 f9 0d	 cmp	 ecx, 13			; 0000000dH
  0033c	74 2b		 je	 SHORT $LN20@AddLibmanL
  0033e	8b 45 e8	 mov	 eax, DWORD PTR _cnt2$[ebp]
  00341	0f be 8c 05 90
	f5 ff ff	 movsx	 ecx, BYTE PTR _str3$[ebp+eax]
  00349	83 f9 09	 cmp	 ecx, 9
  0034c	74 1b		 je	 SHORT $LN20@AddLibmanL
  0034e	8b 45 e8	 mov	 eax, DWORD PTR _cnt2$[ebp]
  00351	0f be 8c 05 90
	f5 ff ff	 movsx	 ecx, BYTE PTR _str3$[ebp+eax]
  00359	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  0035c	74 0b		 je	 SHORT $LN20@AddLibmanL

; 2837 :              (str3[cnt2]!='\n')) {
; 2838 :             str3[cnt2]=' ';

  0035e	8b 45 e8	 mov	 eax, DWORD PTR _cnt2$[ebp]
  00361	c6 84 05 90 f5
	ff ff 20	 mov	 BYTE PTR _str3$[ebp+eax], 32 ; 00000020H
$LN20@AddLibmanL:

; 2839 :           } else {
; 2840 :           }
; 2841 :         }

  00369	eb a2		 jmp	 SHORT $LN6@AddLibmanL
$LN7@AddLibmanL:

; 2842 : /*
; 2843 :         cnt2=0;
; 2844 :         while (cnt2<str3length) {
; 2845 :           if (str3[cnt2]=='\\') {
; 2846 :             if (cnt2+1<str3length) {
; 2847 :               if ((str3[cnt2+1]!='t')
; 2848 :                  &&
; 2849 :                  (str3[cnt2+1]!='n')
; 2850 :                  &&
; 2851 :                  (str3[cnt2+1]!='r')) {
; 2852 :                 ok=1;
; 2853 :                 str3[cnt2]=' ';
; 2854 :               }
; 2855 :             }
; 2856 :           }
; 2857 :           cnt2++;
; 2858 :         }
; 2859 : */
; 2860 :         AddLibmanLanguageString(StringNr,str3);

  0036b	8d 85 90 f5 ff
	ff		 lea	 eax, DWORD PTR _str3$[ebp]
  00371	50		 push	 eax
  00372	8b 4d b8	 mov	 ecx, DWORD PTR _StringNr$[ebp]
  00375	51		 push	 ecx
  00376	e8 00 00 00 00	 call	 _AddLibmanLanguageString
  0037b	83 c4 08	 add	 esp, 8
$LN17@AddLibmanL:

; 2861 :       }
; 2862 :     }
; 2863 :   }

  0037e	e9 69 fe ff ff	 jmp	 $LN4@AddLibmanL
$LN5@AddLibmanL:

; 2864 :   TextFileClose(fp);

  00383	8b 45 f4	 mov	 eax, DWORD PTR _fp$[ebp]
  00386	50		 push	 eax
  00387	e8 00 00 00 00	 call	 _TextFileClose
  0038c	83 c4 04	 add	 esp, 4

; 2865 : 
; 2866 :   return 0;

  0038f	33 c0		 xor	 eax, eax
$LN21@AddLibmanL:

; 2867 : }

  00391	52		 push	 edx
  00392	8b cd		 mov	 ecx, ebp
  00394	50		 push	 eax
  00395	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN33@AddLibmanL
  0039b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  003a0	58		 pop	 eax
  003a1	5a		 pop	 edx
  003a2	5f		 pop	 edi
  003a3	5e		 pop	 esi
  003a4	5b		 pop	 ebx
  003a5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003a8	33 cd		 xor	 ecx, ebp
  003aa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003af	81 c4 90 14 00
	00		 add	 esp, 5264		; 00001490H
  003b5	3b ec		 cmp	 ebp, esp
  003b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003bc	8b e5		 mov	 esp, ebp
  003be	5d		 pop	 ebp
  003bf	c3		 ret	 0
$LN33@AddLibmanL:
  003c0	08 00 00 00	 DD	 8
  003c4	00 00 00 00	 DD	 $LN32@AddLibmanL
$LN32@AddLibmanL:
  003c8	b8 ff ff ff	 DD	 -72			; ffffffb8H
  003cc	04 00 00 00	 DD	 4
  003d0	00 00 00 00	 DD	 $LN24@AddLibmanL
  003d4	b0 fd ff ff	 DD	 -592			; fffffdb0H
  003d8	00 02 00 00	 DD	 512			; 00000200H
  003dc	00 00 00 00	 DD	 $LN25@AddLibmanL
  003e0	a8 fb ff ff	 DD	 -1112			; fffffba8H
  003e4	00 02 00 00	 DD	 512			; 00000200H
  003e8	00 00 00 00	 DD	 $LN26@AddLibmanL
  003ec	a0 f9 ff ff	 DD	 -1632			; fffff9a0H
  003f0	00 02 00 00	 DD	 512			; 00000200H
  003f4	00 00 00 00	 DD	 $LN27@AddLibmanL
  003f8	98 f7 ff ff	 DD	 -2152			; fffff798H
  003fc	00 02 00 00	 DD	 512			; 00000200H
  00400	00 00 00 00	 DD	 $LN28@AddLibmanL
  00404	90 f5 ff ff	 DD	 -2672			; fffff590H
  00408	00 02 00 00	 DD	 512			; 00000200H
  0040c	00 00 00 00	 DD	 $LN29@AddLibmanL
  00410	88 f3 ff ff	 DD	 -3192			; fffff388H
  00414	00 02 00 00	 DD	 512			; 00000200H
  00418	00 00 00 00	 DD	 $LN30@AddLibmanL
  0041c	80 f1 ff ff	 DD	 -3712			; fffff180H
  00420	00 02 00 00	 DD	 512			; 00000200H
  00424	00 00 00 00	 DD	 $LN31@AddLibmanL
$LN31@AddLibmanL:
  00428	73		 DB	 115			; 00000073H
  00429	74		 DB	 116			; 00000074H
  0042a	72		 DB	 114			; 00000072H
  0042b	36		 DB	 54			; 00000036H
  0042c	00		 DB	 0
$LN30@AddLibmanL:
  0042d	73		 DB	 115			; 00000073H
  0042e	74		 DB	 116			; 00000074H
  0042f	72		 DB	 114			; 00000072H
  00430	34		 DB	 52			; 00000034H
  00431	00		 DB	 0
$LN29@AddLibmanL:
  00432	73		 DB	 115			; 00000073H
  00433	74		 DB	 116			; 00000074H
  00434	72		 DB	 114			; 00000072H
  00435	33		 DB	 51			; 00000033H
  00436	00		 DB	 0
$LN28@AddLibmanL:
  00437	4c		 DB	 76			; 0000004cH
  00438	61		 DB	 97			; 00000061H
  00439	6e		 DB	 110			; 0000006eH
  0043a	67		 DB	 103			; 00000067H
  0043b	75		 DB	 117			; 00000075H
  0043c	61		 DB	 97			; 00000061H
  0043d	67		 DB	 103			; 00000067H
  0043e	65		 DB	 101			; 00000065H
  0043f	46		 DB	 70			; 00000046H
  00440	69		 DB	 105			; 00000069H
  00441	6c		 DB	 108			; 0000006cH
  00442	65		 DB	 101			; 00000065H
  00443	4e		 DB	 78			; 0000004eH
  00444	61		 DB	 97			; 00000061H
  00445	6d		 DB	 109			; 0000006dH
  00446	65		 DB	 101			; 00000065H
  00447	00		 DB	 0
$LN27@AddLibmanL:
  00448	73		 DB	 115			; 00000073H
  00449	74		 DB	 116			; 00000074H
  0044a	72		 DB	 114			; 00000072H
  0044b	00		 DB	 0
$LN26@AddLibmanL:
  0044c	73		 DB	 115			; 00000073H
  0044d	74		 DB	 116			; 00000074H
  0044e	72		 DB	 114			; 00000072H
  0044f	32		 DB	 50			; 00000032H
  00450	00		 DB	 0
$LN25@AddLibmanL:
  00451	4c		 DB	 76			; 0000004cH
  00452	69		 DB	 105			; 00000069H
  00453	6e		 DB	 110			; 0000006eH
  00454	65		 DB	 101			; 00000065H
  00455	42		 DB	 66			; 00000042H
  00456	75		 DB	 117			; 00000075H
  00457	66		 DB	 102			; 00000066H
  00458	00		 DB	 0
$LN24@AddLibmanL:
  00459	53		 DB	 83			; 00000053H
  0045a	74		 DB	 116			; 00000074H
  0045b	72		 DB	 114			; 00000072H
  0045c	69		 DB	 105			; 00000069H
  0045d	6e		 DB	 110			; 0000006eH
  0045e	67		 DB	 103			; 00000067H
  0045f	4e		 DB	 78			; 0000004eH
  00460	72		 DB	 114			; 00000072H
  00461	00		 DB	 0
_AddLibmanLanguageStrings ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _AddLibmanLanguageString
_TEXT	SEGMENT
_Length$ = -8						; size = 4
_ID$ = 8						; size = 4
_Text$ = 12						; size = 4
_AddLibmanLanguageString PROC				; COMDAT

; 2735 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 2736 :   int32 Length;
; 2737 : 
; 2738 :   Length=strlen(Text);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _Text$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 _strlen
  00027	83 c4 04	 add	 esp, 4
  0002a	89 45 f8	 mov	 DWORD PTR _Length$[ebp], eax

; 2739 :   if (Length==0) return -1;

  0002d	83 7d f8 00	 cmp	 DWORD PTR _Length$[ebp], 0
  00031	75 08		 jne	 SHORT $LN2@AddLibmanL
  00033	83 c8 ff	 or	 eax, -1
  00036	e9 84 00 00 00	 jmp	 $LN1@AddLibmanL
$LN2@AddLibmanL:

; 2740 :   if ((ID<0)
; 2741 :      ||

  0003b	83 7d 08 00	 cmp	 DWORD PTR _ID$[ebp], 0
  0003f	7c 09		 jl	 SHORT $LN4@AddLibmanL
  00041	81 7d 08 00 04
	00 00		 cmp	 DWORD PTR _ID$[ebp], 1024 ; 00000400H
  00048	7c 05		 jl	 SHORT $LN3@AddLibmanL
$LN4@AddLibmanL:

; 2742 :      (ID>=MaxNrLibmanNames)) return -1;

  0004a	83 c8 ff	 or	 eax, -1
  0004d	eb 70		 jmp	 SHORT $LN1@AddLibmanL
$LN3@AddLibmanL:

; 2743 :   if (LibmanNamesPos+Length+2>=LibmanNamesBufSize) return -1;

  0004f	8b 45 f8	 mov	 eax, DWORD PTR _Length$[ebp]
  00052	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LibmanNamesPos
  00058	8d 54 01 02	 lea	 edx, DWORD PTR [ecx+eax+2]
  0005c	81 fa 00 80 00
	00		 cmp	 edx, 32768		; 00008000H
  00062	7c 05		 jl	 SHORT $LN5@AddLibmanL
  00064	83 c8 ff	 or	 eax, -1
  00067	eb 56		 jmp	 SHORT $LN1@AddLibmanL
$LN5@AddLibmanL:

; 2744 : 
; 2745 :   LibmanNamesId[ID]=(LPSTR)&LibmanNamesBuf[LibmanNamesPos];

  00069	a1 00 00 00 00	 mov	 eax, DWORD PTR _LibmanNamesPos
  0006e	05 00 00 00 00	 add	 eax, OFFSET _LibmanNamesBuf
  00073	8b 4d 08	 mov	 ecx, DWORD PTR _ID$[ebp]
  00076	89 04 8d 00 00
	00 00		 mov	 DWORD PTR _LibmanNamesId[ecx*4], eax

; 2746 :   memmove(&LibmanNamesBuf[LibmanNamesPos],Text,Length+1);

  0007d	8b 45 f8	 mov	 eax, DWORD PTR _Length$[ebp]
  00080	83 c0 01	 add	 eax, 1
  00083	50		 push	 eax
  00084	8b 4d 0c	 mov	 ecx, DWORD PTR _Text$[ebp]
  00087	51		 push	 ecx
  00088	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _LibmanNamesPos
  0008e	81 c2 00 00 00
	00		 add	 edx, OFFSET _LibmanNamesBuf
  00094	52		 push	 edx
  00095	e8 00 00 00 00	 call	 _memmove
  0009a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2747 :   LibmanNamesPos+=Length+1;

  0009d	8b 45 f8	 mov	 eax, DWORD PTR _Length$[ebp]
  000a0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LibmanNamesPos
  000a6	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  000aa	89 15 00 00 00
	00		 mov	 DWORD PTR _LibmanNamesPos, edx

; 2748 :   TotalNrLibmanNames++;

  000b0	a1 00 00 00 00	 mov	 eax, DWORD PTR _TotalNrLibmanNames
  000b5	83 c0 01	 add	 eax, 1
  000b8	a3 00 00 00 00	 mov	 DWORD PTR _TotalNrLibmanNames, eax

; 2749 : 
; 2750 :   return 0;

  000bd	33 c0		 xor	 eax, eax
$LN1@AddLibmanL:

; 2751 : }

  000bf	5f		 pop	 edi
  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000c8	3b ec		 cmp	 ebp, esp
  000ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
_AddLibmanLanguageString ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _DecodeParameters
_TEXT	SEGMENT
_pos$ = -32						; size = 4
_lengte$ = -20						; size = 4
_cnt$ = -8						; size = 4
_DecodeParameters PROC					; COMDAT

; 2692 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00012	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 2693 :   int32 cnt,lengte,pos;
; 2694 : 
; 2695 : 
; 2696 :   pos=0;

  0001e	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _pos$[ebp], 0

; 2697 :   lengte=1000;

  00025	c7 45 ec e8 03
	00 00		 mov	 DWORD PTR _lengte$[ebp], 1000 ; 000003e8H

; 2698 : 
; 2699 :   for (cnt=0;cnt<NrParams;cnt++) {

  0002c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cnt$[ebp], 0
  00033	eb 09		 jmp	 SHORT $LN4@DecodePara
$LN2@DecodePara:
  00035	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00038	83 c0 01	 add	 eax, 1
  0003b	89 45 f8	 mov	 DWORD PTR _cnt$[ebp], eax
$LN4@DecodePara:
  0003e	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00041	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR _NrParams
  00047	0f 8d 44 01 00
	00		 jge	 $LN1@DecodePara

; 2700 :     if (Parameters[cnt].Option[0]!=0) {

  0004d	69 45 f8 58 02
	00 00		 imul	 eax, DWORD PTR _cnt$[ebp], 600
  00054	b9 01 00 00 00	 mov	 ecx, 1
  00059	6b d1 00	 imul	 edx, ecx, 0
  0005c	0f be 84 10 00
	00 00 00	 movsx	 eax, BYTE PTR _Parameters[eax+edx]
  00064	85 c0		 test	 eax, eax
  00066	0f 84 20 01 00
	00		 je	 $LN6@DecodePara

; 2701 :       if (strnicmp(Parameters[cnt].Option,"g",lengte)==0) {

  0006c	8b 45 ec	 mov	 eax, DWORD PTR _lengte$[ebp]
  0006f	50		 push	 eax
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_01JEJKBAGA@g?$AA@
  00075	69 4d f8 58 02
	00 00		 imul	 ecx, DWORD PTR _cnt$[ebp], 600
  0007c	81 c1 00 00 00
	00		 add	 ecx, OFFSET _Parameters
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 _strnicmp
  00088	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008b	85 c0		 test	 eax, eax
  0008d	75 0a		 jne	 SHORT $LN7@DecodePara

; 2702 :         LibraryMode=1;

  0008f	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _LibraryMode, 1
$LN7@DecodePara:

; 2703 :       }
; 2704 :       if (strnicmp(Parameters[cnt].Option,"d",lengte)==0) {

  00099	8b 45 ec	 mov	 eax, DWORD PTR _lengte$[ebp]
  0009c	50		 push	 eax
  0009d	68 00 00 00 00	 push	 OFFSET ??_C@_01LPLHEDKD@d?$AA@
  000a2	69 4d f8 58 02
	00 00		 imul	 ecx, DWORD PTR _cnt$[ebp], 600
  000a9	81 c1 00 00 00
	00		 add	 ecx, OFFSET _Parameters
  000af	51		 push	 ecx
  000b0	e8 00 00 00 00	 call	 _strnicmp
  000b5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b8	85 c0		 test	 eax, eax
  000ba	75 1f		 jne	 SHORT $LN8@DecodePara

; 2705 :         strcpy(ExportDir,(LPSTR)&Parameters[cnt].Parameter[pos]);

  000bc	69 45 f8 58 02
	00 00		 imul	 eax, DWORD PTR _cnt$[ebp], 600
  000c3	8b 4d e0	 mov	 ecx, DWORD PTR _pos$[ebp]
  000c6	8d 94 08 c8 00
	00 00		 lea	 edx, DWORD PTR _Parameters[eax+ecx+200]
  000cd	52		 push	 edx
  000ce	68 00 00 00 00	 push	 OFFSET _ExportDir
  000d3	e8 00 00 00 00	 call	 _strcpy
  000d8	83 c4 08	 add	 esp, 8
$LN8@DecodePara:

; 2706 :       }
; 2707 :       if (strnicmp(Parameters[cnt].Option,"e",lengte)==0) {

  000db	8b 45 ec	 mov	 eax, DWORD PTR _lengte$[ebp]
  000de	50		 push	 eax
  000df	68 00 00 00 00	 push	 OFFSET ??_C@_01KGKMHCOC@e?$AA@
  000e4	69 4d f8 58 02
	00 00		 imul	 ecx, DWORD PTR _cnt$[ebp], 600
  000eb	81 c1 00 00 00
	00		 add	 ecx, OFFSET _Parameters
  000f1	51		 push	 ecx
  000f2	e8 00 00 00 00	 call	 _strnicmp
  000f7	83 c4 0c	 add	 esp, 12			; 0000000cH
  000fa	85 c0		 test	 eax, eax
  000fc	75 1f		 jne	 SHORT $LN9@DecodePara

; 2708 :         strcpy(ExePath,(LPSTR)&Parameters[cnt].Parameter[pos]);

  000fe	69 45 f8 58 02
	00 00		 imul	 eax, DWORD PTR _cnt$[ebp], 600
  00105	8b 4d e0	 mov	 ecx, DWORD PTR _pos$[ebp]
  00108	8d 94 08 c8 00
	00 00		 lea	 edx, DWORD PTR _Parameters[eax+ecx+200]
  0010f	52		 push	 edx
  00110	68 00 00 00 00	 push	 OFFSET _ExePath
  00115	e8 00 00 00 00	 call	 _strcpy
  0011a	83 c4 08	 add	 esp, 8
$LN9@DecodePara:

; 2709 :       }
; 2710 :       if (strnicmp(Parameters[cnt].Option,"u",lengte)==0) {

  0011d	8b 45 ec	 mov	 eax, DWORD PTR _lengte$[ebp]
  00120	50		 push	 eax
  00121	68 00 00 00 00	 push	 OFFSET ??_C@_01OMGOGALD@u?$AA@
  00126	69 4d f8 58 02
	00 00		 imul	 ecx, DWORD PTR _cnt$[ebp], 600
  0012d	81 c1 00 00 00
	00		 add	 ecx, OFFSET _Parameters
  00133	51		 push	 ecx
  00134	e8 00 00 00 00	 call	 _strnicmp
  00139	83 c4 0c	 add	 esp, 12			; 0000000cH
  0013c	85 c0		 test	 eax, eax
  0013e	75 1f		 jne	 SHORT $LN10@DecodePara

; 2711 :         strcpy(ProjectPath,(LPSTR)&Parameters[cnt].Parameter[pos]);

  00140	69 45 f8 58 02
	00 00		 imul	 eax, DWORD PTR _cnt$[ebp], 600
  00147	8b 4d e0	 mov	 ecx, DWORD PTR _pos$[ebp]
  0014a	8d 94 08 c8 00
	00 00		 lea	 edx, DWORD PTR _Parameters[eax+ecx+200]
  00151	52		 push	 edx
  00152	68 00 00 00 00	 push	 OFFSET _ProjectPath
  00157	e8 00 00 00 00	 call	 _strcpy
  0015c	83 c4 08	 add	 esp, 8
$LN10@DecodePara:

; 2712 :       }
; 2713 :       if (strnicmp(Parameters[cnt].Option,"o",lengte)==0) {

  0015f	8b 45 ec	 mov	 eax, DWORD PTR _lengte$[ebp]
  00162	50		 push	 eax
  00163	68 00 00 00 00	 push	 OFFSET ??_C@_01FMEDJKGI@o?$AA@
  00168	69 4d f8 58 02
	00 00		 imul	 ecx, DWORD PTR _cnt$[ebp], 600
  0016f	81 c1 00 00 00
	00		 add	 ecx, OFFSET _Parameters
  00175	51		 push	 ecx
  00176	e8 00 00 00 00	 call	 _strnicmp
  0017b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0017e	85 c0		 test	 eax, eax
  00180	75 0a		 jne	 SHORT $LN6@DecodePara

; 2714 :         ProjectActive=1;

  00182	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _ProjectActive, 1
$LN6@DecodePara:

; 2715 :       }
; 2716 :     } else {
; 2717 : /*
; 2718 :       if (GetFullPathName(Parameters[cnt].Parameter,150,EditFile,&FileName)==0) {
; 2719 :         MessageBox(PCBWindow,str,"Error in opening file",MB_APPLMODAL|MB_OK);
; 2720 :         EditFile[0]=0;
; 2721 :       }
; 2722 : */
; 2723 :     }
; 2724 :   }

  0018c	e9 a4 fe ff ff	 jmp	 $LN2@DecodePara
$LN1@DecodePara:

; 2725 : }

  00191	5f		 pop	 edi
  00192	5e		 pop	 esi
  00193	5b		 pop	 ebx
  00194	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  0019a	3b ec		 cmp	 ebp, esp
  0019c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a1	8b e5		 mov	 esp, ebp
  001a3	5d		 pop	 ebp
  001a4	c3		 ret	 0
_DecodeParameters ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _LIBMANCommand
_TEXT	SEGMENT
tv64 = -4524						; size = 4
_Wstr$ = -3172						; size = 1024
_FileName$ = -2140					; size = 512
_Dir$ = -1620						; size = 512
_str2$ = -1100						; size = 512
_str$ = -580						; size = 512
_NrFiles$ = -60						; size = 4
_res$ = -48						; size = 4
_cnt$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hwnd$ = 8						; size = 4
_WParam$ = 12						; size = 4
_LParam$ = 16						; size = 4
_LIBMANCommand PROC					; COMDAT

; 2263 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 ac 11 00 00	 mov	 eax, 4524		; 000011acH
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	53		 push	 ebx
  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	8d bd 54 ee ff
	ff		 lea	 edi, DWORD PTR [ebp-4524]
  00016	b9 6b 04 00 00	 mov	 ecx, 1131		; 0000046bH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 2264 :   int32  cnt,cnt2,length,res,NrFiles;
; 2265 :   char   str[MAX_LENGTH_STRING],str2[MAX_LENGTH_STRING],
; 2266 :          Dir[MAX_LENGTH_STRING],FileName[MAX_LENGTH_STRING];
; 2267 :   WCHAR  Wstr[MAX_LENGTH_STRING];
; 2268 : 
; 2269 :   switch (WParam) {

  0002c	8b 45 0c	 mov	 eax, DWORD PTR _WParam$[ebp]
  0002f	89 85 54 ee ff
	ff		 mov	 DWORD PTR tv64[ebp], eax
  00035	81 bd 54 ee ff
	ff 0c 0e 00 00	 cmp	 DWORD PTR tv64[ebp], 3596 ; 00000e0cH
  0003f	77 3c		 ja	 SHORT $LN69@LIBMANComm
  00041	81 bd 54 ee ff
	ff 0c 0e 00 00	 cmp	 DWORD PTR tv64[ebp], 3596 ; 00000e0cH
  0004b	0f 84 bb 09 00
	00		 je	 $LN60@LIBMANComm
  00051	8b 8d 54 ee ff
	ff		 mov	 ecx, DWORD PTR tv64[ebp]
  00057	81 e9 34 08 00
	00		 sub	 ecx, 2100		; 00000834H
  0005d	89 8d 54 ee ff
	ff		 mov	 DWORD PTR tv64[ebp], ecx
  00063	83 bd 54 ee ff
	ff 21		 cmp	 DWORD PTR tv64[ebp], 33	; 00000021H
  0006a	0f 87 78 0b 00
	00		 ja	 $LN1@LIBMANComm
  00070	8b 95 54 ee ff
	ff		 mov	 edx, DWORD PTR tv64[ebp]
  00076	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN77@LIBMANComm[edx*4]
$LN69@LIBMANComm:
  0007d	81 bd 54 ee ff
	ff 56 0e 00 00	 cmp	 DWORD PTR tv64[ebp], 3670 ; 00000e56H
  00087	0f 82 5b 0b 00
	00		 jb	 $LN1@LIBMANComm
  0008d	81 bd 54 ee ff
	ff 57 0e 00 00	 cmp	 DWORD PTR tv64[ebp], 3671 ; 00000e57H
  00097	0f 86 79 09 00
	00		 jbe	 $LN61@LIBMANComm
  0009d	81 bd 54 ee ff
	ff d8 52 00 00	 cmp	 DWORD PTR tv64[ebp], 21208 ; 000052d8H
  000a7	0f 84 5f 09 00
	00		 je	 $LN60@LIBMANComm
  000ad	e9 36 0b 00 00	 jmp	 $LN1@LIBMANComm
$LN7@LIBMANComm:

; 2270 :     case ID_FILE_EXIT:
; 2271 :       SendMessage(LIBMANWindow,WM_CLOSE,0,0);

  000b2	8b f4		 mov	 esi, esp
  000b4	6a 00		 push	 0
  000b6	6a 00		 push	 0
  000b8	6a 10		 push	 16			; 00000010H
  000ba	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  000bf	50		 push	 eax
  000c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  000c6	3b f4		 cmp	 esi, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2272 :       break;

  000cd	e9 16 0b 00 00	 jmp	 $LN1@LIBMANComm
$LN8@LIBMANComm:

; 2273 :     case ID_OPEN_LIB1:
; 2274 :       LoadLib(0);

  000d2	6a 00		 push	 0
  000d4	e8 00 00 00 00	 call	 _LoadLib
  000d9	83 c4 04	 add	 esp, 4

; 2275 :       SymbolToBeEditedPos[0]=0;

  000dc	b8 04 00 00 00	 mov	 eax, 4
  000e1	6b c8 00	 imul	 ecx, eax, 0
  000e4	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _SymbolToBeEditedPos[ecx], 0

; 2276 :       break;

  000ee	e9 f5 0a 00 00	 jmp	 $LN1@LIBMANComm
$LN9@LIBMANComm:

; 2277 :     case ID_OPEN_LIB2:
; 2278 :       LoadLib(1);

  000f3	6a 01		 push	 1
  000f5	e8 00 00 00 00	 call	 _LoadLib
  000fa	83 c4 04	 add	 esp, 4

; 2279 :       SymbolToBeEditedPos[1]=0;

  000fd	b8 04 00 00 00	 mov	 eax, 4
  00102	c1 e0 00	 shl	 eax, 0
  00105	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _SymbolToBeEditedPos[eax], 0

; 2280 :       break;

  0010f	e9 d4 0a 00 00	 jmp	 $LN1@LIBMANComm
$LN10@LIBMANComm:

; 2281 :     case ID_CREATE_LIB1:
; 2282 :       MakeNewLib(0);

  00114	6a 00		 push	 0
  00116	e8 00 00 00 00	 call	 _MakeNewLib
  0011b	83 c4 04	 add	 esp, 4

; 2283 :       SymbolToBeEditedPos[0]=0;

  0011e	b8 04 00 00 00	 mov	 eax, 4
  00123	6b c8 00	 imul	 ecx, eax, 0
  00126	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _SymbolToBeEditedPos[ecx], 0

; 2284 :       break;

  00130	e9 b3 0a 00 00	 jmp	 $LN1@LIBMANComm
$LN11@LIBMANComm:

; 2285 :     case ID_CREATE_LIB2:
; 2286 :       MakeNewLib(1);

  00135	6a 01		 push	 1
  00137	e8 00 00 00 00	 call	 _MakeNewLib
  0013c	83 c4 04	 add	 esp, 4

; 2287 :       SymbolToBeEditedPos[0]=1;

  0013f	b8 04 00 00 00	 mov	 eax, 4
  00144	6b c8 00	 imul	 ecx, eax, 0
  00147	c7 81 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _SymbolToBeEditedPos[ecx], 1

; 2288 :       break;

  00151	e9 92 0a 00 00	 jmp	 $LN1@LIBMANComm
$LN12@LIBMANComm:

; 2289 :     case ID_CLOSE_LIB1:
; 2290 :       CloseLib(0);

  00156	6a 00		 push	 0
  00158	e8 00 00 00 00	 call	 _CloseLib
  0015d	83 c4 04	 add	 esp, 4

; 2291 :       SymbolToBeEditedPos[0]=0;

  00160	b8 04 00 00 00	 mov	 eax, 4
  00165	6b c8 00	 imul	 ecx, eax, 0
  00168	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _SymbolToBeEditedPos[ecx], 0

; 2292 :       break;

  00172	e9 71 0a 00 00	 jmp	 $LN1@LIBMANComm
$LN13@LIBMANComm:

; 2293 :     case ID_CLOSE_LIB2:
; 2294 :       CloseLib(1);

  00177	6a 01		 push	 1
  00179	e8 00 00 00 00	 call	 _CloseLib
  0017e	83 c4 04	 add	 esp, 4

; 2295 :       SymbolToBeEditedPos[1]=0;

  00181	b8 04 00 00 00	 mov	 eax, 4
  00186	c1 e0 00	 shl	 eax, 0
  00189	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _SymbolToBeEditedPos[eax], 0

; 2296 :       break;

  00193	e9 50 0a 00 00	 jmp	 $LN1@LIBMANComm
$LN14@LIBMANComm:

; 2297 :     case ID_IMPORT_SYMBOLS1:
; 2298 :       if (LibraryFile[0][0]!=0) {

  00198	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  0019d	6b c8 00	 imul	 ecx, eax, 0
  001a0	ba 01 00 00 00	 mov	 edx, 1
  001a5	6b c2 00	 imul	 eax, edx, 0
  001a8	0f be 8c 01 00
	00 00 00	 movsx	 ecx, BYTE PTR _LibraryFile[ecx+eax]
  001b0	85 c9		 test	 ecx, ecx
  001b2	74 1d		 je	 SHORT $LN15@LIBMANComm

; 2299 :         if (LoadSymbolFileNames(0)==1) {

  001b4	6a 00		 push	 0
  001b6	e8 00 00 00 00	 call	 _LoadSymbolFileNames
  001bb	83 c4 04	 add	 esp, 4
  001be	83 f8 01	 cmp	 eax, 1
  001c1	75 0c		 jne	 SHORT $LN17@LIBMANComm

; 2300 :           AddSymbols(0,0);

  001c3	6a 00		 push	 0
  001c5	6a 00		 push	 0
  001c7	e8 00 00 00 00	 call	 _AddSymbols
  001cc	83 c4 08	 add	 esp, 8
$LN17@LIBMANComm:

; 2301 :         }
; 2302 :       } else {

  001cf	eb 30		 jmp	 SHORT $LN16@LIBMANComm
$LN15@LIBMANComm:

; 2303 :         MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  001d1	6a 00		 push	 0
  001d3	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  001d8	6a 09		 push	 9
  001da	e8 00 00 00 00	 call	 _StringConvert
  001df	83 c4 08	 add	 esp, 8
  001e2	50		 push	 eax
  001e3	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  001e8	6a 08		 push	 8
  001ea	e8 00 00 00 00	 call	 _StringConvert
  001ef	83 c4 08	 add	 esp, 8
  001f2	50		 push	 eax
  001f3	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  001f8	50		 push	 eax
  001f9	e8 00 00 00 00	 call	 _MessageBoxUTF8
  001fe	83 c4 10	 add	 esp, 16			; 00000010H
$LN16@LIBMANComm:

; 2304 :       }
; 2305 :       break;

  00201	e9 e2 09 00 00	 jmp	 $LN1@LIBMANComm
$LN18@LIBMANComm:

; 2306 :     case ID_IMPORT_SYMBOLS2:
; 2307 :       if (LibraryFile[1][0]!=0) {

  00206	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  0020b	c1 e0 00	 shl	 eax, 0
  0020e	b9 01 00 00 00	 mov	 ecx, 1
  00213	6b d1 00	 imul	 edx, ecx, 0
  00216	0f be 84 10 00
	00 00 00	 movsx	 eax, BYTE PTR _LibraryFile[eax+edx]
  0021e	85 c0		 test	 eax, eax
  00220	74 1d		 je	 SHORT $LN19@LIBMANComm

; 2308 :         if (LoadSymbolFileNames(1)==1) {

  00222	6a 01		 push	 1
  00224	e8 00 00 00 00	 call	 _LoadSymbolFileNames
  00229	83 c4 04	 add	 esp, 4
  0022c	83 f8 01	 cmp	 eax, 1
  0022f	75 0c		 jne	 SHORT $LN21@LIBMANComm

; 2309 :           AddSymbols(1,0);

  00231	6a 00		 push	 0
  00233	6a 01		 push	 1
  00235	e8 00 00 00 00	 call	 _AddSymbols
  0023a	83 c4 08	 add	 esp, 8
$LN21@LIBMANComm:

; 2310 :         }
; 2311 :       } else {

  0023d	eb 30		 jmp	 SHORT $LN20@LIBMANComm
$LN19@LIBMANComm:

; 2312 :         MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  0023f	6a 00		 push	 0
  00241	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00246	6a 09		 push	 9
  00248	e8 00 00 00 00	 call	 _StringConvert
  0024d	83 c4 08	 add	 esp, 8
  00250	50		 push	 eax
  00251	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  00256	6a 08		 push	 8
  00258	e8 00 00 00 00	 call	 _StringConvert
  0025d	83 c4 08	 add	 esp, 8
  00260	50		 push	 eax
  00261	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  00266	50		 push	 eax
  00267	e8 00 00 00 00	 call	 _MessageBoxUTF8
  0026c	83 c4 10	 add	 esp, 16			; 00000010H
$LN20@LIBMANComm:

; 2313 :       }
; 2314 :       break;

  0026f	e9 74 09 00 00	 jmp	 $LN1@LIBMANComm
$LN22@LIBMANComm:

; 2315 :     case ID_EXPORT_SYMBOLS1:
; 2316 :       if (LibraryFile[0][0]==0) {

  00274	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  00279	6b c8 00	 imul	 ecx, eax, 0
  0027c	ba 01 00 00 00	 mov	 edx, 1
  00281	6b c2 00	 imul	 eax, edx, 0
  00284	0f be 8c 01 00
	00 00 00	 movsx	 ecx, BYTE PTR _LibraryFile[ecx+eax]
  0028c	85 c9		 test	 ecx, ecx
  0028e	75 35		 jne	 SHORT $LN23@LIBMANComm

; 2317 :         MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  00290	6a 00		 push	 0
  00292	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00297	6a 09		 push	 9
  00299	e8 00 00 00 00	 call	 _StringConvert
  0029e	83 c4 08	 add	 esp, 8
  002a1	50		 push	 eax
  002a2	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  002a7	6a 08		 push	 8
  002a9	e8 00 00 00 00	 call	 _StringConvert
  002ae	83 c4 08	 add	 esp, 8
  002b1	50		 push	 eax
  002b2	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  002b7	50		 push	 eax
  002b8	e8 00 00 00 00	 call	 _MessageBoxUTF8
  002bd	83 c4 10	 add	 esp, 16			; 00000010H

; 2318 :         return;

  002c0	e9 23 09 00 00	 jmp	 $LN1@LIBMANComm
$LN23@LIBMANComm:

; 2319 :       }
; 2320 :       res=ExportSymbols(0,0);

  002c5	6a 00		 push	 0
  002c7	6a 00		 push	 0
  002c9	e8 00 00 00 00	 call	 _ExportSymbols
  002ce	83 c4 08	 add	 esp, 8
  002d1	89 45 d0	 mov	 DWORD PTR _res$[ebp], eax

; 2321 :       if (res>0) {

  002d4	83 7d d0 00	 cmp	 DWORD PTR _res$[ebp], 0
  002d8	0f 8e 83 00 00
	00		 jle	 $LN24@LIBMANComm

; 2322 :         if (LibraryMode==0) {

  002de	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  002e5	75 2a		 jne	 SHORT $LN25@LIBMANComm

; 2323 :           sprintf(str2,SC(46,"%d symbols added to directory %s"),res,ExportDir);

  002e7	68 00 00 00 00	 push	 OFFSET _ExportDir
  002ec	8b 45 d0	 mov	 eax, DWORD PTR _res$[ebp]
  002ef	50		 push	 eax
  002f0	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@JKDIKEEG@?$CFd?5symbols?5added?5to?5directory?5?$CFs@
  002f5	6a 2e		 push	 46			; 0000002eH
  002f7	e8 00 00 00 00	 call	 _StringConvert
  002fc	83 c4 08	 add	 esp, 8
  002ff	50		 push	 eax
  00300	8d 8d b4 fb ff
	ff		 lea	 ecx, DWORD PTR _str2$[ebp]
  00306	51		 push	 ecx
  00307	e8 00 00 00 00	 call	 _sprintf
  0030c	83 c4 10	 add	 esp, 16			; 00000010H

; 2324 :         } else {

  0030f	eb 28		 jmp	 SHORT $LN26@LIBMANComm
$LN25@LIBMANComm:

; 2325 :           sprintf(str2,SC(59,"%d geometries added to directory %s"),res,ExportDir);

  00311	68 00 00 00 00	 push	 OFFSET _ExportDir
  00316	8b 45 d0	 mov	 eax, DWORD PTR _res$[ebp]
  00319	50		 push	 eax
  0031a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@NKBHKMLM@?$CFd?5geometries?5added?5to?5directory@
  0031f	6a 3b		 push	 59			; 0000003bH
  00321	e8 00 00 00 00	 call	 _StringConvert
  00326	83 c4 08	 add	 esp, 8
  00329	50		 push	 eax
  0032a	8d 8d b4 fb ff
	ff		 lea	 ecx, DWORD PTR _str2$[ebp]
  00330	51		 push	 ecx
  00331	e8 00 00 00 00	 call	 _sprintf
  00336	83 c4 10	 add	 esp, 16			; 00000010H
$LN26@LIBMANComm:

; 2326 :         }
; 2327 :         MessageBoxUTF8(LIBMANWindow,str2,SC(60,"Message"),MB_OK);

  00339	6a 00		 push	 0
  0033b	68 00 00 00 00	 push	 OFFSET ??_C@_07BEIHKDLJ@Message?$AA@
  00340	6a 3c		 push	 60			; 0000003cH
  00342	e8 00 00 00 00	 call	 _StringConvert
  00347	83 c4 08	 add	 esp, 8
  0034a	50		 push	 eax
  0034b	8d 85 b4 fb ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  00351	50		 push	 eax
  00352	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00358	51		 push	 ecx
  00359	e8 00 00 00 00	 call	 _MessageBoxUTF8
  0035e	83 c4 10	 add	 esp, 16			; 00000010H
$LN24@LIBMANComm:

; 2328 :       }
; 2329 :       DeselectList1();

  00361	e8 00 00 00 00	 call	 _DeselectList1

; 2330 :       break;

  00366	e9 7d 08 00 00	 jmp	 $LN1@LIBMANComm
$LN27@LIBMANComm:

; 2331 :     case ID_EXPORT_SYMBOLS2:
; 2332 :       if (LibraryFile[1][0]==0) {

  0036b	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  00370	c1 e0 00	 shl	 eax, 0
  00373	b9 01 00 00 00	 mov	 ecx, 1
  00378	6b d1 00	 imul	 edx, ecx, 0
  0037b	0f be 84 10 00
	00 00 00	 movsx	 eax, BYTE PTR _LibraryFile[eax+edx]
  00383	85 c0		 test	 eax, eax
  00385	75 35		 jne	 SHORT $LN28@LIBMANComm

; 2333 :         MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  00387	6a 00		 push	 0
  00389	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  0038e	6a 09		 push	 9
  00390	e8 00 00 00 00	 call	 _StringConvert
  00395	83 c4 08	 add	 esp, 8
  00398	50		 push	 eax
  00399	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  0039e	6a 08		 push	 8
  003a0	e8 00 00 00 00	 call	 _StringConvert
  003a5	83 c4 08	 add	 esp, 8
  003a8	50		 push	 eax
  003a9	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  003ae	50		 push	 eax
  003af	e8 00 00 00 00	 call	 _MessageBoxUTF8
  003b4	83 c4 10	 add	 esp, 16			; 00000010H

; 2334 :         return;

  003b7	e9 2c 08 00 00	 jmp	 $LN1@LIBMANComm
$LN28@LIBMANComm:

; 2335 :       }
; 2336 :       res=ExportSymbols(1,0);

  003bc	6a 00		 push	 0
  003be	6a 01		 push	 1
  003c0	e8 00 00 00 00	 call	 _ExportSymbols
  003c5	83 c4 08	 add	 esp, 8
  003c8	89 45 d0	 mov	 DWORD PTR _res$[ebp], eax

; 2337 :       if (res>0) {

  003cb	83 7d d0 00	 cmp	 DWORD PTR _res$[ebp], 0
  003cf	0f 8e 83 00 00
	00		 jle	 $LN29@LIBMANComm

; 2338 :         if (LibraryMode==0) {

  003d5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  003dc	75 2a		 jne	 SHORT $LN30@LIBMANComm

; 2339 :           sprintf(str2,SC(46,"%d symbols added to directory %s"),res,ExportDir);

  003de	68 00 00 00 00	 push	 OFFSET _ExportDir
  003e3	8b 45 d0	 mov	 eax, DWORD PTR _res$[ebp]
  003e6	50		 push	 eax
  003e7	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@JKDIKEEG@?$CFd?5symbols?5added?5to?5directory?5?$CFs@
  003ec	6a 2e		 push	 46			; 0000002eH
  003ee	e8 00 00 00 00	 call	 _StringConvert
  003f3	83 c4 08	 add	 esp, 8
  003f6	50		 push	 eax
  003f7	8d 8d b4 fb ff
	ff		 lea	 ecx, DWORD PTR _str2$[ebp]
  003fd	51		 push	 ecx
  003fe	e8 00 00 00 00	 call	 _sprintf
  00403	83 c4 10	 add	 esp, 16			; 00000010H

; 2340 :         } else {

  00406	eb 28		 jmp	 SHORT $LN31@LIBMANComm
$LN30@LIBMANComm:

; 2341 :           sprintf(str2,SC(59,"%d geometries added to directory %s"),res,ExportDir);

  00408	68 00 00 00 00	 push	 OFFSET _ExportDir
  0040d	8b 45 d0	 mov	 eax, DWORD PTR _res$[ebp]
  00410	50		 push	 eax
  00411	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@NKBHKMLM@?$CFd?5geometries?5added?5to?5directory@
  00416	6a 3b		 push	 59			; 0000003bH
  00418	e8 00 00 00 00	 call	 _StringConvert
  0041d	83 c4 08	 add	 esp, 8
  00420	50		 push	 eax
  00421	8d 8d b4 fb ff
	ff		 lea	 ecx, DWORD PTR _str2$[ebp]
  00427	51		 push	 ecx
  00428	e8 00 00 00 00	 call	 _sprintf
  0042d	83 c4 10	 add	 esp, 16			; 00000010H
$LN31@LIBMANComm:

; 2342 :         }
; 2343 :         MessageBoxUTF8(LIBMANWindow,str2,SC(60,"Message"),MB_OK);

  00430	6a 00		 push	 0
  00432	68 00 00 00 00	 push	 OFFSET ??_C@_07BEIHKDLJ@Message?$AA@
  00437	6a 3c		 push	 60			; 0000003cH
  00439	e8 00 00 00 00	 call	 _StringConvert
  0043e	83 c4 08	 add	 esp, 8
  00441	50		 push	 eax
  00442	8d 85 b4 fb ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  00448	50		 push	 eax
  00449	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  0044f	51		 push	 ecx
  00450	e8 00 00 00 00	 call	 _MessageBoxUTF8
  00455	83 c4 10	 add	 esp, 16			; 00000010H
$LN29@LIBMANComm:

; 2344 :       }
; 2345 :       DeselectList2();

  00458	e8 00 00 00 00	 call	 _DeselectList2

; 2346 :       break;

  0045d	e9 86 07 00 00	 jmp	 $LN1@LIBMANComm
$LN32@LIBMANComm:

; 2347 :     case ID_DELETE_SYMBOLS1:
; 2348 :       if (LibraryFile[0][0]==0) {

  00462	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  00467	6b c8 00	 imul	 ecx, eax, 0
  0046a	ba 01 00 00 00	 mov	 edx, 1
  0046f	6b c2 00	 imul	 eax, edx, 0
  00472	0f be 8c 01 00
	00 00 00	 movsx	 ecx, BYTE PTR _LibraryFile[ecx+eax]
  0047a	85 c9		 test	 ecx, ecx
  0047c	75 35		 jne	 SHORT $LN33@LIBMANComm

; 2349 :         MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  0047e	6a 00		 push	 0
  00480	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00485	6a 09		 push	 9
  00487	e8 00 00 00 00	 call	 _StringConvert
  0048c	83 c4 08	 add	 esp, 8
  0048f	50		 push	 eax
  00490	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  00495	6a 08		 push	 8
  00497	e8 00 00 00 00	 call	 _StringConvert
  0049c	83 c4 08	 add	 esp, 8
  0049f	50		 push	 eax
  004a0	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  004a5	50		 push	 eax
  004a6	e8 00 00 00 00	 call	 _MessageBoxUTF8
  004ab	83 c4 10	 add	 esp, 16			; 00000010H

; 2350 :         return;

  004ae	e9 35 07 00 00	 jmp	 $LN1@LIBMANComm
$LN33@LIBMANComm:

; 2351 :       }
; 2352 :       DeleteSymbols(0);

  004b3	6a 00		 push	 0
  004b5	e8 00 00 00 00	 call	 _DeleteSymbols
  004ba	83 c4 04	 add	 esp, 4

; 2353 :       break;

  004bd	e9 26 07 00 00	 jmp	 $LN1@LIBMANComm
$LN34@LIBMANComm:

; 2354 :     case ID_DELETE_SYMBOLS2:
; 2355 :       if (LibraryFile[1][0]==0) {

  004c2	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  004c7	c1 e0 00	 shl	 eax, 0
  004ca	b9 01 00 00 00	 mov	 ecx, 1
  004cf	6b d1 00	 imul	 edx, ecx, 0
  004d2	0f be 84 10 00
	00 00 00	 movsx	 eax, BYTE PTR _LibraryFile[eax+edx]
  004da	85 c0		 test	 eax, eax
  004dc	75 35		 jne	 SHORT $LN35@LIBMANComm

; 2356 :         MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  004de	6a 00		 push	 0
  004e0	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  004e5	6a 09		 push	 9
  004e7	e8 00 00 00 00	 call	 _StringConvert
  004ec	83 c4 08	 add	 esp, 8
  004ef	50		 push	 eax
  004f0	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  004f5	6a 08		 push	 8
  004f7	e8 00 00 00 00	 call	 _StringConvert
  004fc	83 c4 08	 add	 esp, 8
  004ff	50		 push	 eax
  00500	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  00505	50		 push	 eax
  00506	e8 00 00 00 00	 call	 _MessageBoxUTF8
  0050b	83 c4 10	 add	 esp, 16			; 00000010H

; 2357 :         return;

  0050e	e9 d5 06 00 00	 jmp	 $LN1@LIBMANComm
$LN35@LIBMANComm:

; 2358 :       }
; 2359 :       DeleteSymbols(1);

  00513	6a 01		 push	 1
  00515	e8 00 00 00 00	 call	 _DeleteSymbols
  0051a	83 c4 04	 add	 esp, 4

; 2360 :       break;

  0051d	e9 c6 06 00 00	 jmp	 $LN1@LIBMANComm
$LN36@LIBMANComm:

; 2361 :     case ID_DESELECT_ALL1:
; 2362 :       if (LibraryFile[0][0]==0) {

  00522	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  00527	6b c8 00	 imul	 ecx, eax, 0
  0052a	ba 01 00 00 00	 mov	 edx, 1
  0052f	6b c2 00	 imul	 eax, edx, 0
  00532	0f be 8c 01 00
	00 00 00	 movsx	 ecx, BYTE PTR _LibraryFile[ecx+eax]
  0053a	85 c9		 test	 ecx, ecx
  0053c	75 35		 jne	 SHORT $LN37@LIBMANComm

; 2363 :         MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  0053e	6a 00		 push	 0
  00540	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00545	6a 09		 push	 9
  00547	e8 00 00 00 00	 call	 _StringConvert
  0054c	83 c4 08	 add	 esp, 8
  0054f	50		 push	 eax
  00550	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  00555	6a 08		 push	 8
  00557	e8 00 00 00 00	 call	 _StringConvert
  0055c	83 c4 08	 add	 esp, 8
  0055f	50		 push	 eax
  00560	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  00565	50		 push	 eax
  00566	e8 00 00 00 00	 call	 _MessageBoxUTF8
  0056b	83 c4 10	 add	 esp, 16			; 00000010H

; 2364 :         return;

  0056e	e9 75 06 00 00	 jmp	 $LN1@LIBMANComm
$LN37@LIBMANComm:

; 2365 :       }
; 2366 :       DeselectList1();

  00573	e8 00 00 00 00	 call	 _DeselectList1

; 2367 :       break;

  00578	e9 6b 06 00 00	 jmp	 $LN1@LIBMANComm
$LN38@LIBMANComm:

; 2368 :     case ID_DESELECT_ALL2:
; 2369 :       if (LibraryFile[1][0]==0) {

  0057d	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  00582	c1 e0 00	 shl	 eax, 0
  00585	b9 01 00 00 00	 mov	 ecx, 1
  0058a	6b d1 00	 imul	 edx, ecx, 0
  0058d	0f be 84 10 00
	00 00 00	 movsx	 eax, BYTE PTR _LibraryFile[eax+edx]
  00595	85 c0		 test	 eax, eax
  00597	75 35		 jne	 SHORT $LN39@LIBMANComm

; 2370 :         MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  00599	6a 00		 push	 0
  0059b	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  005a0	6a 09		 push	 9
  005a2	e8 00 00 00 00	 call	 _StringConvert
  005a7	83 c4 08	 add	 esp, 8
  005aa	50		 push	 eax
  005ab	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  005b0	6a 08		 push	 8
  005b2	e8 00 00 00 00	 call	 _StringConvert
  005b7	83 c4 08	 add	 esp, 8
  005ba	50		 push	 eax
  005bb	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  005c0	50		 push	 eax
  005c1	e8 00 00 00 00	 call	 _MessageBoxUTF8
  005c6	83 c4 10	 add	 esp, 16			; 00000010H

; 2371 :         return;

  005c9	e9 1a 06 00 00	 jmp	 $LN1@LIBMANComm
$LN39@LIBMANComm:

; 2372 :       }
; 2373 :       DeselectList2();

  005ce	e8 00 00 00 00	 call	 _DeselectList2

; 2374 :       break;

  005d3	e9 10 06 00 00	 jmp	 $LN1@LIBMANComm
$LN40@LIBMANComm:

; 2375 :     case ID_SELECT_ALL1:
; 2376 :       if (LibraryFile[0][0]==0) {

  005d8	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  005dd	6b c8 00	 imul	 ecx, eax, 0
  005e0	ba 01 00 00 00	 mov	 edx, 1
  005e5	6b c2 00	 imul	 eax, edx, 0
  005e8	0f be 8c 01 00
	00 00 00	 movsx	 ecx, BYTE PTR _LibraryFile[ecx+eax]
  005f0	85 c9		 test	 ecx, ecx
  005f2	75 35		 jne	 SHORT $LN41@LIBMANComm

; 2377 :         MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  005f4	6a 00		 push	 0
  005f6	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  005fb	6a 09		 push	 9
  005fd	e8 00 00 00 00	 call	 _StringConvert
  00602	83 c4 08	 add	 esp, 8
  00605	50		 push	 eax
  00606	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  0060b	6a 08		 push	 8
  0060d	e8 00 00 00 00	 call	 _StringConvert
  00612	83 c4 08	 add	 esp, 8
  00615	50		 push	 eax
  00616	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  0061b	50		 push	 eax
  0061c	e8 00 00 00 00	 call	 _MessageBoxUTF8
  00621	83 c4 10	 add	 esp, 16			; 00000010H

; 2378 :         return;

  00624	e9 bf 05 00 00	 jmp	 $LN1@LIBMANComm
$LN41@LIBMANComm:

; 2379 :       }
; 2380 :       SelectList1();

  00629	e8 00 00 00 00	 call	 _SelectList1

; 2381 :       break;

  0062e	e9 b5 05 00 00	 jmp	 $LN1@LIBMANComm
$LN42@LIBMANComm:

; 2382 :     case ID_SELECT_ALL2:
; 2383 :       if (LibraryFile[1][0]==0) {

  00633	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  00638	c1 e0 00	 shl	 eax, 0
  0063b	b9 01 00 00 00	 mov	 ecx, 1
  00640	6b d1 00	 imul	 edx, ecx, 0
  00643	0f be 84 10 00
	00 00 00	 movsx	 eax, BYTE PTR _LibraryFile[eax+edx]
  0064b	85 c0		 test	 eax, eax
  0064d	75 35		 jne	 SHORT $LN43@LIBMANComm

; 2384 :         MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  0064f	6a 00		 push	 0
  00651	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00656	6a 09		 push	 9
  00658	e8 00 00 00 00	 call	 _StringConvert
  0065d	83 c4 08	 add	 esp, 8
  00660	50		 push	 eax
  00661	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  00666	6a 08		 push	 8
  00668	e8 00 00 00 00	 call	 _StringConvert
  0066d	83 c4 08	 add	 esp, 8
  00670	50		 push	 eax
  00671	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  00676	50		 push	 eax
  00677	e8 00 00 00 00	 call	 _MessageBoxUTF8
  0067c	83 c4 10	 add	 esp, 16			; 00000010H

; 2385 :         return;

  0067f	e9 64 05 00 00	 jmp	 $LN1@LIBMANComm
$LN43@LIBMANComm:

; 2386 :       }
; 2387 :       SelectList2();

  00684	e8 00 00 00 00	 call	 _SelectList2

; 2388 :       break;

  00689	e9 5a 05 00 00	 jmp	 $LN1@LIBMANComm
$LN44@LIBMANComm:

; 2389 :     case ID_COPY_SYMBOLS1:
; 2390 :       if (LibraryFile[0][0]==0) {

  0068e	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  00693	6b c8 00	 imul	 ecx, eax, 0
  00696	ba 01 00 00 00	 mov	 edx, 1
  0069b	6b c2 00	 imul	 eax, edx, 0
  0069e	0f be 8c 01 00
	00 00 00	 movsx	 ecx, BYTE PTR _LibraryFile[ecx+eax]
  006a6	85 c9		 test	 ecx, ecx
  006a8	75 35		 jne	 SHORT $LN45@LIBMANComm

; 2391 :         MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  006aa	6a 00		 push	 0
  006ac	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  006b1	6a 09		 push	 9
  006b3	e8 00 00 00 00	 call	 _StringConvert
  006b8	83 c4 08	 add	 esp, 8
  006bb	50		 push	 eax
  006bc	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  006c1	6a 08		 push	 8
  006c3	e8 00 00 00 00	 call	 _StringConvert
  006c8	83 c4 08	 add	 esp, 8
  006cb	50		 push	 eax
  006cc	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  006d1	50		 push	 eax
  006d2	e8 00 00 00 00	 call	 _MessageBoxUTF8
  006d7	83 c4 10	 add	 esp, 16			; 00000010H

; 2392 :         return;

  006da	e9 09 05 00 00	 jmp	 $LN1@LIBMANComm
$LN45@LIBMANComm:

; 2393 :       }
; 2394 :       if (LibraryFile[1][0]==0) {

  006df	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  006e4	c1 e0 00	 shl	 eax, 0
  006e7	b9 01 00 00 00	 mov	 ecx, 1
  006ec	6b d1 00	 imul	 edx, ecx, 0
  006ef	0f be 84 10 00
	00 00 00	 movsx	 eax, BYTE PTR _LibraryFile[eax+edx]
  006f7	85 c0		 test	 eax, eax
  006f9	75 35		 jne	 SHORT $LN46@LIBMANComm

; 2395 :         MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  006fb	6a 00		 push	 0
  006fd	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00702	6a 09		 push	 9
  00704	e8 00 00 00 00	 call	 _StringConvert
  00709	83 c4 08	 add	 esp, 8
  0070c	50		 push	 eax
  0070d	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  00712	6a 08		 push	 8
  00714	e8 00 00 00 00	 call	 _StringConvert
  00719	83 c4 08	 add	 esp, 8
  0071c	50		 push	 eax
  0071d	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  00722	50		 push	 eax
  00723	e8 00 00 00 00	 call	 _MessageBoxUTF8
  00728	83 c4 10	 add	 esp, 16			; 00000010H

; 2396 :         return;

  0072b	e9 b8 04 00 00	 jmp	 $LN1@LIBMANComm
$LN46@LIBMANComm:

; 2397 :       }
; 2398 :       res=ExportSymbols(0,1);

  00730	6a 01		 push	 1
  00732	6a 00		 push	 0
  00734	e8 00 00 00 00	 call	 _ExportSymbols
  00739	83 c4 08	 add	 esp, 8
  0073c	89 45 d0	 mov	 DWORD PTR _res$[ebp], eax

; 2399 :       AddSymbols(1,1);

  0073f	6a 01		 push	 1
  00741	6a 01		 push	 1
  00743	e8 00 00 00 00	 call	 _AddSymbols
  00748	83 c4 08	 add	 esp, 8

; 2400 :       DeselectList1();

  0074b	e8 00 00 00 00	 call	 _DeselectList1

; 2401 :       break;

  00750	e9 93 04 00 00	 jmp	 $LN1@LIBMANComm
$LN47@LIBMANComm:

; 2402 :     case ID_MOVE_SYMBOLS1:
; 2403 :       if (LibraryFile[0][0]==0) {

  00755	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  0075a	6b c8 00	 imul	 ecx, eax, 0
  0075d	ba 01 00 00 00	 mov	 edx, 1
  00762	6b c2 00	 imul	 eax, edx, 0
  00765	0f be 8c 01 00
	00 00 00	 movsx	 ecx, BYTE PTR _LibraryFile[ecx+eax]
  0076d	85 c9		 test	 ecx, ecx
  0076f	75 35		 jne	 SHORT $LN48@LIBMANComm

; 2404 :         MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  00771	6a 00		 push	 0
  00773	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00778	6a 09		 push	 9
  0077a	e8 00 00 00 00	 call	 _StringConvert
  0077f	83 c4 08	 add	 esp, 8
  00782	50		 push	 eax
  00783	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  00788	6a 08		 push	 8
  0078a	e8 00 00 00 00	 call	 _StringConvert
  0078f	83 c4 08	 add	 esp, 8
  00792	50		 push	 eax
  00793	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  00798	50		 push	 eax
  00799	e8 00 00 00 00	 call	 _MessageBoxUTF8
  0079e	83 c4 10	 add	 esp, 16			; 00000010H

; 2405 :         return;

  007a1	e9 42 04 00 00	 jmp	 $LN1@LIBMANComm
$LN48@LIBMANComm:

; 2406 :       }
; 2407 :       if (LibraryFile[1][0]==0) {

  007a6	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  007ab	c1 e0 00	 shl	 eax, 0
  007ae	b9 01 00 00 00	 mov	 ecx, 1
  007b3	6b d1 00	 imul	 edx, ecx, 0
  007b6	0f be 84 10 00
	00 00 00	 movsx	 eax, BYTE PTR _LibraryFile[eax+edx]
  007be	85 c0		 test	 eax, eax
  007c0	75 35		 jne	 SHORT $LN49@LIBMANComm

; 2408 :         MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  007c2	6a 00		 push	 0
  007c4	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  007c9	6a 09		 push	 9
  007cb	e8 00 00 00 00	 call	 _StringConvert
  007d0	83 c4 08	 add	 esp, 8
  007d3	50		 push	 eax
  007d4	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  007d9	6a 08		 push	 8
  007db	e8 00 00 00 00	 call	 _StringConvert
  007e0	83 c4 08	 add	 esp, 8
  007e3	50		 push	 eax
  007e4	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  007e9	50		 push	 eax
  007ea	e8 00 00 00 00	 call	 _MessageBoxUTF8
  007ef	83 c4 10	 add	 esp, 16			; 00000010H

; 2409 :         return;

  007f2	e9 f1 03 00 00	 jmp	 $LN1@LIBMANComm
$LN49@LIBMANComm:

; 2410 :       }
; 2411 :       res=ExportSymbols(0,1);

  007f7	6a 01		 push	 1
  007f9	6a 00		 push	 0
  007fb	e8 00 00 00 00	 call	 _ExportSymbols
  00800	83 c4 08	 add	 esp, 8
  00803	89 45 d0	 mov	 DWORD PTR _res$[ebp], eax

; 2412 :       AddSymbols(1,1);

  00806	6a 01		 push	 1
  00808	6a 01		 push	 1
  0080a	e8 00 00 00 00	 call	 _AddSymbols
  0080f	83 c4 08	 add	 esp, 8

; 2413 :       DeleteSymbols(0);

  00812	6a 00		 push	 0
  00814	e8 00 00 00 00	 call	 _DeleteSymbols
  00819	83 c4 04	 add	 esp, 4

; 2414 :       break;

  0081c	e9 c7 03 00 00	 jmp	 $LN1@LIBMANComm
$LN50@LIBMANComm:

; 2415 :     case ID_COPY_SYMBOLS2:
; 2416 :       if (LibraryFile[0][0]==0) {

  00821	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  00826	6b c8 00	 imul	 ecx, eax, 0
  00829	ba 01 00 00 00	 mov	 edx, 1
  0082e	6b c2 00	 imul	 eax, edx, 0
  00831	0f be 8c 01 00
	00 00 00	 movsx	 ecx, BYTE PTR _LibraryFile[ecx+eax]
  00839	85 c9		 test	 ecx, ecx
  0083b	75 35		 jne	 SHORT $LN51@LIBMANComm

; 2417 :         MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  0083d	6a 00		 push	 0
  0083f	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00844	6a 09		 push	 9
  00846	e8 00 00 00 00	 call	 _StringConvert
  0084b	83 c4 08	 add	 esp, 8
  0084e	50		 push	 eax
  0084f	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  00854	6a 08		 push	 8
  00856	e8 00 00 00 00	 call	 _StringConvert
  0085b	83 c4 08	 add	 esp, 8
  0085e	50		 push	 eax
  0085f	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  00864	50		 push	 eax
  00865	e8 00 00 00 00	 call	 _MessageBoxUTF8
  0086a	83 c4 10	 add	 esp, 16			; 00000010H

; 2418 :         return;

  0086d	e9 76 03 00 00	 jmp	 $LN1@LIBMANComm
$LN51@LIBMANComm:

; 2419 :       }
; 2420 :       if (LibraryFile[1][0]==0) {

  00872	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  00877	c1 e0 00	 shl	 eax, 0
  0087a	b9 01 00 00 00	 mov	 ecx, 1
  0087f	6b d1 00	 imul	 edx, ecx, 0
  00882	0f be 84 10 00
	00 00 00	 movsx	 eax, BYTE PTR _LibraryFile[eax+edx]
  0088a	85 c0		 test	 eax, eax
  0088c	75 35		 jne	 SHORT $LN52@LIBMANComm

; 2421 :         MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  0088e	6a 00		 push	 0
  00890	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00895	6a 09		 push	 9
  00897	e8 00 00 00 00	 call	 _StringConvert
  0089c	83 c4 08	 add	 esp, 8
  0089f	50		 push	 eax
  008a0	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  008a5	6a 08		 push	 8
  008a7	e8 00 00 00 00	 call	 _StringConvert
  008ac	83 c4 08	 add	 esp, 8
  008af	50		 push	 eax
  008b0	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  008b5	50		 push	 eax
  008b6	e8 00 00 00 00	 call	 _MessageBoxUTF8
  008bb	83 c4 10	 add	 esp, 16			; 00000010H

; 2422 :         return;

  008be	e9 25 03 00 00	 jmp	 $LN1@LIBMANComm
$LN52@LIBMANComm:

; 2423 :       }
; 2424 :       res=ExportSymbols(1,1);

  008c3	6a 01		 push	 1
  008c5	6a 01		 push	 1
  008c7	e8 00 00 00 00	 call	 _ExportSymbols
  008cc	83 c4 08	 add	 esp, 8
  008cf	89 45 d0	 mov	 DWORD PTR _res$[ebp], eax

; 2425 :       AddSymbols(0,1);

  008d2	6a 01		 push	 1
  008d4	6a 00		 push	 0
  008d6	e8 00 00 00 00	 call	 _AddSymbols
  008db	83 c4 08	 add	 esp, 8

; 2426 :       DeselectList2();

  008de	e8 00 00 00 00	 call	 _DeselectList2

; 2427 :       break;

  008e3	e9 00 03 00 00	 jmp	 $LN1@LIBMANComm
$LN53@LIBMANComm:

; 2428 :     case ID_MOVE_SYMBOLS2:
; 2429 :       if (LibraryFile[0][0]==0) {

  008e8	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  008ed	6b c8 00	 imul	 ecx, eax, 0
  008f0	ba 01 00 00 00	 mov	 edx, 1
  008f5	6b c2 00	 imul	 eax, edx, 0
  008f8	0f be 8c 01 00
	00 00 00	 movsx	 ecx, BYTE PTR _LibraryFile[ecx+eax]
  00900	85 c9		 test	 ecx, ecx
  00902	75 35		 jne	 SHORT $LN54@LIBMANComm

; 2430 :         MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  00904	6a 00		 push	 0
  00906	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  0090b	6a 09		 push	 9
  0090d	e8 00 00 00 00	 call	 _StringConvert
  00912	83 c4 08	 add	 esp, 8
  00915	50		 push	 eax
  00916	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  0091b	6a 08		 push	 8
  0091d	e8 00 00 00 00	 call	 _StringConvert
  00922	83 c4 08	 add	 esp, 8
  00925	50		 push	 eax
  00926	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  0092b	50		 push	 eax
  0092c	e8 00 00 00 00	 call	 _MessageBoxUTF8
  00931	83 c4 10	 add	 esp, 16			; 00000010H

; 2431 :         return;

  00934	e9 af 02 00 00	 jmp	 $LN1@LIBMANComm
$LN54@LIBMANComm:

; 2432 :       }
; 2433 :       if (LibraryFile[1][0]==0) {

  00939	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  0093e	c1 e0 00	 shl	 eax, 0
  00941	b9 01 00 00 00	 mov	 ecx, 1
  00946	6b d1 00	 imul	 edx, ecx, 0
  00949	0f be 84 10 00
	00 00 00	 movsx	 eax, BYTE PTR _LibraryFile[eax+edx]
  00951	85 c0		 test	 eax, eax
  00953	75 35		 jne	 SHORT $LN55@LIBMANComm

; 2434 :         MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  00955	6a 00		 push	 0
  00957	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  0095c	6a 09		 push	 9
  0095e	e8 00 00 00 00	 call	 _StringConvert
  00963	83 c4 08	 add	 esp, 8
  00966	50		 push	 eax
  00967	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  0096c	6a 08		 push	 8
  0096e	e8 00 00 00 00	 call	 _StringConvert
  00973	83 c4 08	 add	 esp, 8
  00976	50		 push	 eax
  00977	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  0097c	50		 push	 eax
  0097d	e8 00 00 00 00	 call	 _MessageBoxUTF8
  00982	83 c4 10	 add	 esp, 16			; 00000010H

; 2435 :         return;

  00985	e9 5e 02 00 00	 jmp	 $LN1@LIBMANComm
$LN55@LIBMANComm:

; 2436 :       }
; 2437 :       res=ExportSymbols(1,1);

  0098a	6a 01		 push	 1
  0098c	6a 01		 push	 1
  0098e	e8 00 00 00 00	 call	 _ExportSymbols
  00993	83 c4 08	 add	 esp, 8
  00996	89 45 d0	 mov	 DWORD PTR _res$[ebp], eax

; 2438 :       AddSymbols(0,1);

  00999	6a 01		 push	 1
  0099b	6a 00		 push	 0
  0099d	e8 00 00 00 00	 call	 _AddSymbols
  009a2	83 c4 08	 add	 esp, 8

; 2439 :       DeleteSymbols(1);

  009a5	6a 01		 push	 1
  009a7	e8 00 00 00 00	 call	 _DeleteSymbols
  009ac	83 c4 04	 add	 esp, 4

; 2440 :       break;

  009af	e9 34 02 00 00	 jmp	 $LN1@LIBMANComm
$LN56@LIBMANComm:

; 2441 :     case ID_RIGHT_BUTTON_LIST1:
; 2442 :       PopupMenu(0,0);

  009b4	6a 00		 push	 0
  009b6	6a 00		 push	 0
  009b8	e8 00 00 00 00	 call	 _PopupMenu
  009bd	83 c4 08	 add	 esp, 8

; 2443 :       res=1;

  009c0	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR _res$[ebp], 1

; 2444 :       break;

  009c7	e9 1c 02 00 00	 jmp	 $LN1@LIBMANComm
$LN57@LIBMANComm:

; 2445 :     case ID_RIGHT_BUTTON_LIST2:
; 2446 :       PopupMenu(1,0);

  009cc	6a 00		 push	 0
  009ce	6a 01		 push	 1
  009d0	e8 00 00 00 00	 call	 _PopupMenu
  009d5	83 c4 08	 add	 esp, 8

; 2447 :       res=1;

  009d8	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR _res$[ebp], 1

; 2448 :       break;

  009df	e9 04 02 00 00	 jmp	 $LN1@LIBMANComm
$LN58@LIBMANComm:

; 2449 :     case ID_EDIT_SYMBOL1:
; 2450 :       EditSymbol(0);

  009e4	6a 00		 push	 0
  009e6	e8 00 00 00 00	 call	 _EditSymbol
  009eb	83 c4 04	 add	 esp, 4

; 2451 :       DeselectList1();

  009ee	e8 00 00 00 00	 call	 _DeselectList1

; 2452 :       break;

  009f3	e9 f0 01 00 00	 jmp	 $LN1@LIBMANComm
$LN59@LIBMANComm:

; 2453 :     case ID_EDIT_SYMBOL2:
; 2454 :       EditSymbol(1);

  009f8	6a 01		 push	 1
  009fa	e8 00 00 00 00	 call	 _EditSymbol
  009ff	83 c4 04	 add	 esp, 4

; 2455 :       DeselectList2();

  00a02	e8 00 00 00 00	 call	 _DeselectList2

; 2456 :       break;

  00a07	e9 dc 01 00 00	 jmp	 $LN1@LIBMANComm
$LN60@LIBMANComm:

; 2457 :     case ID_FILE_RELOAD_SYMBOLS:
; 2458 :     case ID_FILE_RELOADGEOMETRIES:
; 2459 :       ReloadSymbolsIntoLibrary();

  00a0c	e8 00 00 00 00	 call	 _ReloadSymbolsIntoLibrary

; 2460 :       break;

  00a11	e9 d2 01 00 00	 jmp	 $LN1@LIBMANComm
$LN61@LIBMANComm:

; 2461 :     case ID_FILE_EXIT_TO_LIB_SCH:
; 2462 :     case ID_FILE_EXIT_TO_LIB_GEOM:
; 2463 :       ExitEditingSymbol(LParam);

  00a16	8b 45 10	 mov	 eax, DWORD PTR _LParam$[ebp]
  00a19	50		 push	 eax
  00a1a	e8 00 00 00 00	 call	 _ExitEditingSymbol
  00a1f	83 c4 04	 add	 esp, 4

; 2464 :       break;

  00a22	e9 c1 01 00 00	 jmp	 $LN1@LIBMANComm
$LN62@LIBMANComm:

; 2465 :     case WM_DROPFILES_LIST1:
; 2466 :     case WM_DROPFILES_LIST2:
; 2467 :       if (LibraryFile[WParam-WM_DROPFILES_LIST1][0]!=0) {

  00a27	8b 45 0c	 mov	 eax, DWORD PTR _WParam$[ebp]
  00a2a	2d 52 08 00 00	 sub	 eax, 2130		; 00000852H
  00a2f	c1 e0 09	 shl	 eax, 9
  00a32	b9 01 00 00 00	 mov	 ecx, 1
  00a37	6b d1 00	 imul	 edx, ecx, 0
  00a3a	0f be 84 10 00
	00 00 00	 movsx	 eax, BYTE PTR _LibraryFile[eax+edx]
  00a42	85 c0		 test	 eax, eax
  00a44	0f 84 41 01 00
	00		 je	 $LN63@LIBMANComm

; 2468 :         NrFiles=DragQueryFileW((HANDLE)LParam,0xFFFFFFFF,0,0);

  00a4a	8b f4		 mov	 esi, esp
  00a4c	6a 00		 push	 0
  00a4e	6a 00		 push	 0
  00a50	6a ff		 push	 -1
  00a52	8b 45 10	 mov	 eax, DWORD PTR _LParam$[ebp]
  00a55	50		 push	 eax
  00a56	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DragQueryFileW@16
  00a5c	3b f4		 cmp	 esi, esp
  00a5e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a63	89 45 c4	 mov	 DWORD PTR _NrFiles$[ebp], eax

; 2469 :         if (NrFiles>0) {

  00a66	83 7d c4 00	 cmp	 DWORD PTR _NrFiles$[ebp], 0
  00a6a	0f 8e ff 00 00
	00		 jle	 $LN65@LIBMANComm

; 2470 :           TempMemoryPos=0;

  00a70	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _TempMemoryPos, 0

; 2471 :           TempMem[0]=0;

  00a7a	b8 01 00 00 00	 mov	 eax, 1
  00a7f	6b c8 00	 imul	 ecx, eax, 0
  00a82	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _TempMem
  00a88	c6 04 0a 00	 mov	 BYTE PTR [edx+ecx], 0

; 2472 :           TempMem[1]=0;

  00a8c	b8 01 00 00 00	 mov	 eax, 1
  00a91	c1 e0 00	 shl	 eax, 0
  00a94	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _TempMem
  00a9a	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 2473 :           for (cnt=0;cnt<NrFiles;cnt++) {

  00a9e	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _cnt$[ebp], 0
  00aa5	eb 09		 jmp	 SHORT $LN6@LIBMANComm
$LN4@LIBMANComm:
  00aa7	8b 45 f4	 mov	 eax, DWORD PTR _cnt$[ebp]
  00aaa	83 c0 01	 add	 eax, 1
  00aad	89 45 f4	 mov	 DWORD PTR _cnt$[ebp], eax
$LN6@LIBMANComm:
  00ab0	8b 45 f4	 mov	 eax, DWORD PTR _cnt$[ebp]
  00ab3	3b 45 c4	 cmp	 eax, DWORD PTR _NrFiles$[ebp]
  00ab6	0f 8d 96 00 00
	00		 jge	 $LN5@LIBMANComm

; 2474 :             res=DragQueryFileW((HANDLE)LParam,cnt,Wstr,250);

  00abc	8b f4		 mov	 esi, esp
  00abe	68 fa 00 00 00	 push	 250			; 000000faH
  00ac3	8d 85 9c f3 ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  00ac9	50		 push	 eax
  00aca	8b 4d f4	 mov	 ecx, DWORD PTR _cnt$[ebp]
  00acd	51		 push	 ecx
  00ace	8b 55 10	 mov	 edx, DWORD PTR _LParam$[ebp]
  00ad1	52		 push	 edx
  00ad2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DragQueryFileW@16
  00ad8	3b f4		 cmp	 esi, esp
  00ada	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00adf	89 45 d0	 mov	 DWORD PTR _res$[ebp], eax

; 2475 :             UnicodeToUtf8(Wstr,str,MAX_LENGTH_STRING-50);

  00ae2	68 ce 01 00 00	 push	 462			; 000001ceH
  00ae7	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  00aed	50		 push	 eax
  00aee	8d 8d 9c f3 ff
	ff		 lea	 ecx, DWORD PTR _Wstr$[ebp]
  00af4	51		 push	 ecx
  00af5	e8 00 00 00 00	 call	 _UnicodeToUtf8
  00afa	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2476 :             if (cnt==0) {

  00afd	83 7d f4 00	 cmp	 DWORD PTR _cnt$[ebp], 0
  00b01	75 25		 jne	 SHORT $LN66@LIBMANComm

; 2477 :               GetDirFromFileName(Dir,str);

  00b03	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  00b09	50		 push	 eax
  00b0a	8d 8d ac f9 ff
	ff		 lea	 ecx, DWORD PTR _Dir$[ebp]
  00b10	51		 push	 ecx
  00b11	e8 00 00 00 00	 call	 _GetDirFromFileName
  00b16	83 c4 08	 add	 esp, 8

; 2478 :               CopyFileNameToTempMem(Dir);

  00b19	8d 85 ac f9 ff
	ff		 lea	 eax, DWORD PTR _Dir$[ebp]
  00b1f	50		 push	 eax
  00b20	e8 00 00 00 00	 call	 _CopyFileNameToTempMem
  00b25	83 c4 04	 add	 esp, 4
$LN66@LIBMANComm:

; 2479 :             }
; 2480 :             GetFilePartFromFileName(FileName,str);

  00b28	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  00b2e	50		 push	 eax
  00b2f	8d 8d a4 f7 ff
	ff		 lea	 ecx, DWORD PTR _FileName$[ebp]
  00b35	51		 push	 ecx
  00b36	e8 00 00 00 00	 call	 _GetFilePartFromFileName
  00b3b	83 c4 08	 add	 esp, 8

; 2481 :             CopyFileNameToTempMem(FileName);

  00b3e	8d 85 a4 f7 ff
	ff		 lea	 eax, DWORD PTR _FileName$[ebp]
  00b44	50		 push	 eax
  00b45	e8 00 00 00 00	 call	 _CopyFileNameToTempMem
  00b4a	83 c4 04	 add	 esp, 4

; 2482 :           }

  00b4d	e9 55 ff ff ff	 jmp	 $LN4@LIBMANComm
$LN5@LIBMANComm:

; 2483 :           AddSymbols(WParam-WM_DROPFILES_LIST1,0);

  00b52	6a 00		 push	 0
  00b54	8b 45 0c	 mov	 eax, DWORD PTR _WParam$[ebp]
  00b57	2d 52 08 00 00	 sub	 eax, 2130		; 00000852H
  00b5c	50		 push	 eax
  00b5d	e8 00 00 00 00	 call	 _AddSymbols
  00b62	83 c4 08	 add	 esp, 8

; 2484 :           ok=1;

  00b65	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _ok, 1
$LN65@LIBMANComm:

; 2485 :         }
; 2486 :         DragFinish((HANDLE)LParam);

  00b6f	8b f4		 mov	 esi, esp
  00b71	8b 45 10	 mov	 eax, DWORD PTR _LParam$[ebp]
  00b74	50		 push	 eax
  00b75	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DragFinish@4
  00b7b	3b f4		 cmp	 esi, esp
  00b7d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2487 :         res=1;

  00b82	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR _res$[ebp], 1

; 2488 :       } else {

  00b89	eb 30		 jmp	 SHORT $LN64@LIBMANComm
$LN63@LIBMANComm:

; 2489 :         MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  00b8b	6a 00		 push	 0
  00b8d	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00b92	6a 09		 push	 9
  00b94	e8 00 00 00 00	 call	 _StringConvert
  00b99	83 c4 08	 add	 esp, 8
  00b9c	50		 push	 eax
  00b9d	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  00ba2	6a 08		 push	 8
  00ba4	e8 00 00 00 00	 call	 _StringConvert
  00ba9	83 c4 08	 add	 esp, 8
  00bac	50		 push	 eax
  00bad	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  00bb2	50		 push	 eax
  00bb3	e8 00 00 00 00	 call	 _MessageBoxUTF8
  00bb8	83 c4 10	 add	 esp, 16			; 00000010H
$LN64@LIBMANComm:

; 2490 :       }
; 2491 :       break;

  00bbb	eb 2b		 jmp	 SHORT $LN1@LIBMANComm
$LN67@LIBMANComm:

; 2492 : #if 0
; 2493 :     case ID_HELP_CONTENTS:
; 2494 :       Help("contents.htm",0);
; 2495 :       break;
; 2496 : #endif
; 2497 :     case ID_ABOUT:
; 2498 :       res=DialogBox(LIBMANClass.hInstance, MAKEINTRESOURCE(IDD_DIALOG_ABOUT), LIBMANWindow, (DLGPROC)AboutDialogBody);

  00bbd	8b f4		 mov	 esi, esp
  00bbf	6a 00		 push	 0
  00bc1	68 00 00 00 00	 push	 OFFSET _AboutDialogBody@16
  00bc6	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  00bcb	50		 push	 eax
  00bcc	68 d1 07 00 00	 push	 2001			; 000007d1H
  00bd1	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANClass+16
  00bd7	51		 push	 ecx
  00bd8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DialogBoxParamA@20
  00bde	3b f4		 cmp	 esi, esp
  00be0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00be5	89 45 d0	 mov	 DWORD PTR _res$[ebp], eax
$LN1@LIBMANComm:

; 2499 :       break;
; 2500 :   }
; 2501 : }

  00be8	52		 push	 edx
  00be9	8b cd		 mov	 ecx, ebp
  00beb	50		 push	 eax
  00bec	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN76@LIBMANComm
  00bf2	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00bf7	58		 pop	 eax
  00bf8	5a		 pop	 edx
  00bf9	5f		 pop	 edi
  00bfa	5e		 pop	 esi
  00bfb	5b		 pop	 ebx
  00bfc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00bff	33 cd		 xor	 ecx, ebp
  00c01	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00c06	81 c4 ac 11 00
	00		 add	 esp, 4524		; 000011acH
  00c0c	3b ec		 cmp	 ebp, esp
  00c0e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c13	8b e5		 mov	 esp, ebp
  00c15	5d		 pop	 ebp
  00c16	c3		 ret	 0
  00c17	90		 npad	 1
$LN76@LIBMANComm:
  00c18	05 00 00 00	 DD	 5
  00c1c	00 00 00 00	 DD	 $LN75@LIBMANComm
$LN75@LIBMANComm:
  00c20	bc fd ff ff	 DD	 -580			; fffffdbcH
  00c24	00 02 00 00	 DD	 512			; 00000200H
  00c28	00 00 00 00	 DD	 $LN70@LIBMANComm
  00c2c	b4 fb ff ff	 DD	 -1100			; fffffbb4H
  00c30	00 02 00 00	 DD	 512			; 00000200H
  00c34	00 00 00 00	 DD	 $LN71@LIBMANComm
  00c38	ac f9 ff ff	 DD	 -1620			; fffff9acH
  00c3c	00 02 00 00	 DD	 512			; 00000200H
  00c40	00 00 00 00	 DD	 $LN72@LIBMANComm
  00c44	a4 f7 ff ff	 DD	 -2140			; fffff7a4H
  00c48	00 02 00 00	 DD	 512			; 00000200H
  00c4c	00 00 00 00	 DD	 $LN73@LIBMANComm
  00c50	9c f3 ff ff	 DD	 -3172			; fffff39cH
  00c54	00 04 00 00	 DD	 1024			; 00000400H
  00c58	00 00 00 00	 DD	 $LN74@LIBMANComm
$LN74@LIBMANComm:
  00c5c	57		 DB	 87			; 00000057H
  00c5d	73		 DB	 115			; 00000073H
  00c5e	74		 DB	 116			; 00000074H
  00c5f	72		 DB	 114			; 00000072H
  00c60	00		 DB	 0
$LN73@LIBMANComm:
  00c61	46		 DB	 70			; 00000046H
  00c62	69		 DB	 105			; 00000069H
  00c63	6c		 DB	 108			; 0000006cH
  00c64	65		 DB	 101			; 00000065H
  00c65	4e		 DB	 78			; 0000004eH
  00c66	61		 DB	 97			; 00000061H
  00c67	6d		 DB	 109			; 0000006dH
  00c68	65		 DB	 101			; 00000065H
  00c69	00		 DB	 0
$LN72@LIBMANComm:
  00c6a	44		 DB	 68			; 00000044H
  00c6b	69		 DB	 105			; 00000069H
  00c6c	72		 DB	 114			; 00000072H
  00c6d	00		 DB	 0
$LN71@LIBMANComm:
  00c6e	73		 DB	 115			; 00000073H
  00c6f	74		 DB	 116			; 00000074H
  00c70	72		 DB	 114			; 00000072H
  00c71	32		 DB	 50			; 00000032H
  00c72	00		 DB	 0
$LN70@LIBMANComm:
  00c73	73		 DB	 115			; 00000073H
  00c74	74		 DB	 116			; 00000074H
  00c75	72		 DB	 114			; 00000072H
  00c76	00		 DB	 0
  00c77	90		 npad	 1
$LN77@LIBMANComm:
  00c78	00 00 00 00	 DD	 $LN67@LIBMANComm
  00c7c	00 00 00 00	 DD	 $LN12@LIBMANComm
  00c80	00 00 00 00	 DD	 $LN13@LIBMANComm
  00c84	00 00 00 00	 DD	 $LN44@LIBMANComm
  00c88	00 00 00 00	 DD	 $LN50@LIBMANComm
  00c8c	00 00 00 00	 DD	 $LN10@LIBMANComm
  00c90	00 00 00 00	 DD	 $LN11@LIBMANComm
  00c94	00 00 00 00	 DD	 $LN32@LIBMANComm
  00c98	00 00 00 00	 DD	 $LN34@LIBMANComm
  00c9c	00 00 00 00	 DD	 $LN36@LIBMANComm
  00ca0	00 00 00 00	 DD	 $LN38@LIBMANComm
  00ca4	00 00 00 00	 DD	 $LN58@LIBMANComm
  00ca8	00 00 00 00	 DD	 $LN59@LIBMANComm
  00cac	00 00 00 00	 DD	 $LN1@LIBMANComm
  00cb0	00 00 00 00	 DD	 $LN22@LIBMANComm
  00cb4	00 00 00 00	 DD	 $LN27@LIBMANComm
  00cb8	00 00 00 00	 DD	 $LN7@LIBMANComm
  00cbc	00 00 00 00	 DD	 $LN1@LIBMANComm
  00cc0	00 00 00 00	 DD	 $LN14@LIBMANComm
  00cc4	00 00 00 00	 DD	 $LN18@LIBMANComm
  00cc8	00 00 00 00	 DD	 $LN1@LIBMANComm
  00ccc	00 00 00 00	 DD	 $LN1@LIBMANComm
  00cd0	00 00 00 00	 DD	 $LN47@LIBMANComm
  00cd4	00 00 00 00	 DD	 $LN53@LIBMANComm
  00cd8	00 00 00 00	 DD	 $LN8@LIBMANComm
  00cdc	00 00 00 00	 DD	 $LN9@LIBMANComm
  00ce0	00 00 00 00	 DD	 $LN56@LIBMANComm
  00ce4	00 00 00 00	 DD	 $LN57@LIBMANComm
  00ce8	00 00 00 00	 DD	 $LN1@LIBMANComm
  00cec	00 00 00 00	 DD	 $LN1@LIBMANComm
  00cf0	00 00 00 00	 DD	 $LN62@LIBMANComm
  00cf4	00 00 00 00	 DD	 $LN62@LIBMANComm
  00cf8	00 00 00 00	 DD	 $LN40@LIBMANComm
  00cfc	00 00 00 00	 DD	 $LN42@LIBMANComm
_LIBMANCommand ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _Help
_TEXT	SEGMENT
tv64 = -912						; size = 4
_str$ = -520						; size = 512
__$ArrayPad$ = -4					; size = 4
_Topic$ = 8						; size = 4
_mode$ = 12						; size = 4
_Help	PROC						; COMDAT

; 2210 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 03 00
	00		 sub	 esp, 912		; 00000390H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 70 fc ff
	ff		 lea	 edi, DWORD PTR [ebp-912]
  00012	b9 e4 00 00 00	 mov	 ecx, 228		; 000000e4H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 2211 :   char  str[MAX_LENGTH_STRING];
; 2212 : 
; 2213 :   sprintf(str,"%s\\libman.chm::/html/%s",ExePath,Topic);

  00028	8b 45 08	 mov	 eax, DWORD PTR _Topic$[ebp]
  0002b	50		 push	 eax
  0002c	68 00 00 00 00	 push	 OFFSET _ExePath
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@HHHFDOOH@?$CFs?2libman?4chm?3?3?1html?1?$CFs?$AA@
  00036	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _str$[ebp]
  0003c	51		 push	 ecx
  0003d	e8 00 00 00 00	 call	 _sprintf
  00042	83 c4 10	 add	 esp, 16			; 00000010H

; 2214 :   switch (mode) {

  00045	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00048	89 85 70 fc ff
	ff		 mov	 DWORD PTR tv64[ebp], eax
  0004e	83 bd 70 fc ff
	ff 00		 cmp	 DWORD PTR tv64[ebp], 0
  00055	74 14		 je	 SHORT $LN4@Help
  00057	83 bd 70 fc ff
	ff 02		 cmp	 DWORD PTR tv64[ebp], 2
  0005e	74 26		 je	 SHORT $LN6@Help
  00060	83 bd 70 fc ff
	ff 03		 cmp	 DWORD PTR tv64[ebp], 3
  00067	74 2c		 je	 SHORT $LN7@Help
  00069	eb 43		 jmp	 SHORT $LN1@Help
$LN4@Help:

; 2215 :     case 0:
; 2216 :       HtmlHelp(LIBMANWindow,(LPCTSTR)str,HH_DISPLAY_TOPIC,0);

  0006b	6a 00		 push	 0
  0006d	6a 00		 push	 0
  0006f	8d 85 f8 fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  00075	50		 push	 eax
  00076	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  0007c	51		 push	 ecx
  0007d	e8 00 00 00 00	 call	 _HtmlHelpA@16

; 2217 :       break;

  00082	eb 2a		 jmp	 SHORT $LN1@Help

; 2218 :     case 1:
; 2219 :       break;

  00084	eb 28		 jmp	 SHORT $LN1@Help
$LN6@Help:

; 2220 :     case 2:
; 2221 :       HtmlHelp(0,0,HH_CLOSE_ALL,0);

  00086	6a 00		 push	 0
  00088	6a 12		 push	 18			; 00000012H
  0008a	6a 00		 push	 0
  0008c	6a 00		 push	 0
  0008e	e8 00 00 00 00	 call	 _HtmlHelpA@16

; 2222 :       break;

  00093	eb 19		 jmp	 SHORT $LN1@Help
$LN7@Help:

; 2223 :     case 3:
; 2224 :       HtmlHelp(LIBMANWindow,(LPCTSTR)str,HH_HELP_CONTEXT,(uint32)Topic);

  00095	8b 45 08	 mov	 eax, DWORD PTR _Topic$[ebp]
  00098	50		 push	 eax
  00099	6a 0f		 push	 15			; 0000000fH
  0009b	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _str$[ebp]
  000a1	51		 push	 ecx
  000a2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _LIBMANWindow
  000a8	52		 push	 edx
  000a9	e8 00 00 00 00	 call	 _HtmlHelpA@16
$LN1@Help:

; 2225 :       break;
; 2226 :   }
; 2227 : }

  000ae	52		 push	 edx
  000af	8b cd		 mov	 ecx, ebp
  000b1	50		 push	 eax
  000b2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@Help
  000b8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000bd	58		 pop	 eax
  000be	5a		 pop	 edx
  000bf	5f		 pop	 edi
  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c5	33 cd		 xor	 ecx, ebp
  000c7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cc	81 c4 90 03 00
	00		 add	 esp, 912		; 00000390H
  000d2	3b ec		 cmp	 ebp, esp
  000d4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d9	8b e5		 mov	 esp, ebp
  000db	5d		 pop	 ebp
  000dc	c3		 ret	 0
  000dd	0f 1f 00	 npad	 3
$LN11@Help:
  000e0	01 00 00 00	 DD	 1
  000e4	00 00 00 00	 DD	 $LN10@Help
$LN10@Help:
  000e8	f8 fd ff ff	 DD	 -520			; fffffdf8H
  000ec	00 02 00 00	 DD	 512			; 00000200H
  000f0	00 00 00 00	 DD	 $LN9@Help
$LN9@Help:
  000f4	73		 DB	 115			; 00000073H
  000f5	74		 DB	 116			; 00000074H
  000f6	72		 DB	 114			; 00000072H
  000f7	00		 DB	 0
_Help	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _MakeMenu
_TEXT	SEGMENT
_MakeMenu PROC						; COMDAT

; 2184 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 2185 : 
; 2186 : #define MENU_ID       MF_ENABLED|MF_STRING
; 2187 : 
; 2188 :   LIBMANMenu=CreateMenu();

  0001e	8b f4		 mov	 esi, esp
  00020	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateMenu@0
  00026	3b f4		 cmp	 esi, esp
  00028	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002d	a3 00 00 00 00	 mov	 DWORD PTR _LIBMANMenu, eax

; 2189 : 
; 2190 : // *****************************************************************************************
; 2191 :   LIBMANMenu1=CreateMenu();

  00032	8b f4		 mov	 esi, esp
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateMenu@0
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	a3 00 00 00 00	 mov	 DWORD PTR _LIBMANMenu1, eax

; 2192 :   AppendMenuUTF8(LIBMANMenu ,MF_ENABLED|MF_POPUP,(UINT)LIBMANMenu1,SC(43,"File"));

  00046	68 00 00 00 00	 push	 OFFSET ??_C@_04PBAHLACE@File?$AA@
  0004b	6a 2b		 push	 43			; 0000002bH
  0004d	e8 00 00 00 00	 call	 _StringConvert
  00052	83 c4 08	 add	 esp, 8
  00055	50		 push	 eax
  00056	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANMenu1
  0005b	50		 push	 eax
  0005c	6a 10		 push	 16			; 00000010H
  0005e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANMenu
  00064	51		 push	 ecx
  00065	e8 00 00 00 00	 call	 _AppendMenuUTF8
  0006a	83 c4 10	 add	 esp, 16			; 00000010H

; 2193 :   AppendMenuUTF8(LIBMANMenu1,MENU_ID,ID_FILE_EXIT                 ,SC(44,"Exit"));

  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_04LBABLPF@Exit?$AA@
  00072	6a 2c		 push	 44			; 0000002cH
  00074	e8 00 00 00 00	 call	 _StringConvert
  00079	83 c4 08	 add	 esp, 8
  0007c	50		 push	 eax
  0007d	68 44 08 00 00	 push	 2116			; 00000844H
  00082	6a 00		 push	 0
  00084	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANMenu1
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 _AppendMenuUTF8
  0008f	83 c4 10	 add	 esp, 16			; 00000010H

; 2194 : //  AppendMenu(LIBMANMenu ,MENU_ID,ID_HELP                      ,"Help");
; 2195 :   AppendMenuUTF8(LIBMANMenu ,MENU_ID,ID_ABOUT                     ,SC(45,"About"));

  00092	68 00 00 00 00	 push	 OFFSET ??_C@_05BDOHFCKE@About?$AA@
  00097	6a 2d		 push	 45			; 0000002dH
  00099	e8 00 00 00 00	 call	 _StringConvert
  0009e	83 c4 08	 add	 esp, 8
  000a1	50		 push	 eax
  000a2	68 34 08 00 00	 push	 2100			; 00000834H
  000a7	6a 00		 push	 0
  000a9	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANMenu
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 _AppendMenuUTF8
  000b4	83 c4 10	 add	 esp, 16			; 00000010H

; 2196 :   SetMenu(LIBMANWindow,LIBMANMenu);

  000b7	8b f4		 mov	 esi, esp
  000b9	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANMenu
  000be	50		 push	 eax
  000bf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  000c5	51		 push	 ecx
  000c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetMenu@8
  000cc	3b f4		 cmp	 esi, esp
  000ce	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2197 :   return 0;

  000d3	33 c0		 xor	 eax, eax

; 2198 : }

  000d5	5f		 pop	 edi
  000d6	5e		 pop	 esi
  000d7	5b		 pop	 ebx
  000d8	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  000de	3b ec		 cmp	 ebp, esp
  000e0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c3		 ret	 0
_MakeMenu ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _CreateWindowObjects
_TEXT	SEGMENT
_Wstr$ = -1068						; size = 1024
_NewRect$ = -36						; size = 16
_res$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hInstance$ = 8						; size = 4
_CreateWindowObjects PROC				; COMDAT

; 1896 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 70 06 00
	00		 sub	 esp, 1648		; 00000670H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 90 f9 ff
	ff		 lea	 edi, DWORD PTR [ebp-1648]
  00012	b9 9c 01 00 00	 mov	 ecx, 412		; 0000019cH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1897 :   int32 res;
; 1898 :   RECT  NewRect;
; 1899 :   WCHAR Wstr[MAX_LENGTH_STRING];
; 1900 : 
; 1901 :   RectListWindow1.left=10;

  00028	c7 05 00 00 00
	00 0a 00 00 00	 mov	 DWORD PTR _RectListWindow1, 10 ; 0000000aH

; 1902 :   RectListWindow1.top=40;

  00032	c7 05 04 00 00
	00 28 00 00 00	 mov	 DWORD PTR _RectListWindow1+4, 40 ; 00000028H

; 1903 :   RectListWindow1.right=ListWindowWidth+RectListWindow1.left;

  0003c	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindowWidth
  00041	03 05 00 00 00
	00		 add	 eax, DWORD PTR _RectListWindow1
  00047	a3 08 00 00 00	 mov	 DWORD PTR _RectListWindow1+8, eax

; 1904 :   RectListWindow1.bottom=ListWindowHeight+RectListWindow1.top;

  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindowHeight
  00051	03 05 04 00 00
	00		 add	 eax, DWORD PTR _RectListWindow1+4
  00057	a3 0c 00 00 00	 mov	 DWORD PTR _RectListWindow1+12, eax

; 1905 : 
; 1906 :   ListWindow1 = CreateWindowExW(WS_EX_ACCEPTFILES,

  0005c	8b f4		 mov	 esi, esp
  0005e	6a 00		 push	 0
  00060	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00063	50		 push	 eax
  00064	68 48 08 00 00	 push	 2120			; 00000848H
  00069	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  0006f	51		 push	 ecx
  00070	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ListWindowHeight
  00076	52		 push	 edx
  00077	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindowWidth
  0007c	50		 push	 eax
  0007d	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow1+4
  00083	51		 push	 ecx
  00084	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow1
  0008a	52		 push	 edx
  0008b	68 03 18 a4 40	 push	 1084495875		; 40a41803H
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_11LOCGONAA@?$AA?$AA@
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_1BA@BFOCGNID@?$AAL?$AAI?$AAS?$AAT?$AAB?$AAO?$AAX?$AA?$AA@
  0009a	6a 10		 push	 16			; 00000010H
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  000a2	3b f4		 cmp	 esi, esp
  000a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a9	a3 00 00 00 00	 mov	 DWORD PTR _ListWindow1, eax

; 1907 :                                L"LISTBOX",
; 1908 :                                L"",
; 1909 :                                WS_CHILD|WS_BORDER|LBS_SORT|LBS_NOTIFY|WS_VSCROLL|
; 1910 :                                WS_THICKFRAME|
; 1911 : //                               LBS_MULTIPLESEL|
; 1912 :                                LBS_EXTENDEDSEL|
; 1913 :                                LBS_DISABLENOSCROLL,
; 1914 : // LBS_WANTKEYBOARDINPUT
; 1915 :                                RectListWindow1.left,
; 1916 :                                RectListWindow1.top,
; 1917 :                                ListWindowWidth,
; 1918 :                                ListWindowHeight,
; 1919 :                                LIBMANWindow,
; 1920 :                                (HMENU)ID_LIST1,
; 1921 :                                hInstance,
; 1922 :                                NULL);
; 1923 : 
; 1924 : 
; 1925 : //  res=SendMessageUTF8(ListWindow1,LB_ADDSTRING,0,(LPARAM)"totx173_ä_поломки");
; 1926 : 
; 1927 :   ShowWindow(ListWindow1,SW_SHOW);

  000ae	8b f4		 mov	 esi, esp
  000b0	6a 05		 push	 5
  000b2	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow1
  000b7	50		 push	 eax
  000b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  000be	3b f4		 cmp	 esi, esp
  000c0	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1928 :   GetClientRect(ListWindow1,&NewRect);

  000c5	8b f4		 mov	 esi, esp
  000c7	8d 45 dc	 lea	 eax, DWORD PTR _NewRect$[ebp]
  000ca	50		 push	 eax
  000cb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ListWindow1
  000d1	51		 push	 ecx
  000d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  000d8	3b f4		 cmp	 esi, esp
  000da	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1929 :   RectListWindow1.right=NewRect.right-NewRect.left+RectListWindow1.left;

  000df	8b 45 e4	 mov	 eax, DWORD PTR _NewRect$[ebp+8]
  000e2	2b 45 dc	 sub	 eax, DWORD PTR _NewRect$[ebp]
  000e5	03 05 00 00 00
	00		 add	 eax, DWORD PTR _RectListWindow1
  000eb	a3 08 00 00 00	 mov	 DWORD PTR _RectListWindow1+8, eax

; 1930 :   RectListWindow1.bottom=NewRect.bottom-NewRect.top+RectListWindow1.top;

  000f0	8b 45 e8	 mov	 eax, DWORD PTR _NewRect$[ebp+12]
  000f3	2b 45 e0	 sub	 eax, DWORD PTR _NewRect$[ebp+4]
  000f6	03 05 04 00 00
	00		 add	 eax, DWORD PTR _RectListWindow1+4
  000fc	a3 0c 00 00 00	 mov	 DWORD PTR _RectListWindow1+12, eax

; 1931 : 
; 1932 :   RectListWindow2.left=ListWindowWidth+ButtonSizeX+40;

  00101	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  00106	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ListWindowWidth
  0010c	8d 54 01 28	 lea	 edx, DWORD PTR [ecx+eax+40]
  00110	89 15 00 00 00
	00		 mov	 DWORD PTR _RectListWindow2, edx

; 1933 : //  RectListWindow2.left=460;
; 1934 :   RectListWindow2.top=40;

  00116	c7 05 04 00 00
	00 28 00 00 00	 mov	 DWORD PTR _RectListWindow2+4, 40 ; 00000028H

; 1935 :   RectListWindow2.right=ListWindowWidth+RectListWindow1.left;

  00120	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindowWidth
  00125	03 05 00 00 00
	00		 add	 eax, DWORD PTR _RectListWindow1
  0012b	a3 08 00 00 00	 mov	 DWORD PTR _RectListWindow2+8, eax

; 1936 :   RectListWindow2.bottom=ListWindowHeight+RectListWindow1.top;

  00130	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindowHeight
  00135	03 05 04 00 00
	00		 add	 eax, DWORD PTR _RectListWindow1+4
  0013b	a3 0c 00 00 00	 mov	 DWORD PTR _RectListWindow2+12, eax

; 1937 :   ListWindow2 = CreateWindowExW(WS_EX_ACCEPTFILES,

  00140	8b f4		 mov	 esi, esp
  00142	6a 00		 push	 0
  00144	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00147	50		 push	 eax
  00148	68 49 08 00 00	 push	 2121			; 00000849H
  0014d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00153	51		 push	 ecx
  00154	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ListWindowHeight
  0015a	52		 push	 edx
  0015b	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindowWidth
  00160	50		 push	 eax
  00161	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow2+4
  00167	51		 push	 ecx
  00168	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow2
  0016e	52		 push	 edx
  0016f	68 03 18 a4 40	 push	 1084495875		; 40a41803H
  00174	68 00 00 00 00	 push	 OFFSET ??_C@_19GAFEELMN@?$AAL?$AAI?$AAS?$AAT?$AA?$AA@
  00179	68 00 00 00 00	 push	 OFFSET ??_C@_1BA@BFOCGNID@?$AAL?$AAI?$AAS?$AAT?$AAB?$AAO?$AAX?$AA?$AA@
  0017e	6a 10		 push	 16			; 00000010H
  00180	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  00186	3b f4		 cmp	 esi, esp
  00188	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018d	a3 00 00 00 00	 mov	 DWORD PTR _ListWindow2, eax

; 1938 :                                L"LISTBOX",
; 1939 :                                L"LIST",
; 1940 :                                WS_CHILD|WS_BORDER|LBS_SORT|LBS_NOTIFY|WS_VSCROLL|
; 1941 :                                WS_THICKFRAME|
; 1942 : //                               LBS_MULTIPLESEL|
; 1943 :                                LBS_EXTENDEDSEL|
; 1944 :                                LBS_DISABLENOSCROLL,
; 1945 :                                RectListWindow2.left,
; 1946 :                                RectListWindow2.top,
; 1947 :                                ListWindowWidth,
; 1948 :                                ListWindowHeight,
; 1949 :                                LIBMANWindow,
; 1950 :                                (HMENU)ID_LIST2,
; 1951 :                                hInstance,
; 1952 :                                NULL);
; 1953 :   ShowWindow(ListWindow2,SW_SHOW);

  00192	8b f4		 mov	 esi, esp
  00194	6a 05		 push	 5
  00196	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow2
  0019b	50		 push	 eax
  0019c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  001a2	3b f4		 cmp	 esi, esp
  001a4	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1954 :   GetClientRect(ListWindow2,&NewRect);

  001a9	8b f4		 mov	 esi, esp
  001ab	8d 45 dc	 lea	 eax, DWORD PTR _NewRect$[ebp]
  001ae	50		 push	 eax
  001af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ListWindow2
  001b5	51		 push	 ecx
  001b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  001bc	3b f4		 cmp	 esi, esp
  001be	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1955 :   RectListWindow2.right=NewRect.right-NewRect.left+RectListWindow2.left;

  001c3	8b 45 e4	 mov	 eax, DWORD PTR _NewRect$[ebp+8]
  001c6	2b 45 dc	 sub	 eax, DWORD PTR _NewRect$[ebp]
  001c9	03 05 00 00 00
	00		 add	 eax, DWORD PTR _RectListWindow2
  001cf	a3 08 00 00 00	 mov	 DWORD PTR _RectListWindow2+8, eax

; 1956 :   RectListWindow2.bottom=NewRect.bottom-NewRect.top+RectListWindow2.top;

  001d4	8b 45 e8	 mov	 eax, DWORD PTR _NewRect$[ebp+12]
  001d7	2b 45 e0	 sub	 eax, DWORD PTR _NewRect$[ebp+4]
  001da	03 05 04 00 00
	00		 add	 eax, DWORD PTR _RectListWindow2+4
  001e0	a3 0c 00 00 00	 mov	 DWORD PTR _RectListWindow2+12, eax

; 1957 : //  Utf8ToUnicode("New lib и",Wstr,200);
; 1958 :   Utf8ToUnicode(SC(32,"New lib"),Wstr,200);

  001e5	68 c8 00 00 00	 push	 200			; 000000c8H
  001ea	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  001f0	50		 push	 eax
  001f1	68 00 00 00 00	 push	 OFFSET ??_C@_07MJJPDAEH@New?5lib?$AA@
  001f6	6a 20		 push	 32			; 00000020H
  001f8	e8 00 00 00 00	 call	 _StringConvert
  001fd	83 c4 08	 add	 esp, 8
  00200	50		 push	 eax
  00201	e8 00 00 00 00	 call	 _Utf8ToUnicode
  00206	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1959 :   CreateNewLibButton1 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  00209	8b f4		 mov	 esi, esp
  0020b	6a 00		 push	 0
  0020d	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00210	50		 push	 eax
  00211	68 39 08 00 00	 push	 2105			; 00000839H
  00216	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  0021c	51		 push	 ecx
  0021d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  00223	52		 push	 edx
  00224	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  00229	50		 push	 eax
  0022a	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow1+12
  00230	83 c1 0e	 add	 ecx, 14			; 0000000eH
  00233	51		 push	 ecx
  00234	6b 15 00 00 00
	00 00		 imul	 edx, DWORD PTR _ButtonStepX, 0
  0023b	03 15 00 00 00
	00		 add	 edx, DWORD PTR _RectListWindow1
  00241	52		 push	 edx
  00242	68 00 00 00 40	 push	 1073741824		; 40000000H
  00247	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  0024d	50		 push	 eax
  0024e	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  00253	6a 00		 push	 0
  00255	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  0025b	3b f4		 cmp	 esi, esp
  0025d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00262	a3 00 00 00 00	 mov	 DWORD PTR _CreateNewLibButton1, eax

; 1960 :                                      RectListWindow1.left+ButtonStepX*0,RectListWindow1.bottom+14,
; 1961 :                                      ButtonSizeX,ButtonSizeY,
; 1962 :                                      LIBMANWindow,(HMENU)ID_CREATE_LIB1,hInstance,NULL);
; 1963 : 
; 1964 :   ShowWindow(CreateNewLibButton1,SW_SHOW);

  00267	8b f4		 mov	 esi, esp
  00269	6a 05		 push	 5
  0026b	a1 00 00 00 00	 mov	 eax, DWORD PTR _CreateNewLibButton1
  00270	50		 push	 eax
  00271	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  00277	3b f4		 cmp	 esi, esp
  00279	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1965 :   Utf8ToUnicode(SC(33,"Open lib"),Wstr,200);

  0027e	68 c8 00 00 00	 push	 200			; 000000c8H
  00283	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  00289	50		 push	 eax
  0028a	68 00 00 00 00	 push	 OFFSET ??_C@_08PPABCFEK@Open?5lib?$AA@
  0028f	6a 21		 push	 33			; 00000021H
  00291	e8 00 00 00 00	 call	 _StringConvert
  00296	83 c4 08	 add	 esp, 8
  00299	50		 push	 eax
  0029a	e8 00 00 00 00	 call	 _Utf8ToUnicode
  0029f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1966 :   OpenLibButton1 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  002a2	8b f4		 mov	 esi, esp
  002a4	6a 00		 push	 0
  002a6	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  002a9	50		 push	 eax
  002aa	68 4c 08 00 00	 push	 2124			; 0000084cH
  002af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  002b5	51		 push	 ecx
  002b6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  002bc	52		 push	 edx
  002bd	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  002c2	50		 push	 eax
  002c3	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow1+12
  002c9	83 c1 0e	 add	 ecx, 14			; 0000000eH
  002cc	51		 push	 ecx
  002cd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow1
  002d3	03 15 00 00 00
	00		 add	 edx, DWORD PTR _ButtonStepX
  002d9	52		 push	 edx
  002da	68 00 00 00 40	 push	 1073741824		; 40000000H
  002df	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  002e5	50		 push	 eax
  002e6	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  002eb	6a 00		 push	 0
  002ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  002f3	3b f4		 cmp	 esi, esp
  002f5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002fa	a3 00 00 00 00	 mov	 DWORD PTR _OpenLibButton1, eax

; 1967 :                                 RectListWindow1.left+ButtonStepX,RectListWindow1.bottom+14,
; 1968 :                                 ButtonSizeX,ButtonSizeY,
; 1969 :                                 LIBMANWindow,(HMENU)ID_OPEN_LIB1,hInstance,NULL);
; 1970 :   ShowWindow(OpenLibButton1,SW_SHOW);

  002ff	8b f4		 mov	 esi, esp
  00301	6a 05		 push	 5
  00303	a1 00 00 00 00	 mov	 eax, DWORD PTR _OpenLibButton1
  00308	50		 push	 eax
  00309	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  0030f	3b f4		 cmp	 esi, esp
  00311	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1971 : /*
; 1972 :   SaveLibButton1 = CreateWindow(L"BUTTON","Save lib",WS_CHILD,
; 1973 :                                 RectListWindow1.left+ButtonStepX*2,RectListWindow1.bottom+10,
; 1974 :                                 ButtonSizeX,ButtonSizeY,
; 1975 :                                 LIBMANWindow,(HMENU)ID_SAVE_LIB1,hInstance,NULL);
; 1976 :   ShowWindow(SaveLibButton1,SW_SHOW);
; 1977 : */
; 1978 :   Utf8ToUnicode(SC(34,"Close lib"),Wstr,200);

  00316	68 c8 00 00 00	 push	 200			; 000000c8H
  0031b	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  00321	50		 push	 eax
  00322	68 00 00 00 00	 push	 OFFSET ??_C@_09PPCBCBOH@Close?5lib?$AA@
  00327	6a 22		 push	 34			; 00000022H
  00329	e8 00 00 00 00	 call	 _StringConvert
  0032e	83 c4 08	 add	 esp, 8
  00331	50		 push	 eax
  00332	e8 00 00 00 00	 call	 _Utf8ToUnicode
  00337	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1979 :   CloseLibButton1 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  0033a	8b f4		 mov	 esi, esp
  0033c	6a 00		 push	 0
  0033e	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00341	50		 push	 eax
  00342	68 35 08 00 00	 push	 2101			; 00000835H
  00347	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  0034d	51		 push	 ecx
  0034e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  00354	52		 push	 edx
  00355	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  0035a	50		 push	 eax
  0035b	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow1+12
  00361	83 c1 0e	 add	 ecx, 14			; 0000000eH
  00364	51		 push	 ecx
  00365	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonStepX
  0036b	a1 00 00 00 00	 mov	 eax, DWORD PTR _RectListWindow1
  00370	8d 0c 50	 lea	 ecx, DWORD PTR [eax+edx*2]
  00373	51		 push	 ecx
  00374	68 00 00 00 40	 push	 1073741824		; 40000000H
  00379	8d 95 d4 fb ff
	ff		 lea	 edx, DWORD PTR _Wstr$[ebp]
  0037f	52		 push	 edx
  00380	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  00385	6a 00		 push	 0
  00387	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  0038d	3b f4		 cmp	 esi, esp
  0038f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00394	a3 00 00 00 00	 mov	 DWORD PTR _CloseLibButton1, eax

; 1980 :                                  RectListWindow1.left+ButtonStepX*2,RectListWindow1.bottom+14,
; 1981 :                                  ButtonSizeX,ButtonSizeY,
; 1982 :                                  LIBMANWindow,(HMENU)ID_CLOSE_LIB1,hInstance,NULL);
; 1983 :   ShowWindow(CloseLibButton1,SW_SHOW);

  00399	8b f4		 mov	 esi, esp
  0039b	6a 05		 push	 5
  0039d	a1 00 00 00 00	 mov	 eax, DWORD PTR _CloseLibButton1
  003a2	50		 push	 eax
  003a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  003a9	3b f4		 cmp	 esi, esp
  003ab	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1984 :   if (LibraryMode==0) {

  003b0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  003b7	0f 85 46 01 00
	00		 jne	 $LN2@CreateWind

; 1985 :     Utf8ToUnicode(SC(35,"Import symbols"),Wstr,200);

  003bd	68 c8 00 00 00	 push	 200			; 000000c8H
  003c2	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  003c8	50		 push	 eax
  003c9	68 00 00 00 00	 push	 OFFSET ??_C@_0P@LOIAGIPA@Import?5symbols?$AA@
  003ce	6a 23		 push	 35			; 00000023H
  003d0	e8 00 00 00 00	 call	 _StringConvert
  003d5	83 c4 08	 add	 esp, 8
  003d8	50		 push	 eax
  003d9	e8 00 00 00 00	 call	 _Utf8ToUnicode
  003de	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1986 :     ImportSymbolsButton1 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  003e1	8b f4		 mov	 esi, esp
  003e3	6a 00		 push	 0
  003e5	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  003e8	50		 push	 eax
  003e9	68 46 08 00 00	 push	 2118			; 00000846H
  003ee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  003f4	51		 push	 ecx
  003f5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  003fb	52		 push	 edx
  003fc	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  00401	50		 push	 eax
  00402	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepY
  00408	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow1+12
  0040e	8d 44 0a 0e	 lea	 eax, DWORD PTR [edx+ecx+14]
  00412	50		 push	 eax
  00413	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow1
  00419	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR _ButtonStepX
  0041f	51		 push	 ecx
  00420	68 00 00 00 40	 push	 1073741824		; 40000000H
  00425	8d 95 d4 fb ff
	ff		 lea	 edx, DWORD PTR _Wstr$[ebp]
  0042b	52		 push	 edx
  0042c	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  00431	6a 00		 push	 0
  00433	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  00439	3b f4		 cmp	 esi, esp
  0043b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00440	a3 00 00 00 00	 mov	 DWORD PTR _ImportSymbolsButton1, eax

; 1987 :                                         RectListWindow1.left+ButtonStepX*1,RectListWindow1.bottom+ButtonStepY+14,
; 1988 :                                         ButtonSizeX,ButtonSizeY,
; 1989 :                                         LIBMANWindow,(HMENU)ID_IMPORT_SYMBOLS1,hInstance,NULL);
; 1990 :     ShowWindow(ImportSymbolsButton1,SW_SHOW);

  00445	8b f4		 mov	 esi, esp
  00447	6a 05		 push	 5
  00449	a1 00 00 00 00	 mov	 eax, DWORD PTR _ImportSymbolsButton1
  0044e	50		 push	 eax
  0044f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  00455	3b f4		 cmp	 esi, esp
  00457	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1991 :     Utf8ToUnicode(SC(36,"Export symbols"),Wstr,200);

  0045c	68 c8 00 00 00	 push	 200			; 000000c8H
  00461	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  00467	50		 push	 eax
  00468	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BJGEJDBF@Export?5symbols?$AA@
  0046d	6a 24		 push	 36			; 00000024H
  0046f	e8 00 00 00 00	 call	 _StringConvert
  00474	83 c4 08	 add	 esp, 8
  00477	50		 push	 eax
  00478	e8 00 00 00 00	 call	 _Utf8ToUnicode
  0047d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1992 :     ExportSymbolsButton1 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  00480	8b f4		 mov	 esi, esp
  00482	6a 00		 push	 0
  00484	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00487	50		 push	 eax
  00488	68 42 08 00 00	 push	 2114			; 00000842H
  0048d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00493	51		 push	 ecx
  00494	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  0049a	52		 push	 edx
  0049b	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  004a0	50		 push	 eax
  004a1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepY
  004a7	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow1+12
  004ad	8d 44 0a 0e	 lea	 eax, DWORD PTR [edx+ecx+14]
  004b1	50		 push	 eax
  004b2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepX
  004b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow1
  004be	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  004c1	50		 push	 eax
  004c2	68 00 00 00 40	 push	 1073741824		; 40000000H
  004c7	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR _Wstr$[ebp]
  004cd	51		 push	 ecx
  004ce	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  004d3	6a 00		 push	 0
  004d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  004db	3b f4		 cmp	 esi, esp
  004dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004e2	a3 00 00 00 00	 mov	 DWORD PTR _ExportSymbolsButton1, eax

; 1993 :                                         RectListWindow1.left+ButtonStepX*2,RectListWindow1.bottom+ButtonStepY+14,
; 1994 :                                         ButtonSizeX,ButtonSizeY,
; 1995 :                                         LIBMANWindow,(HMENU)ID_EXPORT_SYMBOLS1,hInstance,NULL);
; 1996 :     ShowWindow(ExportSymbolsButton1,SW_SHOW);

  004e7	8b f4		 mov	 esi, esp
  004e9	6a 05		 push	 5
  004eb	a1 00 00 00 00	 mov	 eax, DWORD PTR _ExportSymbolsButton1
  004f0	50		 push	 eax
  004f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  004f7	3b f4		 cmp	 esi, esp
  004f9	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1997 :   } else {

  004fe	e9 41 01 00 00	 jmp	 $LN3@CreateWind
$LN2@CreateWind:

; 1998 :     Utf8ToUnicode(SC(52,"Import geometries"),Wstr,200);

  00503	68 c8 00 00 00	 push	 200			; 000000c8H
  00508	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  0050e	50		 push	 eax
  0050f	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@FLIGJAJL@Import?5geometries?$AA@
  00514	6a 34		 push	 52			; 00000034H
  00516	e8 00 00 00 00	 call	 _StringConvert
  0051b	83 c4 08	 add	 esp, 8
  0051e	50		 push	 eax
  0051f	e8 00 00 00 00	 call	 _Utf8ToUnicode
  00524	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1999 :     ImportSymbolsButton1 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  00527	8b f4		 mov	 esi, esp
  00529	6a 00		 push	 0
  0052b	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  0052e	50		 push	 eax
  0052f	68 46 08 00 00	 push	 2118			; 00000846H
  00534	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  0053a	51		 push	 ecx
  0053b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  00541	52		 push	 edx
  00542	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  00547	50		 push	 eax
  00548	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepY
  0054e	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow1+12
  00554	8d 44 0a 0e	 lea	 eax, DWORD PTR [edx+ecx+14]
  00558	50		 push	 eax
  00559	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow1
  0055f	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR _ButtonStepX
  00565	51		 push	 ecx
  00566	68 00 00 00 40	 push	 1073741824		; 40000000H
  0056b	8d 95 d4 fb ff
	ff		 lea	 edx, DWORD PTR _Wstr$[ebp]
  00571	52		 push	 edx
  00572	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  00577	6a 00		 push	 0
  00579	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  0057f	3b f4		 cmp	 esi, esp
  00581	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00586	a3 00 00 00 00	 mov	 DWORD PTR _ImportSymbolsButton1, eax

; 2000 :                                         RectListWindow1.left+ButtonStepX*1,RectListWindow1.bottom+ButtonStepY+14,
; 2001 :                                         ButtonSizeX,ButtonSizeY,
; 2002 :                                         LIBMANWindow,(HMENU)ID_IMPORT_SYMBOLS1,hInstance,NULL);
; 2003 :     ShowWindow(ImportSymbolsButton1,SW_SHOW);

  0058b	8b f4		 mov	 esi, esp
  0058d	6a 05		 push	 5
  0058f	a1 00 00 00 00	 mov	 eax, DWORD PTR _ImportSymbolsButton1
  00594	50		 push	 eax
  00595	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  0059b	3b f4		 cmp	 esi, esp
  0059d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2004 :     Utf8ToUnicode(SC(53,"Export geometries"),Wstr,200);

  005a2	68 c8 00 00 00	 push	 200			; 000000c8H
  005a7	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  005ad	50		 push	 eax
  005ae	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KEIAJMGA@Export?5geometries?$AA@
  005b3	6a 35		 push	 53			; 00000035H
  005b5	e8 00 00 00 00	 call	 _StringConvert
  005ba	83 c4 08	 add	 esp, 8
  005bd	50		 push	 eax
  005be	e8 00 00 00 00	 call	 _Utf8ToUnicode
  005c3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2005 :     ExportSymbolsButton1 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  005c6	8b f4		 mov	 esi, esp
  005c8	6a 00		 push	 0
  005ca	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  005cd	50		 push	 eax
  005ce	68 42 08 00 00	 push	 2114			; 00000842H
  005d3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  005d9	51		 push	 ecx
  005da	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  005e0	52		 push	 edx
  005e1	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  005e6	50		 push	 eax
  005e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepY
  005ed	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow1+12
  005f3	8d 44 0a 0e	 lea	 eax, DWORD PTR [edx+ecx+14]
  005f7	50		 push	 eax
  005f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepX
  005fe	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow1
  00604	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  00607	50		 push	 eax
  00608	68 00 00 00 40	 push	 1073741824		; 40000000H
  0060d	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR _Wstr$[ebp]
  00613	51		 push	 ecx
  00614	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  00619	6a 00		 push	 0
  0061b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  00621	3b f4		 cmp	 esi, esp
  00623	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00628	a3 00 00 00 00	 mov	 DWORD PTR _ExportSymbolsButton1, eax

; 2006 :                                         RectListWindow1.left+ButtonStepX*2,RectListWindow1.bottom+ButtonStepY+14,
; 2007 :                                         ButtonSizeX,ButtonSizeY,
; 2008 :                                         LIBMANWindow,(HMENU)ID_EXPORT_SYMBOLS1,hInstance,NULL);
; 2009 :     ShowWindow(ExportSymbolsButton1,SW_SHOW);

  0062d	8b f4		 mov	 esi, esp
  0062f	6a 05		 push	 5
  00631	a1 00 00 00 00	 mov	 eax, DWORD PTR _ExportSymbolsButton1
  00636	50		 push	 eax
  00637	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  0063d	3b f4		 cmp	 esi, esp
  0063f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@CreateWind:

; 2010 :   }
; 2011 :   Utf8ToUnicode(SC(37,"Deselect all"),Wstr,200);

  00644	68 c8 00 00 00	 push	 200			; 000000c8H
  00649	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  0064f	50		 push	 eax
  00650	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KPCPMOND@Deselect?5all?$AA@
  00655	6a 25		 push	 37			; 00000025H
  00657	e8 00 00 00 00	 call	 _StringConvert
  0065c	83 c4 08	 add	 esp, 8
  0065f	50		 push	 eax
  00660	e8 00 00 00 00	 call	 _Utf8ToUnicode
  00665	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2012 :   DeselectAllButton1 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  00668	8b f4		 mov	 esi, esp
  0066a	6a 00		 push	 0
  0066c	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  0066f	50		 push	 eax
  00670	68 3d 08 00 00	 push	 2109			; 0000083dH
  00675	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  0067b	51		 push	 ecx
  0067c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  00682	52		 push	 edx
  00683	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  00688	50		 push	 eax
  00689	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepY
  0068f	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow1+12
  00695	8d 44 4a 0e	 lea	 eax, DWORD PTR [edx+ecx*2+14]
  00699	50		 push	 eax
  0069a	6b 0d 00 00 00
	00 00		 imul	 ecx, DWORD PTR _ButtonStepX, 0
  006a1	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR _RectListWindow1
  006a7	51		 push	 ecx
  006a8	68 00 00 00 40	 push	 1073741824		; 40000000H
  006ad	8d 95 d4 fb ff
	ff		 lea	 edx, DWORD PTR _Wstr$[ebp]
  006b3	52		 push	 edx
  006b4	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  006b9	6a 00		 push	 0
  006bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  006c1	3b f4		 cmp	 esi, esp
  006c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006c8	a3 00 00 00 00	 mov	 DWORD PTR _DeselectAllButton1, eax

; 2013 :                                     RectListWindow1.left+ButtonStepX*0,RectListWindow1.bottom+ButtonStepY*2+14,
; 2014 :                                     ButtonSizeX,ButtonSizeY,
; 2015 :                                     LIBMANWindow,(HMENU)ID_DESELECT_ALL1,hInstance,NULL);
; 2016 :   ShowWindow(DeselectAllButton1,SW_SHOW);

  006cd	8b f4		 mov	 esi, esp
  006cf	6a 05		 push	 5
  006d1	a1 00 00 00 00	 mov	 eax, DWORD PTR _DeselectAllButton1
  006d6	50		 push	 eax
  006d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  006dd	3b f4		 cmp	 esi, esp
  006df	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2017 :   Utf8ToUnicode(SC(58,"Select all"),Wstr,200);

  006e4	68 c8 00 00 00	 push	 200			; 000000c8H
  006e9	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  006ef	50		 push	 eax
  006f0	68 00 00 00 00	 push	 OFFSET ??_C@_0L@IAIFFGEP@Select?5all?$AA@
  006f5	6a 3a		 push	 58			; 0000003aH
  006f7	e8 00 00 00 00	 call	 _StringConvert
  006fc	83 c4 08	 add	 esp, 8
  006ff	50		 push	 eax
  00700	e8 00 00 00 00	 call	 _Utf8ToUnicode
  00705	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2018 :   SelectAllButton1 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  00708	8b f4		 mov	 esi, esp
  0070a	6a 00		 push	 0
  0070c	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  0070f	50		 push	 eax
  00710	68 54 08 00 00	 push	 2132			; 00000854H
  00715	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  0071b	51		 push	 ecx
  0071c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  00722	52		 push	 edx
  00723	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  00728	50		 push	 eax
  00729	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepY
  0072f	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow1+12
  00735	8d 44 4a 0e	 lea	 eax, DWORD PTR [edx+ecx*2+14]
  00739	50		 push	 eax
  0073a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow1
  00740	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR _ButtonStepX
  00746	51		 push	 ecx
  00747	68 00 00 00 40	 push	 1073741824		; 40000000H
  0074c	8d 95 d4 fb ff
	ff		 lea	 edx, DWORD PTR _Wstr$[ebp]
  00752	52		 push	 edx
  00753	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  00758	6a 00		 push	 0
  0075a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  00760	3b f4		 cmp	 esi, esp
  00762	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00767	a3 00 00 00 00	 mov	 DWORD PTR _SelectAllButton1, eax

; 2019 :                                     RectListWindow1.left+ButtonStepX*1,RectListWindow1.bottom+ButtonStepY*2+14,
; 2020 :                                     ButtonSizeX,ButtonSizeY,
; 2021 :                                     LIBMANWindow,(HMENU)ID_SELECT_ALL1,hInstance,NULL);
; 2022 :   ShowWindow(SelectAllButton1,SW_SHOW);

  0076c	8b f4		 mov	 esi, esp
  0076e	6a 05		 push	 5
  00770	a1 00 00 00 00	 mov	 eax, DWORD PTR _SelectAllButton1
  00775	50		 push	 eax
  00776	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  0077c	3b f4		 cmp	 esi, esp
  0077e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2023 :   if (LibraryMode==0) {

  00783	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  0078a	0f 85 8e 00 00
	00		 jne	 $LN4@CreateWind

; 2024 :     Utf8ToUnicode(SC(38,"Delete symbols"),Wstr,200);

  00790	68 c8 00 00 00	 push	 200			; 000000c8H
  00795	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  0079b	50		 push	 eax
  0079c	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JFIENDBP@Delete?5symbols?$AA@
  007a1	6a 26		 push	 38			; 00000026H
  007a3	e8 00 00 00 00	 call	 _StringConvert
  007a8	83 c4 08	 add	 esp, 8
  007ab	50		 push	 eax
  007ac	e8 00 00 00 00	 call	 _Utf8ToUnicode
  007b1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2025 :     DeleteSymbolsButton1 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  007b4	8b f4		 mov	 esi, esp
  007b6	6a 00		 push	 0
  007b8	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  007bb	50		 push	 eax
  007bc	68 3b 08 00 00	 push	 2107			; 0000083bH
  007c1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  007c7	51		 push	 ecx
  007c8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  007ce	52		 push	 edx
  007cf	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  007d4	50		 push	 eax
  007d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepY
  007db	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow1+12
  007e1	8d 44 0a 0e	 lea	 eax, DWORD PTR [edx+ecx+14]
  007e5	50		 push	 eax
  007e6	6b 0d 00 00 00
	00 00		 imul	 ecx, DWORD PTR _ButtonStepX, 0
  007ed	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR _RectListWindow1
  007f3	51		 push	 ecx
  007f4	68 00 00 00 40	 push	 1073741824		; 40000000H
  007f9	8d 95 d4 fb ff
	ff		 lea	 edx, DWORD PTR _Wstr$[ebp]
  007ff	52		 push	 edx
  00800	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  00805	6a 00		 push	 0
  00807	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  0080d	3b f4		 cmp	 esi, esp
  0080f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00814	a3 00 00 00 00	 mov	 DWORD PTR _DeleteSymbolsButton1, eax

; 2026 :                                         RectListWindow1.left+ButtonStepX*0,RectListWindow1.bottom+ButtonStepY*1+14,
; 2027 :                                         ButtonSizeX,ButtonSizeY,
; 2028 :                                         LIBMANWindow,(HMENU)ID_DELETE_SYMBOLS1,hInstance,NULL);
; 2029 :   } else {

  00819	e9 89 00 00 00	 jmp	 $LN5@CreateWind
$LN4@CreateWind:

; 2030 :     Utf8ToUnicode(SC(57,"Delete geometries"),Wstr,200);

  0081e	68 c8 00 00 00	 push	 200			; 000000c8H
  00823	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  00829	50		 push	 eax
  0082a	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PJGELEEH@Delete?5geometries?$AA@
  0082f	6a 39		 push	 57			; 00000039H
  00831	e8 00 00 00 00	 call	 _StringConvert
  00836	83 c4 08	 add	 esp, 8
  00839	50		 push	 eax
  0083a	e8 00 00 00 00	 call	 _Utf8ToUnicode
  0083f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2031 :     DeleteSymbolsButton1 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  00842	8b f4		 mov	 esi, esp
  00844	6a 00		 push	 0
  00846	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00849	50		 push	 eax
  0084a	68 3b 08 00 00	 push	 2107			; 0000083bH
  0084f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00855	51		 push	 ecx
  00856	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  0085c	52		 push	 edx
  0085d	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  00862	50		 push	 eax
  00863	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepY
  00869	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow1+12
  0086f	8d 44 0a 0e	 lea	 eax, DWORD PTR [edx+ecx+14]
  00873	50		 push	 eax
  00874	6b 0d 00 00 00
	00 00		 imul	 ecx, DWORD PTR _ButtonStepX, 0
  0087b	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR _RectListWindow1
  00881	51		 push	 ecx
  00882	68 00 00 00 40	 push	 1073741824		; 40000000H
  00887	8d 95 d4 fb ff
	ff		 lea	 edx, DWORD PTR _Wstr$[ebp]
  0088d	52		 push	 edx
  0088e	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  00893	6a 00		 push	 0
  00895	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  0089b	3b f4		 cmp	 esi, esp
  0089d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008a2	a3 00 00 00 00	 mov	 DWORD PTR _DeleteSymbolsButton1, eax
$LN5@CreateWind:

; 2032 :                                         RectListWindow1.left+ButtonStepX*0,RectListWindow1.bottom+ButtonStepY*1+14,
; 2033 :                                         ButtonSizeX,ButtonSizeY,
; 2034 :                                         LIBMANWindow,(HMENU)ID_DELETE_SYMBOLS1,hInstance,NULL);
; 2035 :   }
; 2036 :   ShowWindow(DeleteSymbolsButton1,SW_SHOW);

  008a7	8b f4		 mov	 esi, esp
  008a9	6a 05		 push	 5
  008ab	a1 00 00 00 00	 mov	 eax, DWORD PTR _DeleteSymbolsButton1
  008b0	50		 push	 eax
  008b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  008b7	3b f4		 cmp	 esi, esp
  008b9	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2037 : 
; 2038 :   Utf8ToUnicode(SC(39,"Copy ►"),Wstr,200);

  008be	68 c8 00 00 00	 push	 200			; 000000c8H
  008c3	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  008c9	50		 push	 eax
  008ca	68 00 00 00 00	 push	 OFFSET ??_C@_08GNGEMOGB@Copy?5?b?$JG?$LK?$AA@
  008cf	6a 27		 push	 39			; 00000027H
  008d1	e8 00 00 00 00	 call	 _StringConvert
  008d6	83 c4 08	 add	 esp, 8
  008d9	50		 push	 eax
  008da	e8 00 00 00 00	 call	 _Utf8ToUnicode
  008df	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2039 : //  Utf8ToUnicode(SC(39,"Copy ->"),Wstr,200);
; 2040 :   CopyButton1 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  008e2	8b f4		 mov	 esi, esp
  008e4	6a 00		 push	 0
  008e6	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  008e9	50		 push	 eax
  008ea	68 37 08 00 00	 push	 2103			; 00000837H
  008ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  008f5	51		 push	 ecx
  008f6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  008fc	52		 push	 edx
  008fd	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  00902	50		 push	 eax
  00903	6a 78		 push	 120			; 00000078H
  00905	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow2
  0090b	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR _ButtonSizeX
  00911	83 e9 0f	 sub	 ecx, 15			; 0000000fH
  00914	51		 push	 ecx
  00915	68 00 00 00 40	 push	 1073741824		; 40000000H
  0091a	8d 95 d4 fb ff
	ff		 lea	 edx, DWORD PTR _Wstr$[ebp]
  00920	52		 push	 edx
  00921	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  00926	6a 00		 push	 0
  00928	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  0092e	3b f4		 cmp	 esi, esp
  00930	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00935	a3 00 00 00 00	 mov	 DWORD PTR _CopyButton1, eax

; 2041 :                              RectListWindow2.left-ButtonSizeX-15,120,
; 2042 :                              ButtonSizeX,ButtonSizeY,
; 2043 :                              LIBMANWindow,(HMENU)ID_COPY_SYMBOLS1,hInstance,NULL);
; 2044 :   ShowWindow(CopyButton1,SW_SHOW);

  0093a	8b f4		 mov	 esi, esp
  0093c	6a 05		 push	 5
  0093e	a1 00 00 00 00	 mov	 eax, DWORD PTR _CopyButton1
  00943	50		 push	 eax
  00944	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  0094a	3b f4		 cmp	 esi, esp
  0094c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2045 :   Utf8ToUnicode(SC(40,"Move ►"),Wstr,200);

  00951	68 c8 00 00 00	 push	 200			; 000000c8H
  00956	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  0095c	50		 push	 eax
  0095d	68 00 00 00 00	 push	 OFFSET ??_C@_08LCGCOCCJ@Move?5?b?$JG?$LK?$AA@
  00962	6a 28		 push	 40			; 00000028H
  00964	e8 00 00 00 00	 call	 _StringConvert
  00969	83 c4 08	 add	 esp, 8
  0096c	50		 push	 eax
  0096d	e8 00 00 00 00	 call	 _Utf8ToUnicode
  00972	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2046 : //  Utf8ToUnicode(SC(40,"Move ->"),Wstr,200);
; 2047 :   MoveButton1 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  00975	8b f4		 mov	 esi, esp
  00977	6a 00		 push	 0
  00979	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  0097c	50		 push	 eax
  0097d	68 4a 08 00 00	 push	 2122			; 0000084aH
  00982	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00988	51		 push	 ecx
  00989	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  0098f	52		 push	 edx
  00990	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  00995	50		 push	 eax
  00996	68 a0 00 00 00	 push	 160			; 000000a0H
  0099b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow2
  009a1	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR _ButtonSizeX
  009a7	83 e9 0f	 sub	 ecx, 15			; 0000000fH
  009aa	51		 push	 ecx
  009ab	68 00 00 00 40	 push	 1073741824		; 40000000H
  009b0	8d 95 d4 fb ff
	ff		 lea	 edx, DWORD PTR _Wstr$[ebp]
  009b6	52		 push	 edx
  009b7	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  009bc	6a 00		 push	 0
  009be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  009c4	3b f4		 cmp	 esi, esp
  009c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  009cb	a3 00 00 00 00	 mov	 DWORD PTR _MoveButton1, eax

; 2048 :                              RectListWindow2.left-ButtonSizeX-15,160,
; 2049 :                              ButtonSizeX,ButtonSizeY,
; 2050 :                              LIBMANWindow,(HMENU)ID_MOVE_SYMBOLS1,hInstance,NULL);
; 2051 :   ShowWindow(MoveButton1,SW_SHOW);

  009d0	8b f4		 mov	 esi, esp
  009d2	6a 05		 push	 5
  009d4	a1 00 00 00 00	 mov	 eax, DWORD PTR _MoveButton1
  009d9	50		 push	 eax
  009da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  009e0	3b f4		 cmp	 esi, esp
  009e2	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2052 : 
; 2053 : 
; 2054 :   Utf8ToUnicode(SC(32,"New lib"),Wstr,200);

  009e7	68 c8 00 00 00	 push	 200			; 000000c8H
  009ec	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  009f2	50		 push	 eax
  009f3	68 00 00 00 00	 push	 OFFSET ??_C@_07MJJPDAEH@New?5lib?$AA@
  009f8	6a 20		 push	 32			; 00000020H
  009fa	e8 00 00 00 00	 call	 _StringConvert
  009ff	83 c4 08	 add	 esp, 8
  00a02	50		 push	 eax
  00a03	e8 00 00 00 00	 call	 _Utf8ToUnicode
  00a08	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2055 :   CreateNewLibButton2 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  00a0b	8b f4		 mov	 esi, esp
  00a0d	6a 00		 push	 0
  00a0f	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00a12	50		 push	 eax
  00a13	68 3a 08 00 00	 push	 2106			; 0000083aH
  00a18	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00a1e	51		 push	 ecx
  00a1f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  00a25	52		 push	 edx
  00a26	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  00a2b	50		 push	 eax
  00a2c	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow2+12
  00a32	83 c1 0e	 add	 ecx, 14			; 0000000eH
  00a35	51		 push	 ecx
  00a36	6b 15 00 00 00
	00 00		 imul	 edx, DWORD PTR _ButtonStepX, 0
  00a3d	03 15 00 00 00
	00		 add	 edx, DWORD PTR _RectListWindow2
  00a43	52		 push	 edx
  00a44	68 00 00 00 40	 push	 1073741824		; 40000000H
  00a49	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  00a4f	50		 push	 eax
  00a50	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  00a55	6a 00		 push	 0
  00a57	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  00a5d	3b f4		 cmp	 esi, esp
  00a5f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a64	a3 00 00 00 00	 mov	 DWORD PTR _CreateNewLibButton2, eax

; 2056 :                                      RectListWindow2.left+ButtonStepX*0,RectListWindow2.bottom+14,
; 2057 :                                      ButtonSizeX,ButtonSizeY,
; 2058 :                                      LIBMANWindow,(HMENU)ID_CREATE_LIB2,hInstance,NULL);
; 2059 :   ShowWindow(CreateNewLibButton2,SW_SHOW);

  00a69	8b f4		 mov	 esi, esp
  00a6b	6a 05		 push	 5
  00a6d	a1 00 00 00 00	 mov	 eax, DWORD PTR _CreateNewLibButton2
  00a72	50		 push	 eax
  00a73	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  00a79	3b f4		 cmp	 esi, esp
  00a7b	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2060 :   Utf8ToUnicode(SC(33,"Open lib"),Wstr,200);

  00a80	68 c8 00 00 00	 push	 200			; 000000c8H
  00a85	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  00a8b	50		 push	 eax
  00a8c	68 00 00 00 00	 push	 OFFSET ??_C@_08PPABCFEK@Open?5lib?$AA@
  00a91	6a 21		 push	 33			; 00000021H
  00a93	e8 00 00 00 00	 call	 _StringConvert
  00a98	83 c4 08	 add	 esp, 8
  00a9b	50		 push	 eax
  00a9c	e8 00 00 00 00	 call	 _Utf8ToUnicode
  00aa1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2061 :   OpenLibButton2 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  00aa4	8b f4		 mov	 esi, esp
  00aa6	6a 00		 push	 0
  00aa8	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00aab	50		 push	 eax
  00aac	68 4d 08 00 00	 push	 2125			; 0000084dH
  00ab1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00ab7	51		 push	 ecx
  00ab8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  00abe	52		 push	 edx
  00abf	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  00ac4	50		 push	 eax
  00ac5	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow2+12
  00acb	83 c1 0e	 add	 ecx, 14			; 0000000eH
  00ace	51		 push	 ecx
  00acf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow2
  00ad5	03 15 00 00 00
	00		 add	 edx, DWORD PTR _ButtonStepX
  00adb	52		 push	 edx
  00adc	68 00 00 00 40	 push	 1073741824		; 40000000H
  00ae1	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  00ae7	50		 push	 eax
  00ae8	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  00aed	6a 00		 push	 0
  00aef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  00af5	3b f4		 cmp	 esi, esp
  00af7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00afc	a3 00 00 00 00	 mov	 DWORD PTR _OpenLibButton2, eax

; 2062 :                                 RectListWindow2.left+ButtonStepX,RectListWindow2.bottom+14,
; 2063 :                                 ButtonSizeX,ButtonSizeY,
; 2064 :                                 LIBMANWindow,(HMENU)ID_OPEN_LIB2,hInstance,NULL);
; 2065 :   ShowWindow(OpenLibButton2,SW_SHOW);

  00b01	8b f4		 mov	 esi, esp
  00b03	6a 05		 push	 5
  00b05	a1 00 00 00 00	 mov	 eax, DWORD PTR _OpenLibButton2
  00b0a	50		 push	 eax
  00b0b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  00b11	3b f4		 cmp	 esi, esp
  00b13	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2066 : /*
; 2067 :   SaveLibButton2 = CreateWindow(L"BUTTON","Save lib",WS_CHILD,
; 2068 :                                 RectListWindow2.left+ButtonStepX*2,RectListWindow2.bottom+10,
; 2069 :                                 ButtonSizeX,ButtonSizeY,
; 2070 :                                 LIBMANWindow,(HMENU)ID_SAVE_LIB2,hInstance,NULL);
; 2071 :   ShowWindow(SaveLibButton2,SW_SHOW);
; 2072 : */
; 2073 :   Utf8ToUnicode(SC(34,"Close lib"),Wstr,200);

  00b18	68 c8 00 00 00	 push	 200			; 000000c8H
  00b1d	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  00b23	50		 push	 eax
  00b24	68 00 00 00 00	 push	 OFFSET ??_C@_09PPCBCBOH@Close?5lib?$AA@
  00b29	6a 22		 push	 34			; 00000022H
  00b2b	e8 00 00 00 00	 call	 _StringConvert
  00b30	83 c4 08	 add	 esp, 8
  00b33	50		 push	 eax
  00b34	e8 00 00 00 00	 call	 _Utf8ToUnicode
  00b39	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2074 :   CloseLibButton2 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  00b3c	8b f4		 mov	 esi, esp
  00b3e	6a 00		 push	 0
  00b40	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00b43	50		 push	 eax
  00b44	68 36 08 00 00	 push	 2102			; 00000836H
  00b49	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00b4f	51		 push	 ecx
  00b50	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  00b56	52		 push	 edx
  00b57	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  00b5c	50		 push	 eax
  00b5d	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow2+12
  00b63	83 c1 0e	 add	 ecx, 14			; 0000000eH
  00b66	51		 push	 ecx
  00b67	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonStepX
  00b6d	a1 00 00 00 00	 mov	 eax, DWORD PTR _RectListWindow2
  00b72	8d 0c 50	 lea	 ecx, DWORD PTR [eax+edx*2]
  00b75	51		 push	 ecx
  00b76	68 00 00 00 40	 push	 1073741824		; 40000000H
  00b7b	8d 95 d4 fb ff
	ff		 lea	 edx, DWORD PTR _Wstr$[ebp]
  00b81	52		 push	 edx
  00b82	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  00b87	6a 00		 push	 0
  00b89	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  00b8f	3b f4		 cmp	 esi, esp
  00b91	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b96	a3 00 00 00 00	 mov	 DWORD PTR _CloseLibButton2, eax

; 2075 :                                  RectListWindow2.left+ButtonStepX*2,RectListWindow2.bottom+14,
; 2076 :                                  ButtonSizeX,ButtonSizeY,
; 2077 :                                  LIBMANWindow,(HMENU)ID_CLOSE_LIB2,hInstance,NULL);
; 2078 :   ShowWindow(CloseLibButton2,SW_SHOW);

  00b9b	8b f4		 mov	 esi, esp
  00b9d	6a 05		 push	 5
  00b9f	a1 00 00 00 00	 mov	 eax, DWORD PTR _CloseLibButton2
  00ba4	50		 push	 eax
  00ba5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  00bab	3b f4		 cmp	 esi, esp
  00bad	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2079 :   if (LibraryMode==0) {

  00bb2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  00bb9	0f 85 8d 00 00
	00		 jne	 $LN6@CreateWind

; 2080 :     Utf8ToUnicode(SC(35,"Import symbols"),Wstr,200);

  00bbf	68 c8 00 00 00	 push	 200			; 000000c8H
  00bc4	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  00bca	50		 push	 eax
  00bcb	68 00 00 00 00	 push	 OFFSET ??_C@_0P@LOIAGIPA@Import?5symbols?$AA@
  00bd0	6a 23		 push	 35			; 00000023H
  00bd2	e8 00 00 00 00	 call	 _StringConvert
  00bd7	83 c4 08	 add	 esp, 8
  00bda	50		 push	 eax
  00bdb	e8 00 00 00 00	 call	 _Utf8ToUnicode
  00be0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2081 :     ImportSymbolsButton2 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  00be3	8b f4		 mov	 esi, esp
  00be5	6a 00		 push	 0
  00be7	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00bea	50		 push	 eax
  00beb	68 47 08 00 00	 push	 2119			; 00000847H
  00bf0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00bf6	51		 push	 ecx
  00bf7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  00bfd	52		 push	 edx
  00bfe	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  00c03	50		 push	 eax
  00c04	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepY
  00c0a	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow2+12
  00c10	8d 44 0a 0e	 lea	 eax, DWORD PTR [edx+ecx+14]
  00c14	50		 push	 eax
  00c15	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow2
  00c1b	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR _ButtonStepX
  00c21	51		 push	 ecx
  00c22	68 00 00 00 40	 push	 1073741824		; 40000000H
  00c27	8d 95 d4 fb ff
	ff		 lea	 edx, DWORD PTR _Wstr$[ebp]
  00c2d	52		 push	 edx
  00c2e	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  00c33	6a 00		 push	 0
  00c35	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  00c3b	3b f4		 cmp	 esi, esp
  00c3d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c42	a3 00 00 00 00	 mov	 DWORD PTR _ImportSymbolsButton2, eax

; 2082 :                                         RectListWindow2.left+ButtonStepX*1,RectListWindow2.bottom+ButtonStepY+14,
; 2083 :                                         ButtonSizeX,ButtonSizeY,
; 2084 :                                         LIBMANWindow,(HMENU)ID_IMPORT_SYMBOLS2,hInstance,NULL);
; 2085 :   } else {

  00c47	e9 88 00 00 00	 jmp	 $LN7@CreateWind
$LN6@CreateWind:

; 2086 :     Utf8ToUnicode(SC(52,"Import geometries"),Wstr,200);

  00c4c	68 c8 00 00 00	 push	 200			; 000000c8H
  00c51	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  00c57	50		 push	 eax
  00c58	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@FLIGJAJL@Import?5geometries?$AA@
  00c5d	6a 34		 push	 52			; 00000034H
  00c5f	e8 00 00 00 00	 call	 _StringConvert
  00c64	83 c4 08	 add	 esp, 8
  00c67	50		 push	 eax
  00c68	e8 00 00 00 00	 call	 _Utf8ToUnicode
  00c6d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2087 :     ImportSymbolsButton2 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  00c70	8b f4		 mov	 esi, esp
  00c72	6a 00		 push	 0
  00c74	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00c77	50		 push	 eax
  00c78	68 47 08 00 00	 push	 2119			; 00000847H
  00c7d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00c83	51		 push	 ecx
  00c84	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  00c8a	52		 push	 edx
  00c8b	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  00c90	50		 push	 eax
  00c91	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepY
  00c97	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow2+12
  00c9d	8d 44 0a 0e	 lea	 eax, DWORD PTR [edx+ecx+14]
  00ca1	50		 push	 eax
  00ca2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow2
  00ca8	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR _ButtonStepX
  00cae	51		 push	 ecx
  00caf	68 00 00 00 40	 push	 1073741824		; 40000000H
  00cb4	8d 95 d4 fb ff
	ff		 lea	 edx, DWORD PTR _Wstr$[ebp]
  00cba	52		 push	 edx
  00cbb	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  00cc0	6a 00		 push	 0
  00cc2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  00cc8	3b f4		 cmp	 esi, esp
  00cca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ccf	a3 00 00 00 00	 mov	 DWORD PTR _ImportSymbolsButton2, eax
$LN7@CreateWind:

; 2088 :                                         RectListWindow2.left+ButtonStepX*1,RectListWindow2.bottom+ButtonStepY+14,
; 2089 :                                         ButtonSizeX,ButtonSizeY,
; 2090 :                                         LIBMANWindow,(HMENU)ID_IMPORT_SYMBOLS2,hInstance,NULL);
; 2091 :   }
; 2092 :   ShowWindow(ImportSymbolsButton2,SW_SHOW);

  00cd4	8b f4		 mov	 esi, esp
  00cd6	6a 05		 push	 5
  00cd8	a1 00 00 00 00	 mov	 eax, DWORD PTR _ImportSymbolsButton2
  00cdd	50		 push	 eax
  00cde	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  00ce4	3b f4		 cmp	 esi, esp
  00ce6	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2093 :   if (LibraryMode==0) {

  00ceb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  00cf2	0f 85 90 00 00
	00		 jne	 $LN8@CreateWind

; 2094 :     Utf8ToUnicode(SC(36,"Export symbols"),Wstr,200);

  00cf8	68 c8 00 00 00	 push	 200			; 000000c8H
  00cfd	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  00d03	50		 push	 eax
  00d04	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BJGEJDBF@Export?5symbols?$AA@
  00d09	6a 24		 push	 36			; 00000024H
  00d0b	e8 00 00 00 00	 call	 _StringConvert
  00d10	83 c4 08	 add	 esp, 8
  00d13	50		 push	 eax
  00d14	e8 00 00 00 00	 call	 _Utf8ToUnicode
  00d19	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2095 :     ExportSymbolsButton2 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  00d1c	8b f4		 mov	 esi, esp
  00d1e	6a 00		 push	 0
  00d20	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00d23	50		 push	 eax
  00d24	68 43 08 00 00	 push	 2115			; 00000843H
  00d29	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00d2f	51		 push	 ecx
  00d30	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  00d36	52		 push	 edx
  00d37	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  00d3c	50		 push	 eax
  00d3d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepY
  00d43	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow2+12
  00d49	8d 44 0a 0e	 lea	 eax, DWORD PTR [edx+ecx+14]
  00d4d	50		 push	 eax
  00d4e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepX
  00d54	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow2
  00d5a	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  00d5d	50		 push	 eax
  00d5e	68 00 00 00 40	 push	 1073741824		; 40000000H
  00d63	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR _Wstr$[ebp]
  00d69	51		 push	 ecx
  00d6a	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  00d6f	6a 00		 push	 0
  00d71	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  00d77	3b f4		 cmp	 esi, esp
  00d79	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d7e	a3 00 00 00 00	 mov	 DWORD PTR _ExportSymbolsButton2, eax

; 2096 :                                         RectListWindow2.left+ButtonStepX*2,RectListWindow2.bottom+ButtonStepY+14,
; 2097 :                                         ButtonSizeX,ButtonSizeY,
; 2098 :                                         LIBMANWindow,(HMENU)ID_EXPORT_SYMBOLS2,hInstance,NULL);
; 2099 :   } else {

  00d83	e9 8b 00 00 00	 jmp	 $LN9@CreateWind
$LN8@CreateWind:

; 2100 :     Utf8ToUnicode(SC(53,"Export geometries"),Wstr,200);

  00d88	68 c8 00 00 00	 push	 200			; 000000c8H
  00d8d	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  00d93	50		 push	 eax
  00d94	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KEIAJMGA@Export?5geometries?$AA@
  00d99	6a 35		 push	 53			; 00000035H
  00d9b	e8 00 00 00 00	 call	 _StringConvert
  00da0	83 c4 08	 add	 esp, 8
  00da3	50		 push	 eax
  00da4	e8 00 00 00 00	 call	 _Utf8ToUnicode
  00da9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2101 :     ExportSymbolsButton2 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  00dac	8b f4		 mov	 esi, esp
  00dae	6a 00		 push	 0
  00db0	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00db3	50		 push	 eax
  00db4	68 43 08 00 00	 push	 2115			; 00000843H
  00db9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00dbf	51		 push	 ecx
  00dc0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  00dc6	52		 push	 edx
  00dc7	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  00dcc	50		 push	 eax
  00dcd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepY
  00dd3	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow2+12
  00dd9	8d 44 0a 0e	 lea	 eax, DWORD PTR [edx+ecx+14]
  00ddd	50		 push	 eax
  00dde	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepX
  00de4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow2
  00dea	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  00ded	50		 push	 eax
  00dee	68 00 00 00 40	 push	 1073741824		; 40000000H
  00df3	8d 8d d4 fb ff
	ff		 lea	 ecx, DWORD PTR _Wstr$[ebp]
  00df9	51		 push	 ecx
  00dfa	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  00dff	6a 00		 push	 0
  00e01	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  00e07	3b f4		 cmp	 esi, esp
  00e09	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e0e	a3 00 00 00 00	 mov	 DWORD PTR _ExportSymbolsButton2, eax
$LN9@CreateWind:

; 2102 :                                         RectListWindow2.left+ButtonStepX*2,RectListWindow2.bottom+ButtonStepY+14,
; 2103 :                                         ButtonSizeX,ButtonSizeY,
; 2104 :                                         LIBMANWindow,(HMENU)ID_EXPORT_SYMBOLS2,hInstance,NULL);
; 2105 :   }
; 2106 :   ShowWindow(ExportSymbolsButton2,SW_SHOW);

  00e13	8b f4		 mov	 esi, esp
  00e15	6a 05		 push	 5
  00e17	a1 00 00 00 00	 mov	 eax, DWORD PTR _ExportSymbolsButton2
  00e1c	50		 push	 eax
  00e1d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  00e23	3b f4		 cmp	 esi, esp
  00e25	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2107 :   Utf8ToUnicode(SC(37,"Deselect all"),Wstr,200);

  00e2a	68 c8 00 00 00	 push	 200			; 000000c8H
  00e2f	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  00e35	50		 push	 eax
  00e36	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KPCPMOND@Deselect?5all?$AA@
  00e3b	6a 25		 push	 37			; 00000025H
  00e3d	e8 00 00 00 00	 call	 _StringConvert
  00e42	83 c4 08	 add	 esp, 8
  00e45	50		 push	 eax
  00e46	e8 00 00 00 00	 call	 _Utf8ToUnicode
  00e4b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2108 :   DeselectAllButton2 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  00e4e	8b f4		 mov	 esi, esp
  00e50	6a 00		 push	 0
  00e52	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00e55	50		 push	 eax
  00e56	68 3e 08 00 00	 push	 2110			; 0000083eH
  00e5b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00e61	51		 push	 ecx
  00e62	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  00e68	52		 push	 edx
  00e69	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  00e6e	50		 push	 eax
  00e6f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepY
  00e75	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow2+12
  00e7b	8d 44 4a 0e	 lea	 eax, DWORD PTR [edx+ecx*2+14]
  00e7f	50		 push	 eax
  00e80	6b 0d 00 00 00
	00 00		 imul	 ecx, DWORD PTR _ButtonStepX, 0
  00e87	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR _RectListWindow2
  00e8d	51		 push	 ecx
  00e8e	68 00 00 00 40	 push	 1073741824		; 40000000H
  00e93	8d 95 d4 fb ff
	ff		 lea	 edx, DWORD PTR _Wstr$[ebp]
  00e99	52		 push	 edx
  00e9a	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  00e9f	6a 00		 push	 0
  00ea1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  00ea7	3b f4		 cmp	 esi, esp
  00ea9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00eae	a3 00 00 00 00	 mov	 DWORD PTR _DeselectAllButton2, eax

; 2109 :                                     RectListWindow2.left+ButtonStepX*0,RectListWindow2.bottom+ButtonStepY*2+14,
; 2110 :                                     ButtonSizeX,ButtonSizeY,
; 2111 :                                     LIBMANWindow,(HMENU)ID_DESELECT_ALL2,hInstance,NULL);
; 2112 :   ShowWindow(DeselectAllButton2,SW_SHOW);

  00eb3	8b f4		 mov	 esi, esp
  00eb5	6a 05		 push	 5
  00eb7	a1 00 00 00 00	 mov	 eax, DWORD PTR _DeselectAllButton2
  00ebc	50		 push	 eax
  00ebd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  00ec3	3b f4		 cmp	 esi, esp
  00ec5	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2113 :   Utf8ToUnicode(SC(58,"Select all"),Wstr,200);

  00eca	68 c8 00 00 00	 push	 200			; 000000c8H
  00ecf	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  00ed5	50		 push	 eax
  00ed6	68 00 00 00 00	 push	 OFFSET ??_C@_0L@IAIFFGEP@Select?5all?$AA@
  00edb	6a 3a		 push	 58			; 0000003aH
  00edd	e8 00 00 00 00	 call	 _StringConvert
  00ee2	83 c4 08	 add	 esp, 8
  00ee5	50		 push	 eax
  00ee6	e8 00 00 00 00	 call	 _Utf8ToUnicode
  00eeb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2114 :   SelectAllButton2 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  00eee	8b f4		 mov	 esi, esp
  00ef0	6a 00		 push	 0
  00ef2	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00ef5	50		 push	 eax
  00ef6	68 55 08 00 00	 push	 2133			; 00000855H
  00efb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00f01	51		 push	 ecx
  00f02	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  00f08	52		 push	 edx
  00f09	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  00f0e	50		 push	 eax
  00f0f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepY
  00f15	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow2+12
  00f1b	8d 44 4a 0e	 lea	 eax, DWORD PTR [edx+ecx*2+14]
  00f1f	50		 push	 eax
  00f20	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow2
  00f26	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR _ButtonStepX
  00f2c	51		 push	 ecx
  00f2d	68 00 00 00 40	 push	 1073741824		; 40000000H
  00f32	8d 95 d4 fb ff
	ff		 lea	 edx, DWORD PTR _Wstr$[ebp]
  00f38	52		 push	 edx
  00f39	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  00f3e	6a 00		 push	 0
  00f40	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  00f46	3b f4		 cmp	 esi, esp
  00f48	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f4d	a3 00 00 00 00	 mov	 DWORD PTR _SelectAllButton2, eax

; 2115 :                                     RectListWindow2.left+ButtonStepX*1,RectListWindow2.bottom+ButtonStepY*2+14,
; 2116 :                                     ButtonSizeX,ButtonSizeY,
; 2117 :                                     LIBMANWindow,(HMENU)ID_SELECT_ALL2,hInstance,NULL);
; 2118 :   ShowWindow(SelectAllButton2,SW_SHOW);

  00f52	8b f4		 mov	 esi, esp
  00f54	6a 05		 push	 5
  00f56	a1 00 00 00 00	 mov	 eax, DWORD PTR _SelectAllButton2
  00f5b	50		 push	 eax
  00f5c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  00f62	3b f4		 cmp	 esi, esp
  00f64	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2119 :   if (LibraryMode==0) {

  00f69	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  00f70	0f 85 8e 00 00
	00		 jne	 $LN10@CreateWind

; 2120 :     Utf8ToUnicode(SC(38,"Delete symbols"),Wstr,200);

  00f76	68 c8 00 00 00	 push	 200			; 000000c8H
  00f7b	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  00f81	50		 push	 eax
  00f82	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JFIENDBP@Delete?5symbols?$AA@
  00f87	6a 26		 push	 38			; 00000026H
  00f89	e8 00 00 00 00	 call	 _StringConvert
  00f8e	83 c4 08	 add	 esp, 8
  00f91	50		 push	 eax
  00f92	e8 00 00 00 00	 call	 _Utf8ToUnicode
  00f97	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2121 :     DeleteSymbolsButton2 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  00f9a	8b f4		 mov	 esi, esp
  00f9c	6a 00		 push	 0
  00f9e	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00fa1	50		 push	 eax
  00fa2	68 3c 08 00 00	 push	 2108			; 0000083cH
  00fa7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00fad	51		 push	 ecx
  00fae	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  00fb4	52		 push	 edx
  00fb5	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  00fba	50		 push	 eax
  00fbb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepY
  00fc1	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow2+12
  00fc7	8d 44 0a 0e	 lea	 eax, DWORD PTR [edx+ecx+14]
  00fcb	50		 push	 eax
  00fcc	6b 0d 00 00 00
	00 00		 imul	 ecx, DWORD PTR _ButtonStepX, 0
  00fd3	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR _RectListWindow2
  00fd9	51		 push	 ecx
  00fda	68 00 00 00 40	 push	 1073741824		; 40000000H
  00fdf	8d 95 d4 fb ff
	ff		 lea	 edx, DWORD PTR _Wstr$[ebp]
  00fe5	52		 push	 edx
  00fe6	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  00feb	6a 00		 push	 0
  00fed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  00ff3	3b f4		 cmp	 esi, esp
  00ff5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ffa	a3 00 00 00 00	 mov	 DWORD PTR _DeleteSymbolsButton2, eax

; 2122 :                                         RectListWindow2.left+ButtonStepX*0,RectListWindow2.bottom+ButtonStepY*1+14,
; 2123 :                                         ButtonSizeX,ButtonSizeY,
; 2124 :                                         LIBMANWindow,(HMENU)ID_DELETE_SYMBOLS2,hInstance,NULL);
; 2125 :   } else {

  00fff	e9 89 00 00 00	 jmp	 $LN11@CreateWind
$LN10@CreateWind:

; 2126 :     Utf8ToUnicode(SC(57,"Delete geometries"),Wstr,200);

  01004	68 c8 00 00 00	 push	 200			; 000000c8H
  01009	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  0100f	50		 push	 eax
  01010	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PJGELEEH@Delete?5geometries?$AA@
  01015	6a 39		 push	 57			; 00000039H
  01017	e8 00 00 00 00	 call	 _StringConvert
  0101c	83 c4 08	 add	 esp, 8
  0101f	50		 push	 eax
  01020	e8 00 00 00 00	 call	 _Utf8ToUnicode
  01025	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2127 :     DeleteSymbolsButton2 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  01028	8b f4		 mov	 esi, esp
  0102a	6a 00		 push	 0
  0102c	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  0102f	50		 push	 eax
  01030	68 3c 08 00 00	 push	 2108			; 0000083cH
  01035	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  0103b	51		 push	 ecx
  0103c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  01042	52		 push	 edx
  01043	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  01048	50		 push	 eax
  01049	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonStepY
  0104f	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow2+12
  01055	8d 44 0a 0e	 lea	 eax, DWORD PTR [edx+ecx+14]
  01059	50		 push	 eax
  0105a	6b 0d 00 00 00
	00 00		 imul	 ecx, DWORD PTR _ButtonStepX, 0
  01061	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR _RectListWindow2
  01067	51		 push	 ecx
  01068	68 00 00 00 40	 push	 1073741824		; 40000000H
  0106d	8d 95 d4 fb ff
	ff		 lea	 edx, DWORD PTR _Wstr$[ebp]
  01073	52		 push	 edx
  01074	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  01079	6a 00		 push	 0
  0107b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  01081	3b f4		 cmp	 esi, esp
  01083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01088	a3 00 00 00 00	 mov	 DWORD PTR _DeleteSymbolsButton2, eax
$LN11@CreateWind:

; 2128 :                                         RectListWindow2.left+ButtonStepX*0,RectListWindow2.bottom+ButtonStepY*1+14,
; 2129 :                                         ButtonSizeX,ButtonSizeY,
; 2130 :                                         LIBMANWindow,(HMENU)ID_DELETE_SYMBOLS2,hInstance,NULL);
; 2131 :   }
; 2132 :   ShowWindow(DeleteSymbolsButton2,SW_SHOW);

  0108d	8b f4		 mov	 esi, esp
  0108f	6a 05		 push	 5
  01091	a1 00 00 00 00	 mov	 eax, DWORD PTR _DeleteSymbolsButton2
  01096	50		 push	 eax
  01097	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  0109d	3b f4		 cmp	 esi, esp
  0109f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2133 : 
; 2134 :   Utf8ToUnicode(SC(41,"◄ Copy"),Wstr,200);

  010a4	68 c8 00 00 00	 push	 200			; 000000c8H
  010a9	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  010af	50		 push	 eax
  010b0	68 00 00 00 00	 push	 OFFSET ??_C@_08IFJMFLCA@?b?$JH?$IE?5Copy?$AA@
  010b5	6a 29		 push	 41			; 00000029H
  010b7	e8 00 00 00 00	 call	 _StringConvert
  010bc	83 c4 08	 add	 esp, 8
  010bf	50		 push	 eax
  010c0	e8 00 00 00 00	 call	 _Utf8ToUnicode
  010c5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2135 : //  Utf8ToUnicode(SC(41,"<- Copy"),Wstr,200);
; 2136 :   CopyButton2 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  010c8	8b f4		 mov	 esi, esp
  010ca	6a 00		 push	 0
  010cc	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  010cf	50		 push	 eax
  010d0	68 38 08 00 00	 push	 2104			; 00000838H
  010d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  010db	51		 push	 ecx
  010dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  010e2	52		 push	 edx
  010e3	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  010e8	50		 push	 eax
  010e9	68 dc 00 00 00	 push	 220			; 000000dcH
  010ee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow2
  010f4	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR _ButtonSizeX
  010fa	83 e9 0f	 sub	 ecx, 15			; 0000000fH
  010fd	51		 push	 ecx
  010fe	68 00 00 00 40	 push	 1073741824		; 40000000H
  01103	8d 95 d4 fb ff
	ff		 lea	 edx, DWORD PTR _Wstr$[ebp]
  01109	52		 push	 edx
  0110a	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  0110f	6a 00		 push	 0
  01111	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  01117	3b f4		 cmp	 esi, esp
  01119	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0111e	a3 00 00 00 00	 mov	 DWORD PTR _CopyButton2, eax

; 2137 :                              RectListWindow2.left-ButtonSizeX-15,220,ButtonSizeX,ButtonSizeY,
; 2138 :                              LIBMANWindow,(HMENU)ID_COPY_SYMBOLS2,hInstance,NULL);
; 2139 :   ShowWindow(CopyButton2,SW_SHOW);

  01123	8b f4		 mov	 esi, esp
  01125	6a 05		 push	 5
  01127	a1 00 00 00 00	 mov	 eax, DWORD PTR _CopyButton2
  0112c	50		 push	 eax
  0112d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  01133	3b f4		 cmp	 esi, esp
  01135	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2140 :   Utf8ToUnicode(SC(42,"◄ Move"),Wstr,200);

  0113a	68 c8 00 00 00	 push	 200			; 000000c8H
  0113f	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _Wstr$[ebp]
  01145	50		 push	 eax
  01146	68 00 00 00 00	 push	 OFFSET ??_C@_08NIFGMEKO@?b?$JH?$IE?5Move?$AA@
  0114b	6a 2a		 push	 42			; 0000002aH
  0114d	e8 00 00 00 00	 call	 _StringConvert
  01152	83 c4 08	 add	 esp, 8
  01155	50		 push	 eax
  01156	e8 00 00 00 00	 call	 _Utf8ToUnicode
  0115b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2141 : //  Utf8ToUnicode(SC(42,"<- Move"),Wstr,200);
; 2142 :   MoveButton2 = CreateWindowW(L"BUTTON",Wstr,WS_CHILD,

  0115e	8b f4		 mov	 esi, esp
  01160	6a 00		 push	 0
  01162	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  01165	50		 push	 eax
  01166	68 4b 08 00 00	 push	 2123			; 0000084bH
  0116b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  01171	51		 push	 ecx
  01172	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ButtonSizeY
  01178	52		 push	 edx
  01179	a1 00 00 00 00	 mov	 eax, DWORD PTR _ButtonSizeX
  0117e	50		 push	 eax
  0117f	68 04 01 00 00	 push	 260			; 00000104H
  01184	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow2
  0118a	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR _ButtonSizeX
  01190	83 e9 0f	 sub	 ecx, 15			; 0000000fH
  01193	51		 push	 ecx
  01194	68 00 00 00 40	 push	 1073741824		; 40000000H
  01199	8d 95 d4 fb ff
	ff		 lea	 edx, DWORD PTR _Wstr$[ebp]
  0119f	52		 push	 edx
  011a0	68 00 00 00 00	 push	 OFFSET ??_C@_1O@MOBNNEMB@?$AAB?$AAU?$AAT?$AAT?$AAO?$AAN?$AA?$AA@
  011a5	6a 00		 push	 0
  011a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  011ad	3b f4		 cmp	 esi, esp
  011af	e8 00 00 00 00	 call	 __RTC_CheckEsp
  011b4	a3 00 00 00 00	 mov	 DWORD PTR _MoveButton2, eax

; 2143 :                              RectListWindow2.left-ButtonSizeX-15,260,ButtonSizeX,ButtonSizeY,
; 2144 :                              LIBMANWindow,(HMENU)ID_MOVE_SYMBOLS2,hInstance,NULL);
; 2145 :   ShowWindow(MoveButton2,SW_SHOW);

  011b9	8b f4		 mov	 esi, esp
  011bb	6a 05		 push	 5
  011bd	a1 00 00 00 00	 mov	 eax, DWORD PTR _MoveButton2
  011c2	50		 push	 eax
  011c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  011c9	3b f4		 cmp	 esi, esp
  011cb	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2146 : 
; 2147 :   res=SendMessage(ListWindow1,WM_SETFONT,(WPARAM)NewFont,1);

  011d0	8b f4		 mov	 esi, esp
  011d2	6a 01		 push	 1
  011d4	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  011d9	50		 push	 eax
  011da	6a 30		 push	 48			; 00000030H
  011dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ListWindow1
  011e2	51		 push	 ecx
  011e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  011e9	3b f4		 cmp	 esi, esp
  011eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  011f0	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2148 :   res=SendMessage(ListWindow2,WM_SETFONT,(WPARAM)NewFont,1);

  011f3	8b f4		 mov	 esi, esp
  011f5	6a 01		 push	 1
  011f7	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  011fc	50		 push	 eax
  011fd	6a 30		 push	 48			; 00000030H
  011ff	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ListWindow2
  01205	51		 push	 ecx
  01206	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0120c	3b f4		 cmp	 esi, esp
  0120e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01213	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2149 : 
; 2150 : 
; 2151 :   res=SendMessage(CreateNewLibButton1 ,WM_SETFONT,(WPARAM)NewFont,1);

  01216	8b f4		 mov	 esi, esp
  01218	6a 01		 push	 1
  0121a	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  0121f	50		 push	 eax
  01220	6a 30		 push	 48			; 00000030H
  01222	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _CreateNewLibButton1
  01228	51		 push	 ecx
  01229	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0122f	3b f4		 cmp	 esi, esp
  01231	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01236	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2152 :   res=SendMessage(OpenLibButton1      ,WM_SETFONT,(WPARAM)NewFont,1);

  01239	8b f4		 mov	 esi, esp
  0123b	6a 01		 push	 1
  0123d	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  01242	50		 push	 eax
  01243	6a 30		 push	 48			; 00000030H
  01245	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _OpenLibButton1
  0124b	51		 push	 ecx
  0124c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  01252	3b f4		 cmp	 esi, esp
  01254	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01259	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2153 :   res=SendMessage(SaveLibButton1      ,WM_SETFONT,(WPARAM)NewFont,1);

  0125c	8b f4		 mov	 esi, esp
  0125e	6a 01		 push	 1
  01260	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  01265	50		 push	 eax
  01266	6a 30		 push	 48			; 00000030H
  01268	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SaveLibButton1
  0126e	51		 push	 ecx
  0126f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  01275	3b f4		 cmp	 esi, esp
  01277	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0127c	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2154 :   res=SendMessage(CloseLibButton1     ,WM_SETFONT,(WPARAM)NewFont,1);

  0127f	8b f4		 mov	 esi, esp
  01281	6a 01		 push	 1
  01283	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  01288	50		 push	 eax
  01289	6a 30		 push	 48			; 00000030H
  0128b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _CloseLibButton1
  01291	51		 push	 ecx
  01292	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  01298	3b f4		 cmp	 esi, esp
  0129a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0129f	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2155 :   res=SendMessage(ImportSymbolsButton1,WM_SETFONT,(WPARAM)NewFont,1);

  012a2	8b f4		 mov	 esi, esp
  012a4	6a 01		 push	 1
  012a6	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  012ab	50		 push	 eax
  012ac	6a 30		 push	 48			; 00000030H
  012ae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ImportSymbolsButton1
  012b4	51		 push	 ecx
  012b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  012bb	3b f4		 cmp	 esi, esp
  012bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  012c2	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2156 :   res=SendMessage(ExportSymbolsButton1,WM_SETFONT,(WPARAM)NewFont,1);

  012c5	8b f4		 mov	 esi, esp
  012c7	6a 01		 push	 1
  012c9	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  012ce	50		 push	 eax
  012cf	6a 30		 push	 48			; 00000030H
  012d1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ExportSymbolsButton1
  012d7	51		 push	 ecx
  012d8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  012de	3b f4		 cmp	 esi, esp
  012e0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  012e5	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2157 :   res=SendMessage(DeleteSymbolsButton1,WM_SETFONT,(WPARAM)NewFont,1);

  012e8	8b f4		 mov	 esi, esp
  012ea	6a 01		 push	 1
  012ec	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  012f1	50		 push	 eax
  012f2	6a 30		 push	 48			; 00000030H
  012f4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _DeleteSymbolsButton1
  012fa	51		 push	 ecx
  012fb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  01301	3b f4		 cmp	 esi, esp
  01303	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01308	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2158 :   res=SendMessage(DeselectAllButton1  ,WM_SETFONT,(WPARAM)NewFont,1);

  0130b	8b f4		 mov	 esi, esp
  0130d	6a 01		 push	 1
  0130f	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  01314	50		 push	 eax
  01315	6a 30		 push	 48			; 00000030H
  01317	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _DeselectAllButton1
  0131d	51		 push	 ecx
  0131e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  01324	3b f4		 cmp	 esi, esp
  01326	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0132b	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2159 :   res=SendMessage(SelectAllButton1    ,WM_SETFONT,(WPARAM)NewFont,1);

  0132e	8b f4		 mov	 esi, esp
  01330	6a 01		 push	 1
  01332	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  01337	50		 push	 eax
  01338	6a 30		 push	 48			; 00000030H
  0133a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SelectAllButton1
  01340	51		 push	 ecx
  01341	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  01347	3b f4		 cmp	 esi, esp
  01349	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0134e	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2160 :   res=SendMessage(CopyButton1         ,WM_SETFONT,(WPARAM)NewFont,1);

  01351	8b f4		 mov	 esi, esp
  01353	6a 01		 push	 1
  01355	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  0135a	50		 push	 eax
  0135b	6a 30		 push	 48			; 00000030H
  0135d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _CopyButton1
  01363	51		 push	 ecx
  01364	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0136a	3b f4		 cmp	 esi, esp
  0136c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01371	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2161 :   res=SendMessage(MoveButton1         ,WM_SETFONT,(WPARAM)NewFont,1);

  01374	8b f4		 mov	 esi, esp
  01376	6a 01		 push	 1
  01378	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  0137d	50		 push	 eax
  0137e	6a 30		 push	 48			; 00000030H
  01380	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _MoveButton1
  01386	51		 push	 ecx
  01387	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0138d	3b f4		 cmp	 esi, esp
  0138f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01394	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2162 : 
; 2163 :   res=SendMessage(CreateNewLibButton2 ,WM_SETFONT,(WPARAM)NewFont,1);

  01397	8b f4		 mov	 esi, esp
  01399	6a 01		 push	 1
  0139b	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  013a0	50		 push	 eax
  013a1	6a 30		 push	 48			; 00000030H
  013a3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _CreateNewLibButton2
  013a9	51		 push	 ecx
  013aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  013b0	3b f4		 cmp	 esi, esp
  013b2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  013b7	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2164 :   res=SendMessage(OpenLibButton2      ,WM_SETFONT,(WPARAM)NewFont,1);

  013ba	8b f4		 mov	 esi, esp
  013bc	6a 01		 push	 1
  013be	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  013c3	50		 push	 eax
  013c4	6a 30		 push	 48			; 00000030H
  013c6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _OpenLibButton2
  013cc	51		 push	 ecx
  013cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  013d3	3b f4		 cmp	 esi, esp
  013d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  013da	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2165 :   res=SendMessage(SaveLibButton2      ,WM_SETFONT,(WPARAM)NewFont,1);

  013dd	8b f4		 mov	 esi, esp
  013df	6a 01		 push	 1
  013e1	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  013e6	50		 push	 eax
  013e7	6a 30		 push	 48			; 00000030H
  013e9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SaveLibButton2
  013ef	51		 push	 ecx
  013f0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  013f6	3b f4		 cmp	 esi, esp
  013f8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  013fd	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2166 :   res=SendMessage(CloseLibButton2     ,WM_SETFONT,(WPARAM)NewFont,1);

  01400	8b f4		 mov	 esi, esp
  01402	6a 01		 push	 1
  01404	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  01409	50		 push	 eax
  0140a	6a 30		 push	 48			; 00000030H
  0140c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _CloseLibButton2
  01412	51		 push	 ecx
  01413	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  01419	3b f4		 cmp	 esi, esp
  0141b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01420	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2167 :   res=SendMessage(ImportSymbolsButton2,WM_SETFONT,(WPARAM)NewFont,1);

  01423	8b f4		 mov	 esi, esp
  01425	6a 01		 push	 1
  01427	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  0142c	50		 push	 eax
  0142d	6a 30		 push	 48			; 00000030H
  0142f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ImportSymbolsButton2
  01435	51		 push	 ecx
  01436	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0143c	3b f4		 cmp	 esi, esp
  0143e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01443	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2168 :   res=SendMessage(ExportSymbolsButton2,WM_SETFONT,(WPARAM)NewFont,1);

  01446	8b f4		 mov	 esi, esp
  01448	6a 01		 push	 1
  0144a	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  0144f	50		 push	 eax
  01450	6a 30		 push	 48			; 00000030H
  01452	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ExportSymbolsButton2
  01458	51		 push	 ecx
  01459	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0145f	3b f4		 cmp	 esi, esp
  01461	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01466	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2169 :   res=SendMessage(DeleteSymbolsButton2,WM_SETFONT,(WPARAM)NewFont,1);

  01469	8b f4		 mov	 esi, esp
  0146b	6a 01		 push	 1
  0146d	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  01472	50		 push	 eax
  01473	6a 30		 push	 48			; 00000030H
  01475	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _DeleteSymbolsButton2
  0147b	51		 push	 ecx
  0147c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  01482	3b f4		 cmp	 esi, esp
  01484	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01489	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2170 :   res=SendMessage(DeselectAllButton2  ,WM_SETFONT,(WPARAM)NewFont,1);

  0148c	8b f4		 mov	 esi, esp
  0148e	6a 01		 push	 1
  01490	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  01495	50		 push	 eax
  01496	6a 30		 push	 48			; 00000030H
  01498	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _DeselectAllButton2
  0149e	51		 push	 ecx
  0149f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  014a5	3b f4		 cmp	 esi, esp
  014a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  014ac	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2171 :   res=SendMessage(SelectAllButton2    ,WM_SETFONT,(WPARAM)NewFont,1);

  014af	8b f4		 mov	 esi, esp
  014b1	6a 01		 push	 1
  014b3	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  014b8	50		 push	 eax
  014b9	6a 30		 push	 48			; 00000030H
  014bb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SelectAllButton2
  014c1	51		 push	 ecx
  014c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  014c8	3b f4		 cmp	 esi, esp
  014ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  014cf	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2172 :   res=SendMessage(CopyButton2         ,WM_SETFONT,(WPARAM)NewFont,1);

  014d2	8b f4		 mov	 esi, esp
  014d4	6a 01		 push	 1
  014d6	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  014db	50		 push	 eax
  014dc	6a 30		 push	 48			; 00000030H
  014de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _CopyButton2
  014e4	51		 push	 ecx
  014e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  014eb	3b f4		 cmp	 esi, esp
  014ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  014f2	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2173 :   res=SendMessage(MoveButton2         ,WM_SETFONT,(WPARAM)NewFont,1);

  014f5	8b f4		 mov	 esi, esp
  014f7	6a 01		 push	 1
  014f9	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  014fe	50		 push	 eax
  014ff	6a 30		 push	 48			; 00000030H
  01501	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _MoveButton2
  01507	51		 push	 ecx
  01508	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0150e	3b f4		 cmp	 esi, esp
  01510	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01515	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 2174 : 
; 2175 : }

  01518	52		 push	 edx
  01519	8b cd		 mov	 ecx, ebp
  0151b	50		 push	 eax
  0151c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN16@CreateWind
  01522	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  01527	58		 pop	 eax
  01528	5a		 pop	 edx
  01529	5f		 pop	 edi
  0152a	5e		 pop	 esi
  0152b	5b		 pop	 ebx
  0152c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0152f	33 cd		 xor	 ecx, ebp
  01531	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01536	81 c4 70 06 00
	00		 add	 esp, 1648		; 00000670H
  0153c	3b ec		 cmp	 ebp, esp
  0153e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01543	8b e5		 mov	 esp, ebp
  01545	5d		 pop	 ebp
  01546	c3		 ret	 0
  01547	90		 npad	 1
$LN16@CreateWind:
  01548	02 00 00 00	 DD	 2
  0154c	00 00 00 00	 DD	 $LN15@CreateWind
$LN15@CreateWind:
  01550	dc ff ff ff	 DD	 -36			; ffffffdcH
  01554	10 00 00 00	 DD	 16			; 00000010H
  01558	00 00 00 00	 DD	 $LN13@CreateWind
  0155c	d4 fb ff ff	 DD	 -1068			; fffffbd4H
  01560	00 04 00 00	 DD	 1024			; 00000400H
  01564	00 00 00 00	 DD	 $LN14@CreateWind
$LN14@CreateWind:
  01568	57		 DB	 87			; 00000057H
  01569	73		 DB	 115			; 00000073H
  0156a	74		 DB	 116			; 00000074H
  0156b	72		 DB	 114			; 00000072H
  0156c	00		 DB	 0
$LN13@CreateWind:
  0156d	4e		 DB	 78			; 0000004eH
  0156e	65		 DB	 101			; 00000065H
  0156f	77		 DB	 119			; 00000077H
  01570	52		 DB	 82			; 00000052H
  01571	65		 DB	 101			; 00000065H
  01572	63		 DB	 99			; 00000063H
  01573	74		 DB	 116			; 00000074H
  01574	00		 DB	 0
_CreateWindowObjects ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _PopupMenu
_TEXT	SEGMENT
_PopUpMenu$ = -8					; size = 4
_ListNr$ = 8						; size = 4
_mode$ = 12						; size = 4
_PopupMenu PROC						; COMDAT

; 1846 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1847 :   HMENU  PopUpMenu;
; 1848 : 
; 1849 :   if (ListNr==0) {

  0001e	83 7d 08 00	 cmp	 DWORD PTR _ListNr$[ebp], 0
  00022	75 2b		 jne	 SHORT $LN2@PopupMenu

; 1850 :     SymbolsSelected=SendMessage(ListWindow1,LB_GETSELITEMS,MAX_NR_LIB_SYMBOLS+1,

  00024	8b f4		 mov	 esi, esp
  00026	68 00 00 00 00	 push	 OFFSET _LibIndex
  0002b	68 01 10 00 00	 push	 4097			; 00001001H
  00030	68 91 01 00 00	 push	 401			; 00000191H
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow1
  0003a	50		 push	 eax
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00041	3b f4		 cmp	 esi, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	a3 00 00 00 00	 mov	 DWORD PTR _SymbolsSelected, eax

; 1851 :                                 (LPARAM)(LPINT)&LibIndex);
; 1852 :   } else {

  0004d	eb 29		 jmp	 SHORT $LN3@PopupMenu
$LN2@PopupMenu:

; 1853 :     SymbolsSelected=SendMessage(ListWindow2,LB_GETSELITEMS,MAX_NR_LIB_SYMBOLS+1,

  0004f	8b f4		 mov	 esi, esp
  00051	68 00 00 00 00	 push	 OFFSET _LibIndex
  00056	68 01 10 00 00	 push	 4097			; 00001001H
  0005b	68 91 01 00 00	 push	 401			; 00000191H
  00060	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow2
  00065	50		 push	 eax
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0006c	3b f4		 cmp	 esi, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	a3 00 00 00 00	 mov	 DWORD PTR _SymbolsSelected, eax
$LN3@PopupMenu:

; 1854 :                                 (LPARAM)(LPINT)&LibIndex);
; 1855 :   }
; 1856 :   if (SymbolsSelected==1) {

  00078	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR _SymbolsSelected, 1
  0007f	0f 85 9a 01 00
	00		 jne	 $LN1@PopupMenu

; 1857 :     if (mode==1) {

  00085	83 7d 0c 01	 cmp	 DWORD PTR _mode$[ebp], 1
  00089	75 4f		 jne	 SHORT $LN5@PopupMenu

; 1858 :       if (ListNr==0) {

  0008b	83 7d 08 00	 cmp	 DWORD PTR _ListNr$[ebp], 0
  0008f	75 23		 jne	 SHORT $LN6@PopupMenu

; 1859 :         PostMessage(LIBMANWindow,WM_COMMAND,(WPARAM)ID_EDIT_SYMBOL1,(LPARAM)0);

  00091	8b f4		 mov	 esi, esp
  00093	6a 00		 push	 0
  00095	68 3f 08 00 00	 push	 2111			; 0000083fH
  0009a	68 11 01 00 00	 push	 273			; 00000111H
  0009f	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  000a4	50		 push	 eax
  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16
  000ab	3b f4		 cmp	 esi, esp
  000ad	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1860 :       } else {

  000b2	eb 21		 jmp	 SHORT $LN7@PopupMenu
$LN6@PopupMenu:

; 1861 :         PostMessage(LIBMANWindow,WM_COMMAND,(WPARAM)ID_EDIT_SYMBOL2,(LPARAM)0);

  000b4	8b f4		 mov	 esi, esp
  000b6	6a 00		 push	 0
  000b8	68 40 08 00 00	 push	 2112			; 00000840H
  000bd	68 11 01 00 00	 push	 273			; 00000111H
  000c2	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  000c7	50		 push	 eax
  000c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16
  000ce	3b f4		 cmp	 esi, esp
  000d0	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN7@PopupMenu:

; 1862 :       }
; 1863 :       return;

  000d5	e9 45 01 00 00	 jmp	 $LN1@PopupMenu
$LN5@PopupMenu:

; 1864 :     }
; 1865 :     PopUpMenu=CreatePopupMenu();

  000da	8b f4		 mov	 esi, esp
  000dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreatePopupMenu@0
  000e2	3b f4		 cmp	 esi, esp
  000e4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e9	89 45 f8	 mov	 DWORD PTR _PopUpMenu$[ebp], eax

; 1866 :     if (LibraryMode==0) {

  000ec	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  000f3	75 50		 jne	 SHORT $LN8@PopupMenu

; 1867 :       if (ListNr==0) {

  000f5	83 7d 08 00	 cmp	 DWORD PTR _ListNr$[ebp], 0
  000f9	75 25		 jne	 SHORT $LN10@PopupMenu

; 1868 :         AppendMenuUTF8(PopUpMenu,MF_ENABLED|MF_STRING,ID_EDIT_SYMBOL1,SC(29,"Edit symbol"));

  000fb	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DOMPHBIC@Edit?5symbol?$AA@
  00100	6a 1d		 push	 29			; 0000001dH
  00102	e8 00 00 00 00	 call	 _StringConvert
  00107	83 c4 08	 add	 esp, 8
  0010a	50		 push	 eax
  0010b	68 3f 08 00 00	 push	 2111			; 0000083fH
  00110	6a 00		 push	 0
  00112	8b 45 f8	 mov	 eax, DWORD PTR _PopUpMenu$[ebp]
  00115	50		 push	 eax
  00116	e8 00 00 00 00	 call	 _AppendMenuUTF8
  0011b	83 c4 10	 add	 esp, 16			; 00000010H

; 1869 :       } else {

  0011e	eb 23		 jmp	 SHORT $LN11@PopupMenu
$LN10@PopupMenu:

; 1870 :         AppendMenuUTF8(PopUpMenu,MF_ENABLED|MF_STRING,ID_EDIT_SYMBOL2,SC(29,"Edit symbol"));

  00120	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DOMPHBIC@Edit?5symbol?$AA@
  00125	6a 1d		 push	 29			; 0000001dH
  00127	e8 00 00 00 00	 call	 _StringConvert
  0012c	83 c4 08	 add	 esp, 8
  0012f	50		 push	 eax
  00130	68 40 08 00 00	 push	 2112			; 00000840H
  00135	6a 00		 push	 0
  00137	8b 45 f8	 mov	 eax, DWORD PTR _PopUpMenu$[ebp]
  0013a	50		 push	 eax
  0013b	e8 00 00 00 00	 call	 _AppendMenuUTF8
  00140	83 c4 10	 add	 esp, 16			; 00000010H
$LN11@PopupMenu:

; 1871 :       }
; 1872 :     } else {

  00143	eb 4e		 jmp	 SHORT $LN9@PopupMenu
$LN8@PopupMenu:

; 1873 :       if (ListNr==0) {

  00145	83 7d 08 00	 cmp	 DWORD PTR _ListNr$[ebp], 0
  00149	75 25		 jne	 SHORT $LN12@PopupMenu

; 1874 :         AppendMenuUTF8(PopUpMenu,MF_ENABLED|MF_STRING,ID_EDIT_SYMBOL1,SC(30,"Edit geometry"));

  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OENDAIBJ@Edit?5geometry?$AA@
  00150	6a 1e		 push	 30			; 0000001eH
  00152	e8 00 00 00 00	 call	 _StringConvert
  00157	83 c4 08	 add	 esp, 8
  0015a	50		 push	 eax
  0015b	68 3f 08 00 00	 push	 2111			; 0000083fH
  00160	6a 00		 push	 0
  00162	8b 45 f8	 mov	 eax, DWORD PTR _PopUpMenu$[ebp]
  00165	50		 push	 eax
  00166	e8 00 00 00 00	 call	 _AppendMenuUTF8
  0016b	83 c4 10	 add	 esp, 16			; 00000010H

; 1875 :       } else {

  0016e	eb 23		 jmp	 SHORT $LN9@PopupMenu
$LN12@PopupMenu:

; 1876 :         AppendMenuUTF8(PopUpMenu,MF_ENABLED|MF_STRING,ID_EDIT_SYMBOL2,SC(30,"Edit geometry"));

  00170	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OENDAIBJ@Edit?5geometry?$AA@
  00175	6a 1e		 push	 30			; 0000001eH
  00177	e8 00 00 00 00	 call	 _StringConvert
  0017c	83 c4 08	 add	 esp, 8
  0017f	50		 push	 eax
  00180	68 40 08 00 00	 push	 2112			; 00000840H
  00185	6a 00		 push	 0
  00187	8b 45 f8	 mov	 eax, DWORD PTR _PopUpMenu$[ebp]
  0018a	50		 push	 eax
  0018b	e8 00 00 00 00	 call	 _AppendMenuUTF8
  00190	83 c4 10	 add	 esp, 16			; 00000010H
$LN9@PopupMenu:

; 1877 :       }
; 1878 :     }
; 1879 :     AppendMenuUTF8(PopUpMenu,MF_ENABLED|MF_SEPARATOR,0,0);

  00193	6a 00		 push	 0
  00195	6a 00		 push	 0
  00197	68 00 08 00 00	 push	 2048			; 00000800H
  0019c	8b 45 f8	 mov	 eax, DWORD PTR _PopUpMenu$[ebp]
  0019f	50		 push	 eax
  001a0	e8 00 00 00 00	 call	 _AppendMenuUTF8
  001a5	83 c4 10	 add	 esp, 16			; 00000010H

; 1880 :     AppendMenuUTF8(PopUpMenu,MF_ENABLED|MF_STRING,ID_ESCAPE,SC(31,"Exit popup menu"));

  001a8	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JCADGPII@Exit?5popup?5menu?$AA@
  001ad	6a 1f		 push	 31			; 0000001fH
  001af	e8 00 00 00 00	 call	 _StringConvert
  001b4	83 c4 08	 add	 esp, 8
  001b7	50		 push	 eax
  001b8	68 41 08 00 00	 push	 2113			; 00000841H
  001bd	6a 00		 push	 0
  001bf	8b 45 f8	 mov	 eax, DWORD PTR _PopUpMenu$[ebp]
  001c2	50		 push	 eax
  001c3	e8 00 00 00 00	 call	 _AppendMenuUTF8
  001c8	83 c4 10	 add	 esp, 16			; 00000010H

; 1881 :     TrackPopupMenu(PopUpMenu,TPM_LEFTALIGN+TPM_RIGHTBUTTON,

  001cb	8b f4		 mov	 esi, esp
  001cd	6a 00		 push	 0
  001cf	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  001d4	50		 push	 eax
  001d5	6a 00		 push	 0
  001d7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _MousePosY
  001dd	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _RealWindow+4
  001e3	8d 44 0a 28	 lea	 eax, DWORD PTR [edx+ecx+40]
  001e7	50		 push	 eax
  001e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _MousePosX
  001ee	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _RealWindow
  001f4	8d 44 0a 05	 lea	 eax, DWORD PTR [edx+ecx+5]
  001f8	50		 push	 eax
  001f9	6a 02		 push	 2
  001fb	8b 4d f8	 mov	 ecx, DWORD PTR _PopUpMenu$[ebp]
  001fe	51		 push	 ecx
  001ff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TrackPopupMenu@28
  00205	3b f4		 cmp	 esi, esp
  00207	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1882 :                    RealWindow.left+MousePosX+5,RealWindow.top+MousePosY+40,0,LIBMANWindow,NULL);
; 1883 :     DestroyMenu(PopUpMenu);

  0020c	8b f4		 mov	 esi, esp
  0020e	8b 45 f8	 mov	 eax, DWORD PTR _PopUpMenu$[ebp]
  00211	50		 push	 eax
  00212	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyMenu@4
  00218	3b f4		 cmp	 esi, esp
  0021a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@PopupMenu:

; 1884 :   }
; 1885 :   if (SymbolsSelected>1) {
; 1886 :   }
; 1887 : }

  0021f	5f		 pop	 edi
  00220	5e		 pop	 esi
  00221	5b		 pop	 ebx
  00222	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00228	3b ec		 cmp	 ebp, esp
  0022a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0022f	8b e5		 mov	 esp, ebp
  00231	5d		 pop	 ebp
  00232	c3		 ret	 0
_PopupMenu ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _ReloadSymbolsIntoLibrary
_TEXT	SEGMENT
_SymbolFile$ = -544					; size = 512
_cnt2$ = -24						; size = 4
_cnt$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_ReloadSymbolsIntoLibrary PROC				; COMDAT

; 1824 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 03 00
	00		 sub	 esp, 932		; 000003a4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 5c fc ff
	ff		 lea	 edi, DWORD PTR [ebp-932]
  00012	b9 e9 00 00 00	 mov	 ecx, 233		; 000000e9H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1825 :   int32  cnt,cnt2;
; 1826 :   char   SymbolFile[MAX_LENGTH_STRING];
; 1827 : 
; 1828 :   for (cnt2=0;cnt2<1;cnt2++) {

  00028	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _cnt2$[ebp], 0
  0002f	eb 09		 jmp	 SHORT $LN4@ReloadSymb
$LN2@ReloadSymb:
  00031	8b 45 e8	 mov	 eax, DWORD PTR _cnt2$[ebp]
  00034	83 c0 01	 add	 eax, 1
  00037	89 45 e8	 mov	 DWORD PTR _cnt2$[ebp], eax
$LN4@ReloadSymb:
  0003a	83 7d e8 01	 cmp	 DWORD PTR _cnt2$[ebp], 1
  0003e	0f 8d 85 00 00
	00		 jge	 $LN3@ReloadSymb

; 1829 :     for (cnt=0;cnt<SymbolToBeEditedPos[cnt2];cnt++) {

  00044	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _cnt$[ebp], 0
  0004b	eb 09		 jmp	 SHORT $LN7@ReloadSymb
$LN5@ReloadSymb:
  0004d	8b 45 f4	 mov	 eax, DWORD PTR _cnt$[ebp]
  00050	83 c0 01	 add	 eax, 1
  00053	89 45 f4	 mov	 DWORD PTR _cnt$[ebp], eax
$LN7@ReloadSymb:
  00056	8b 45 e8	 mov	 eax, DWORD PTR _cnt2$[ebp]
  00059	8b 4d f4	 mov	 ecx, DWORD PTR _cnt$[ebp]
  0005c	3b 0c 85 00 00
	00 00		 cmp	 ecx, DWORD PTR _SymbolToBeEditedPos[eax*4]
  00063	7d 5f		 jge	 SHORT $LN6@ReloadSymb

; 1830 :       if (SymbolToBeEdited[cnt2][cnt][0]!=0) {

  00065	69 45 e8 00 28
	00 00		 imul	 eax, DWORD PTR _cnt2$[ebp], 10240
  0006c	8b 4d f4	 mov	 ecx, DWORD PTR _cnt$[ebp]
  0006f	c1 e1 09	 shl	 ecx, 9
  00072	8d 94 08 00 00
	00 00		 lea	 edx, DWORD PTR _SymbolToBeEdited[eax+ecx]
  00079	b8 01 00 00 00	 mov	 eax, 1
  0007e	6b c8 00	 imul	 ecx, eax, 0
  00081	0f be 14 0a	 movsx	 edx, BYTE PTR [edx+ecx]
  00085	85 d2		 test	 edx, edx
  00087	74 39		 je	 SHORT $LN8@ReloadSymb

; 1831 :         strcpy(SymbolFile,SymbolToBeEdited[cnt2][cnt]);

  00089	69 45 e8 00 28
	00 00		 imul	 eax, DWORD PTR _cnt2$[ebp], 10240
  00090	8b 4d f4	 mov	 ecx, DWORD PTR _cnt$[ebp]
  00093	c1 e1 09	 shl	 ecx, 9
  00096	8d 94 08 00 00
	00 00		 lea	 edx, DWORD PTR _SymbolToBeEdited[eax+ecx]
  0009d	52		 push	 edx
  0009e	8d 85 e0 fd ff
	ff		 lea	 eax, DWORD PTR _SymbolFile$[ebp]
  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 _strcpy
  000aa	83 c4 08	 add	 esp, 8

; 1832 :         AddSymbolToLibrary(SymbolFile,cnt2,2);

  000ad	6a 02		 push	 2
  000af	8b 45 e8	 mov	 eax, DWORD PTR _cnt2$[ebp]
  000b2	50		 push	 eax
  000b3	8d 8d e0 fd ff
	ff		 lea	 ecx, DWORD PTR _SymbolFile$[ebp]
  000b9	51		 push	 ecx
  000ba	e8 00 00 00 00	 call	 _AddSymbolToLibrary
  000bf	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN8@ReloadSymb:

; 1833 :       }
; 1834 :     }

  000c2	eb 89		 jmp	 SHORT $LN5@ReloadSymb
$LN6@ReloadSymb:

; 1835 :   }

  000c4	e9 68 ff ff ff	 jmp	 $LN2@ReloadSymb
$LN3@ReloadSymb:

; 1836 :   return 0;

  000c9	33 c0		 xor	 eax, eax

; 1837 : }

  000cb	52		 push	 edx
  000cc	8b cd		 mov	 ecx, ebp
  000ce	50		 push	 eax
  000cf	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@ReloadSymb
  000d5	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000da	58		 pop	 eax
  000db	5a		 pop	 edx
  000dc	5f		 pop	 edi
  000dd	5e		 pop	 esi
  000de	5b		 pop	 ebx
  000df	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e2	33 cd		 xor	 ecx, ebp
  000e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e9	81 c4 a4 03 00
	00		 add	 esp, 932		; 000003a4H
  000ef	3b ec		 cmp	 ebp, esp
  000f1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f6	8b e5		 mov	 esp, ebp
  000f8	5d		 pop	 ebp
  000f9	c3		 ret	 0
  000fa	66 90		 npad	 2
$LN12@ReloadSymb:
  000fc	01 00 00 00	 DD	 1
  00100	00 00 00 00	 DD	 $LN11@ReloadSymb
$LN11@ReloadSymb:
  00104	e0 fd ff ff	 DD	 -544			; fffffde0H
  00108	00 02 00 00	 DD	 512			; 00000200H
  0010c	00 00 00 00	 DD	 $LN10@ReloadSymb
$LN10@ReloadSymb:
  00110	53		 DB	 83			; 00000053H
  00111	79		 DB	 121			; 00000079H
  00112	6d		 DB	 109			; 0000006dH
  00113	62		 DB	 98			; 00000062H
  00114	6f		 DB	 111			; 0000006fH
  00115	6c		 DB	 108			; 0000006cH
  00116	46		 DB	 70			; 00000046H
  00117	69		 DB	 105			; 00000069H
  00118	6c		 DB	 108			; 0000006cH
  00119	65		 DB	 101			; 00000065H
  0011a	00		 DB	 0
_ReloadSymbolsIntoLibrary ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _ExitEditingSymbol
_TEXT	SEGMENT
_SymbolFile$ = -532					; size = 512
_ListNr2$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_SymbolNr$ = 8						; size = 4
_ExitEditingSymbol PROC					; COMDAT

; 1800 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 98 03 00
	00		 sub	 esp, 920		; 00000398H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 68 fc ff
	ff		 lea	 edi, DWORD PTR [ebp-920]
  00012	b9 e6 00 00 00	 mov	 ecx, 230		; 000000e6H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1801 :   int32 ListNr2;
; 1802 :   char  SymbolFile[MAX_LENGTH_STRING];
; 1803 : 
; 1804 :   if (SymbolNr<200) {

  00028	81 7d 08 c8 00
	00 00		 cmp	 DWORD PTR _SymbolNr$[ebp], 200 ; 000000c8H
  0002f	7d 09		 jge	 SHORT $LN2@ExitEditin

; 1805 :     ListNr2=0;

  00031	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _ListNr2$[ebp], 0

; 1806 :   } else {

  00038	eb 07		 jmp	 SHORT $LN3@ExitEditin
$LN2@ExitEditin:

; 1807 :     ListNr2=1;

  0003a	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _ListNr2$[ebp], 1
$LN3@ExitEditin:

; 1808 :   }
; 1809 :   SymbolNr%=100;

  00041	8b 45 08	 mov	 eax, DWORD PTR _SymbolNr$[ebp]
  00044	99		 cdq
  00045	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  0004a	f7 f9		 idiv	 ecx
  0004c	89 55 08	 mov	 DWORD PTR _SymbolNr$[ebp], edx

; 1810 :   strcpy(SymbolFile,SymbolToBeEdited[ListNr2][SymbolNr]);

  0004f	69 45 f4 00 28
	00 00		 imul	 eax, DWORD PTR _ListNr2$[ebp], 10240
  00056	8b 4d 08	 mov	 ecx, DWORD PTR _SymbolNr$[ebp]
  00059	c1 e1 09	 shl	 ecx, 9
  0005c	8d 94 08 00 00
	00 00		 lea	 edx, DWORD PTR _SymbolToBeEdited[eax+ecx]
  00063	52		 push	 edx
  00064	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _SymbolFile$[ebp]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 _strcpy
  00070	83 c4 08	 add	 esp, 8

; 1811 :   SymbolToBeEdited[ListNr2][SymbolNr][0]=0;

  00073	69 45 f4 00 28
	00 00		 imul	 eax, DWORD PTR _ListNr2$[ebp], 10240
  0007a	8b 4d 08	 mov	 ecx, DWORD PTR _SymbolNr$[ebp]
  0007d	c1 e1 09	 shl	 ecx, 9
  00080	8d 94 08 00 00
	00 00		 lea	 edx, DWORD PTR _SymbolToBeEdited[eax+ecx]
  00087	b8 01 00 00 00	 mov	 eax, 1
  0008c	6b c8 00	 imul	 ecx, eax, 0
  0008f	c6 04 0a 00	 mov	 BYTE PTR [edx+ecx], 0

; 1812 :   DeleteFileUTF8(SymbolFile);

  00093	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _SymbolFile$[ebp]
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 _DeleteFileUTF8
  0009f	83 c4 04	 add	 esp, 4

; 1813 :   return 0;

  000a2	33 c0		 xor	 eax, eax

; 1814 : }

  000a4	52		 push	 edx
  000a5	8b cd		 mov	 ecx, ebp
  000a7	50		 push	 eax
  000a8	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@ExitEditin
  000ae	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000b3	58		 pop	 eax
  000b4	5a		 pop	 edx
  000b5	5f		 pop	 edi
  000b6	5e		 pop	 esi
  000b7	5b		 pop	 ebx
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000bb	33 cd		 xor	 ecx, ebp
  000bd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c2	81 c4 98 03 00
	00		 add	 esp, 920		; 00000398H
  000c8	3b ec		 cmp	 ebp, esp
  000ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
  000d3	90		 npad	 1
$LN7@ExitEditin:
  000d4	01 00 00 00	 DD	 1
  000d8	00 00 00 00	 DD	 $LN6@ExitEditin
$LN6@ExitEditin:
  000dc	ec fd ff ff	 DD	 -532			; fffffdecH
  000e0	00 02 00 00	 DD	 512			; 00000200H
  000e4	00 00 00 00	 DD	 $LN5@ExitEditin
$LN5@ExitEditin:
  000e8	53		 DB	 83			; 00000053H
  000e9	79		 DB	 121			; 00000079H
  000ea	6d		 DB	 109			; 0000006dH
  000eb	62		 DB	 98			; 00000062H
  000ec	6f		 DB	 111			; 0000006fH
  000ed	6c		 DB	 108			; 0000006cH
  000ee	46		 DB	 70			; 00000046H
  000ef	69		 DB	 105			; 00000069H
  000f0	6c		 DB	 108			; 0000006cH
  000f1	65		 DB	 101			; 00000065H
  000f2	00		 DB	 0
_ExitEditingSymbol ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _EditSymbol
_TEXT	SEGMENT
tv175 = -7916						; size = 4
_ProcessInfo$ = -6372					; size = 16
_ExeParams$ = -6348					; size = 2560
_ExeFile$ = -3780					; size = 512
_SymbolFile$ = -3260					; size = 600
_str$ = -2652						; size = 2560
_pos$ = -84						; size = 4
_res2$ = -72						; size = 4
_result$ = -60						; size = 4
_fp2$ = -48						; size = 4
_fp$ = -36						; size = 4
_length$ = -24						; size = 4
_cnt2$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_ListNr$ = 8						; size = 4
_EditSymbol PROC					; COMDAT

; 1702 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 ec 1e 00 00	 mov	 eax, 7916		; 00001eecH
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	53		 push	 ebx
  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	8d bd 14 e1 ff
	ff		 lea	 edi, DWORD PTR [ebp-7916]
  00016	b9 bb 07 00 00	 mov	 ecx, 1979		; 000007bbH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1703 :   int32  cnt2,length,fp,fp2,result,res2,pos;
; 1704 :   char   str[MAX_LENGTH_STRING*5],SymbolFile[600],
; 1705 :          ExeFile[MAX_LENGTH_STRING],ExeParams[MAX_LENGTH_STRING*5];
; 1706 :   PROCESS_INFORMATION ProcessInfo;
; 1707 : 
; 1708 :   if (ListNr==0) {

  0002c	83 7d 08 00	 cmp	 DWORD PTR _ListNr$[ebp], 0
  00030	75 2b		 jne	 SHORT $LN6@EditSymbol

; 1709 :     SymbolsSelected=SendMessage(ListWindow1,LB_GETSELITEMS,MAX_NR_LIB_SYMBOLS+1,

  00032	8b f4		 mov	 esi, esp
  00034	68 00 00 00 00	 push	 OFFSET _LibIndex
  00039	68 01 10 00 00	 push	 4097			; 00001001H
  0003e	68 91 01 00 00	 push	 401			; 00000191H
  00043	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow1
  00048	50		 push	 eax
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	a3 00 00 00 00	 mov	 DWORD PTR _SymbolsSelected, eax

; 1710 :                                 (LPARAM)(LPINT)&LibIndex);
; 1711 :   } else {

  0005b	eb 29		 jmp	 SHORT $LN7@EditSymbol
$LN6@EditSymbol:

; 1712 :     SymbolsSelected=SendMessage(ListWindow2,LB_GETSELITEMS,MAX_NR_LIB_SYMBOLS+1,

  0005d	8b f4		 mov	 esi, esp
  0005f	68 00 00 00 00	 push	 OFFSET _LibIndex
  00064	68 01 10 00 00	 push	 4097			; 00001001H
  00069	68 91 01 00 00	 push	 401			; 00000191H
  0006e	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow2
  00073	50		 push	 eax
  00074	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0007a	3b f4		 cmp	 esi, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	a3 00 00 00 00	 mov	 DWORD PTR _SymbolsSelected, eax
$LN7@EditSymbol:

; 1713 :                                 (LPARAM)(LPINT)&LibIndex);
; 1714 :   }
; 1715 : 
; 1716 :   if (SymbolsSelected!=1) return -1;

  00086	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR _SymbolsSelected, 1
  0008d	74 08		 je	 SHORT $LN8@EditSymbol
  0008f	83 c8 ff	 or	 eax, -1
  00092	e9 64 04 00 00	 jmp	 $LN1@EditSymbol
$LN8@EditSymbol:

; 1717 :   MakeBackup(ListNr);

  00097	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 _MakeBackup
  000a0	83 c4 04	 add	 esp, 4

; 1718 :   if (ListNr==0) {

  000a3	83 7d 08 00	 cmp	 DWORD PTR _ListNr$[ebp], 0
  000a7	75 2c		 jne	 SHORT $LN9@EditSymbol

; 1719 :     SendMessageUTF8(ListWindow1,LB_GETTEXT,LibIndex[0],(LPARAM)str);

  000a9	8d 85 a4 f5 ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  000af	50		 push	 eax
  000b0	b9 04 00 00 00	 mov	 ecx, 4
  000b5	6b d1 00	 imul	 edx, ecx, 0
  000b8	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR _LibIndex[edx]
  000be	50		 push	 eax
  000bf	68 89 01 00 00	 push	 393			; 00000189H
  000c4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ListWindow1
  000ca	51		 push	 ecx
  000cb	e8 00 00 00 00	 call	 _SendMessageUTF8
  000d0	83 c4 10	 add	 esp, 16			; 00000010H

; 1720 :   } else {

  000d3	eb 2a		 jmp	 SHORT $LN10@EditSymbol
$LN9@EditSymbol:

; 1721 :     SendMessageUTF8(ListWindow2,LB_GETTEXT,LibIndex[0],(LPARAM)str);

  000d5	8d 85 a4 f5 ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  000db	50		 push	 eax
  000dc	b9 04 00 00 00	 mov	 ecx, 4
  000e1	6b d1 00	 imul	 edx, ecx, 0
  000e4	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR _LibIndex[edx]
  000ea	50		 push	 eax
  000eb	68 89 01 00 00	 push	 393			; 00000189H
  000f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ListWindow2
  000f6	51		 push	 ecx
  000f7	e8 00 00 00 00	 call	 _SendMessageUTF8
  000fc	83 c4 10	 add	 esp, 16			; 00000010H
$LN10@EditSymbol:

; 1722 :   }
; 1723 :   cnt2=0;

  000ff	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _cnt2$[ebp], 0
$LN2@EditSymbol:

; 1724 :   while ((cnt2<Lib[ListNr].NrLibEntries)
; 1725 :         &&

  00106	6b 45 08 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  0010a	8b 4d f4	 mov	 ecx, DWORD PTR _cnt2$[ebp]
  0010d	3b 88 48 00 00
	00		 cmp	 ecx, DWORD PTR _Lib[eax+72]
  00113	7d 31		 jge	 SHORT $LN3@EditSymbol
  00115	8d 85 a4 f5 ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  0011b	50		 push	 eax
  0011c	69 4d 08 00 80
	02 00		 imul	 ecx, DWORD PTR _ListNr$[ebp], 163840
  00123	6b 55 f4 28	 imul	 edx, DWORD PTR _cnt2$[ebp], 40
  00127	8d 84 11 00 00
	00 00		 lea	 eax, DWORD PTR _LibNames[ecx+edx]
  0012e	50		 push	 eax
  0012f	e8 00 00 00 00	 call	 _stricmp
  00134	83 c4 08	 add	 esp, 8
  00137	85 c0		 test	 eax, eax
  00139	74 0b		 je	 SHORT $LN3@EditSymbol

; 1726 :         (stricmp(LibNames[ListNr][cnt2].Text,str)!=0)) cnt2++;

  0013b	8b 45 f4	 mov	 eax, DWORD PTR _cnt2$[ebp]
  0013e	83 c0 01	 add	 eax, 1
  00141	89 45 f4	 mov	 DWORD PTR _cnt2$[ebp], eax
  00144	eb c0		 jmp	 SHORT $LN2@EditSymbol
$LN3@EditSymbol:

; 1727 :   if (cnt2<Lib[ListNr].NrLibEntries) {

  00146	6b 45 08 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  0014a	8b 4d f4	 mov	 ecx, DWORD PTR _cnt2$[ebp]
  0014d	3b 88 48 00 00
	00		 cmp	 ecx, DWORD PTR _Lib[eax+72]
  00153	0f 8d a0 03 00
	00		 jge	 $LN11@EditSymbol

; 1728 :     length=LibNames[ListNr][cnt2].Length;

  00159	69 45 08 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  00160	6b 4d f4 28	 imul	 ecx, DWORD PTR _cnt2$[ebp], 40
  00164	8b 94 08 24 00
	00 00		 mov	 edx, DWORD PTR _LibNames[eax+ecx+36]
  0016b	89 55 e8	 mov	 DWORD PTR _length$[ebp], edx

; 1729 :     if (LibraryMode==0) {

  0016e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  00175	75 22		 jne	 SHORT $LN12@EditSymbol

; 1730 :       sprintf(SymbolFile,"%s\\%s.sym",TempPath,str);

  00177	8d 85 a4 f5 ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  0017d	50		 push	 eax
  0017e	68 00 00 00 00	 push	 OFFSET _TempPath
  00183	68 00 00 00 00	 push	 OFFSET ??_C@_09OCJNPHPC@?$CFs?2?$CFs?4sym?$AA@
  00188	8d 8d 44 f3 ff
	ff		 lea	 ecx, DWORD PTR _SymbolFile$[ebp]
  0018e	51		 push	 ecx
  0018f	e8 00 00 00 00	 call	 _sprintf
  00194	83 c4 10	 add	 esp, 16			; 00000010H

; 1731 :     } else {

  00197	eb 20		 jmp	 SHORT $LN13@EditSymbol
$LN12@EditSymbol:

; 1732 :       sprintf(SymbolFile,"%s\\%s.shp",TempPath,str);

  00199	8d 85 a4 f5 ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  0019f	50		 push	 eax
  001a0	68 00 00 00 00	 push	 OFFSET _TempPath
  001a5	68 00 00 00 00	 push	 OFFSET ??_C@_09BFFCKJ@?$CFs?2?$CFs?4shp?$AA@
  001aa	8d 8d 44 f3 ff
	ff		 lea	 ecx, DWORD PTR _SymbolFile$[ebp]
  001b0	51		 push	 ecx
  001b1	e8 00 00 00 00	 call	 _sprintf
  001b6	83 c4 10	 add	 esp, 16			; 00000010H
$LN13@EditSymbol:

; 1733 :     }
; 1734 : 
; 1735 :     if (((fp2=FileOpenReadOnlyUTF8(LibraryFile[ListNr]))>0)
; 1736 :        &&

  001b9	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  001bc	c1 e0 09	 shl	 eax, 9
  001bf	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  001c4	50		 push	 eax
  001c5	e8 00 00 00 00	 call	 _FileOpenReadOnlyUTF8
  001ca	83 c4 04	 add	 esp, 4
  001cd	89 45 d0	 mov	 DWORD PTR _fp2$[ebp], eax
  001d0	83 7d d0 00	 cmp	 DWORD PTR _fp2$[ebp], 0
  001d4	0f 8e 1f 03 00
	00		 jle	 $LN11@EditSymbol
  001da	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  001df	50		 push	 eax
  001e0	8b 4d e8	 mov	 ecx, DWORD PTR _length$[ebp]
  001e3	51		 push	 ecx
  001e4	8d 95 44 f3 ff
	ff		 lea	 edx, DWORD PTR _SymbolFile$[ebp]
  001ea	52		 push	 edx
  001eb	e8 00 00 00 00	 call	 _CheckForWritingAndOpenUTF8
  001f0	83 c4 0c	 add	 esp, 12			; 0000000cH
  001f3	89 45 dc	 mov	 DWORD PTR _fp$[ebp], eax
  001f6	83 7d dc 00	 cmp	 DWORD PTR _fp$[ebp], 0
  001fa	0f 8e f9 02 00
	00		 jle	 $LN11@EditSymbol

; 1737 :        ((fp=CheckForWritingAndOpenUTF8(SymbolFile,length,LIBMANWindow))>0)) {
; 1738 :       FileSeek(fp2,LibNames[ListNr][cnt2].Pos);

  00200	69 45 08 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  00207	6b 4d f4 28	 imul	 ecx, DWORD PTR _cnt2$[ebp], 40
  0020b	8b 94 08 20 00
	00 00		 mov	 edx, DWORD PTR _LibNames[eax+ecx+32]
  00212	52		 push	 edx
  00213	8b 45 d0	 mov	 eax, DWORD PTR _fp2$[ebp]
  00216	50		 push	 eax
  00217	e8 00 00 00 00	 call	 _FileSeek
  0021c	83 c4 08	 add	 esp, 8
$LN4@EditSymbol:

; 1739 :       while (length>0) {

  0021f	83 7d e8 00	 cmp	 DWORD PTR _length$[ebp], 0
  00223	7e 70		 jle	 SHORT $LN5@EditSymbol

; 1740 :         FileRead(fp2,Buf,min(length,BufSize),&result);

  00225	81 7d e8 00 00
	04 00		 cmp	 DWORD PTR _length$[ebp], 262144 ; 00040000H
  0022c	7d 0b		 jge	 SHORT $LN26@EditSymbol
  0022e	8b 45 e8	 mov	 eax, DWORD PTR _length$[ebp]
  00231	89 85 14 e1 ff
	ff		 mov	 DWORD PTR tv175[ebp], eax
  00237	eb 0a		 jmp	 SHORT $LN27@EditSymbol
$LN26@EditSymbol:
  00239	c7 85 14 e1 ff
	ff 00 00 04 00	 mov	 DWORD PTR tv175[ebp], 262144 ; 00040000H
$LN27@EditSymbol:
  00243	8d 4d c4	 lea	 ecx, DWORD PTR _result$[ebp]
  00246	51		 push	 ecx
  00247	8b 95 14 e1 ff
	ff		 mov	 edx, DWORD PTR tv175[ebp]
  0024d	52		 push	 edx
  0024e	a1 00 00 00 00	 mov	 eax, DWORD PTR _Buf
  00253	50		 push	 eax
  00254	8b 4d d0	 mov	 ecx, DWORD PTR _fp2$[ebp]
  00257	51		 push	 ecx
  00258	e8 00 00 00 00	 call	 _FileRead
  0025d	83 c4 10	 add	 esp, 16			; 00000010H

; 1741 :         if (result>0) {

  00260	83 7d c4 00	 cmp	 DWORD PTR _result$[ebp], 0
  00264	7e 26		 jle	 SHORT $LN15@EditSymbol

; 1742 :           FileWrite(fp,Buf,result,&res2);

  00266	8d 45 b8	 lea	 eax, DWORD PTR _res2$[ebp]
  00269	50		 push	 eax
  0026a	8b 4d c4	 mov	 ecx, DWORD PTR _result$[ebp]
  0026d	51		 push	 ecx
  0026e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _Buf
  00274	52		 push	 edx
  00275	8b 45 dc	 mov	 eax, DWORD PTR _fp$[ebp]
  00278	50		 push	 eax
  00279	e8 00 00 00 00	 call	 _FileWrite
  0027e	83 c4 10	 add	 esp, 16			; 00000010H

; 1743 :           length-=result;

  00281	8b 45 e8	 mov	 eax, DWORD PTR _length$[ebp]
  00284	2b 45 c4	 sub	 eax, DWORD PTR _result$[ebp]
  00287	89 45 e8	 mov	 DWORD PTR _length$[ebp], eax
  0028a	eb 07		 jmp	 SHORT $LN16@EditSymbol
$LN15@EditSymbol:

; 1744 :         } else length=0;

  0028c	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _length$[ebp], 0
$LN16@EditSymbol:

; 1745 :       }

  00293	eb 8a		 jmp	 SHORT $LN4@EditSymbol
$LN5@EditSymbol:

; 1746 :       FileClose(fp);

  00295	8b 45 dc	 mov	 eax, DWORD PTR _fp$[ebp]
  00298	50		 push	 eax
  00299	e8 00 00 00 00	 call	 _FileClose
  0029e	83 c4 04	 add	 esp, 4

; 1747 :       FileClose(fp2);

  002a1	8b 45 d0	 mov	 eax, DWORD PTR _fp2$[ebp]
  002a4	50		 push	 eax
  002a5	e8 00 00 00 00	 call	 _FileClose
  002aa	83 c4 04	 add	 esp, 4

; 1748 :       if (LibraryMode==0) {

  002ad	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  002b4	0f 85 21 01 00
	00		 jne	 $LN17@EditSymbol

; 1749 :         sprintf(ExeFile,"%s\\sch.exe",ExePath);

  002ba	68 00 00 00 00	 push	 OFFSET _ExePath
  002bf	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KGOMJMBN@?$CFs?2sch?4exe?$AA@
  002c4	8d 85 3c f1 ff
	ff		 lea	 eax, DWORD PTR _ExeFile$[ebp]
  002ca	50		 push	 eax
  002cb	e8 00 00 00 00	 call	 _sprintf
  002d0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1750 :         if (FileExistsUTF8(ExeFile)==0) {

  002d3	8d 85 3c f1 ff
	ff		 lea	 eax, DWORD PTR _ExeFile$[ebp]
  002d9	50		 push	 eax
  002da	e8 00 00 00 00	 call	 _FileExistsUTF8
  002df	83 c4 04	 add	 esp, 4
  002e2	85 c0		 test	 eax, eax
  002e4	0f 85 ec 00 00
	00		 jne	 $LN19@EditSymbol

; 1751 :           if (SymbolToBeEditedPos[ListNr]<20) {

  002ea	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  002ed	83 3c 85 00 00
	00 00 14	 cmp	 DWORD PTR _SymbolToBeEditedPos[eax*4], 20 ; 00000014H
  002f5	0f 8d db 00 00
	00		 jge	 $LN19@EditSymbol

; 1752 :             pos=SymbolToBeEditedPos[ListNr]+100;

  002fb	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  002fe	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR _SymbolToBeEditedPos[eax*4]
  00305	83 c1 64	 add	 ecx, 100		; 00000064H
  00308	89 4d ac	 mov	 DWORD PTR _pos$[ebp], ecx

; 1753 :             if (ListNr==1) pos+=100;

  0030b	83 7d 08 01	 cmp	 DWORD PTR _ListNr$[ebp], 1
  0030f	75 09		 jne	 SHORT $LN21@EditSymbol
  00311	8b 45 ac	 mov	 eax, DWORD PTR _pos$[ebp]
  00314	83 c0 64	 add	 eax, 100		; 00000064H
  00317	89 45 ac	 mov	 DWORD PTR _pos$[ebp], eax
$LN21@EditSymbol:

; 1754 : //            sprintf(str2,"%s\\sch.exe \"%s\" /e \"%s\" /a /w %x /z %d",ExePath,SymbolFile,ExePath,LIBMANWindow,pos);
; 1755 :             strcpy(SymbolToBeEdited[ListNr][SymbolToBeEditedPos[ListNr]],SymbolFile);

  0031a	8d 85 44 f3 ff
	ff		 lea	 eax, DWORD PTR _SymbolFile$[ebp]
  00320	50		 push	 eax
  00321	69 4d 08 00 28
	00 00		 imul	 ecx, DWORD PTR _ListNr$[ebp], 10240
  00328	8b 55 08	 mov	 edx, DWORD PTR _ListNr$[ebp]
  0032b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR _SymbolToBeEditedPos[edx*4]
  00332	c1 e0 09	 shl	 eax, 9
  00335	8d 8c 01 00 00
	00 00		 lea	 ecx, DWORD PTR _SymbolToBeEdited[ecx+eax]
  0033c	51		 push	 ecx
  0033d	e8 00 00 00 00	 call	 _strcpy
  00342	83 c4 08	 add	 esp, 8

; 1756 :             SymbolToBeEditedPos[ListNr]++;

  00345	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  00348	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR _SymbolToBeEditedPos[eax*4]
  0034f	83 c1 01	 add	 ecx, 1
  00352	8b 55 08	 mov	 edx, DWORD PTR _ListNr$[ebp]
  00355	89 0c 95 00 00
	00 00		 mov	 DWORD PTR _SymbolToBeEditedPos[edx*4], ecx

; 1757 : 
; 1758 :             sprintf(ExeParams,"\"%s\\sch.exe\" \"%s\" /e \"%s\" /a /w %x /z %d",

  0035c	8b 45 ac	 mov	 eax, DWORD PTR _pos$[ebp]
  0035f	50		 push	 eax
  00360	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00366	51		 push	 ecx
  00367	68 00 00 00 00	 push	 OFFSET _ExePath
  0036c	8d 95 44 f3 ff
	ff		 lea	 edx, DWORD PTR _SymbolFile$[ebp]
  00372	52		 push	 edx
  00373	68 00 00 00 00	 push	 OFFSET _ExePath
  00378	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@OIEBFKKJ@?$CC?$CFs?2sch?4exe?$CC?5?$CC?$CFs?$CC?5?1e?5?$CC?$CFs?$CC?5?1a?5?1w?5@
  0037d	8d 85 34 e7 ff
	ff		 lea	 eax, DWORD PTR _ExeParams$[ebp]
  00383	50		 push	 eax
  00384	e8 00 00 00 00	 call	 _sprintf
  00389	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1759 :                     ExePath,SymbolFile,ExePath,(int32)LIBMANWindow,pos);
; 1760 :             StartupInfo.cb=sizeof(StartupInfo);

  0038c	c7 05 00 00 00
	00 44 00 00 00	 mov	 DWORD PTR _StartupInfo, 68 ; 00000044H

; 1761 :             StartupInfo.wShowWindow=SW_SHOW;

  00396	b8 05 00 00 00	 mov	 eax, 5
  0039b	66 a3 30 00 00
	00		 mov	 WORD PTR _StartupInfo+48, ax

; 1762 :             CreateProcess(ExeFile,ExeParams,NULL,NULL,1,0,NULL,NULL,&StartupInfo,&ProcessInfo);

  003a1	8b f4		 mov	 esi, esp
  003a3	8d 85 1c e7 ff
	ff		 lea	 eax, DWORD PTR _ProcessInfo$[ebp]
  003a9	50		 push	 eax
  003aa	68 00 00 00 00	 push	 OFFSET _StartupInfo
  003af	6a 00		 push	 0
  003b1	6a 00		 push	 0
  003b3	6a 00		 push	 0
  003b5	6a 01		 push	 1
  003b7	6a 00		 push	 0
  003b9	6a 00		 push	 0
  003bb	8d 8d 34 e7 ff
	ff		 lea	 ecx, DWORD PTR _ExeParams$[ebp]
  003c1	51		 push	 ecx
  003c2	8d 95 3c f1 ff
	ff		 lea	 edx, DWORD PTR _ExeFile$[ebp]
  003c8	52		 push	 edx
  003c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateProcessA@40
  003cf	3b f4		 cmp	 esi, esp
  003d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN19@EditSymbol:

; 1763 : 
; 1764 : //            WinExec(str2,SW_SHOW);
; 1765 :           }
; 1766 :         }
; 1767 :       } else {

  003d6	e9 1e 01 00 00	 jmp	 $LN11@EditSymbol
$LN17@EditSymbol:

; 1768 :         sprintf(ExeFile,"%s\\geom.exe",ExePath);

  003db	68 00 00 00 00	 push	 OFFSET _ExePath
  003e0	68 00 00 00 00	 push	 OFFSET ??_C@_0M@JJKMJFCI@?$CFs?2geom?4exe?$AA@
  003e5	8d 85 3c f1 ff
	ff		 lea	 eax, DWORD PTR _ExeFile$[ebp]
  003eb	50		 push	 eax
  003ec	e8 00 00 00 00	 call	 _sprintf
  003f1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1769 :         if (FileExistsUTF8(ExeFile)==0) {

  003f4	8d 85 3c f1 ff
	ff		 lea	 eax, DWORD PTR _ExeFile$[ebp]
  003fa	50		 push	 eax
  003fb	e8 00 00 00 00	 call	 _FileExistsUTF8
  00400	83 c4 04	 add	 esp, 4
  00403	85 c0		 test	 eax, eax
  00405	0f 85 ee 00 00
	00		 jne	 $LN11@EditSymbol

; 1770 :           if (SymbolToBeEditedPos[ListNr]<20) {

  0040b	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  0040e	83 3c 85 00 00
	00 00 14	 cmp	 DWORD PTR _SymbolToBeEditedPos[eax*4], 20 ; 00000014H
  00416	0f 8d dd 00 00
	00		 jge	 $LN11@EditSymbol

; 1771 :             pos=SymbolToBeEditedPos[ListNr]+100;

  0041c	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  0041f	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR _SymbolToBeEditedPos[eax*4]
  00426	83 c1 64	 add	 ecx, 100		; 00000064H
  00429	89 4d ac	 mov	 DWORD PTR _pos$[ebp], ecx

; 1772 :             if (ListNr==1) pos+=200;

  0042c	83 7d 08 01	 cmp	 DWORD PTR _ListNr$[ebp], 1
  00430	75 0b		 jne	 SHORT $LN24@EditSymbol
  00432	8b 45 ac	 mov	 eax, DWORD PTR _pos$[ebp]
  00435	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  0043a	89 45 ac	 mov	 DWORD PTR _pos$[ebp], eax
$LN24@EditSymbol:

; 1773 : //            sprintf(str2,"%s\\geom.exe \"%s\" /e \"%s\" /a /w %x /z %d",ExePath,SymbolFile,ExePath,LIBMANWindow,pos);
; 1774 : //            MessageBox(LIBMANWindow,SymbolFile,"edit geom file",MB_APPLMODAL+MB_OK);
; 1775 : //            MessageBoxUTF8(LIBMANWindow,SymbolFile,"edit geom file(2)",MB_APPLMODAL+MB_OK);
; 1776 :             strcpy(SymbolToBeEdited[ListNr][SymbolToBeEditedPos[ListNr]],SymbolFile);

  0043d	8d 85 44 f3 ff
	ff		 lea	 eax, DWORD PTR _SymbolFile$[ebp]
  00443	50		 push	 eax
  00444	69 4d 08 00 28
	00 00		 imul	 ecx, DWORD PTR _ListNr$[ebp], 10240
  0044b	8b 55 08	 mov	 edx, DWORD PTR _ListNr$[ebp]
  0044e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR _SymbolToBeEditedPos[edx*4]
  00455	c1 e0 09	 shl	 eax, 9
  00458	8d 8c 01 00 00
	00 00		 lea	 ecx, DWORD PTR _SymbolToBeEdited[ecx+eax]
  0045f	51		 push	 ecx
  00460	e8 00 00 00 00	 call	 _strcpy
  00465	83 c4 08	 add	 esp, 8

; 1777 :             SymbolToBeEditedPos[ListNr]++;

  00468	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  0046b	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR _SymbolToBeEditedPos[eax*4]
  00472	83 c1 01	 add	 ecx, 1
  00475	8b 55 08	 mov	 edx, DWORD PTR _ListNr$[ebp]
  00478	89 0c 95 00 00
	00 00		 mov	 DWORD PTR _SymbolToBeEditedPos[edx*4], ecx

; 1778 :             sprintf(ExeParams,"\"%s\\geom.exe\" \"%s\" /e \"%s\" /a /w %x /z %d",

  0047f	8b 45 ac	 mov	 eax, DWORD PTR _pos$[ebp]
  00482	50		 push	 eax
  00483	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00489	51		 push	 ecx
  0048a	68 00 00 00 00	 push	 OFFSET _ExePath
  0048f	8d 95 44 f3 ff
	ff		 lea	 edx, DWORD PTR _SymbolFile$[ebp]
  00495	52		 push	 edx
  00496	68 00 00 00 00	 push	 OFFSET _ExePath
  0049b	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@IGIFOMJJ@?$CC?$CFs?2geom?4exe?$CC?5?$CC?$CFs?$CC?5?1e?5?$CC?$CFs?$CC?5?1a?5?1w@
  004a0	8d 85 34 e7 ff
	ff		 lea	 eax, DWORD PTR _ExeParams$[ebp]
  004a6	50		 push	 eax
  004a7	e8 00 00 00 00	 call	 _sprintf
  004ac	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1779 :                     ExePath,SymbolFile,ExePath,(int32)LIBMANWindow,pos);
; 1780 :             StartupInfo.cb=sizeof(StartupInfo);

  004af	c7 05 00 00 00
	00 44 00 00 00	 mov	 DWORD PTR _StartupInfo, 68 ; 00000044H

; 1781 :             StartupInfo.wShowWindow=SW_SHOW;

  004b9	b8 05 00 00 00	 mov	 eax, 5
  004be	66 a3 30 00 00
	00		 mov	 WORD PTR _StartupInfo+48, ax

; 1782 :             CreateProcess(ExeFile,ExeParams,NULL,NULL,1,0,NULL,NULL,&StartupInfo,&ProcessInfo);

  004c4	8b f4		 mov	 esi, esp
  004c6	8d 85 1c e7 ff
	ff		 lea	 eax, DWORD PTR _ProcessInfo$[ebp]
  004cc	50		 push	 eax
  004cd	68 00 00 00 00	 push	 OFFSET _StartupInfo
  004d2	6a 00		 push	 0
  004d4	6a 00		 push	 0
  004d6	6a 00		 push	 0
  004d8	6a 01		 push	 1
  004da	6a 00		 push	 0
  004dc	6a 00		 push	 0
  004de	8d 8d 34 e7 ff
	ff		 lea	 ecx, DWORD PTR _ExeParams$[ebp]
  004e4	51		 push	 ecx
  004e5	8d 95 3c f1 ff
	ff		 lea	 edx, DWORD PTR _ExeFile$[ebp]
  004eb	52		 push	 edx
  004ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateProcessA@40
  004f2	3b f4		 cmp	 esi, esp
  004f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN11@EditSymbol:

; 1783 : //            WinExec(str2,SW_SHOW);
; 1784 :           }
; 1785 :         }
; 1786 :       }
; 1787 :     }
; 1788 :   }
; 1789 :   return 0;

  004f9	33 c0		 xor	 eax, eax
$LN1@EditSymbol:

; 1790 : }

  004fb	52		 push	 edx
  004fc	8b cd		 mov	 ecx, ebp
  004fe	50		 push	 eax
  004ff	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN36@EditSymbol
  00505	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0050a	58		 pop	 eax
  0050b	5a		 pop	 edx
  0050c	5f		 pop	 edi
  0050d	5e		 pop	 esi
  0050e	5b		 pop	 ebx
  0050f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00512	33 cd		 xor	 ecx, ebp
  00514	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00519	81 c4 ec 1e 00
	00		 add	 esp, 7916		; 00001eecH
  0051f	3b ec		 cmp	 ebp, esp
  00521	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00526	8b e5		 mov	 esp, ebp
  00528	5d		 pop	 ebp
  00529	c3		 ret	 0
  0052a	66 90		 npad	 2
$LN36@EditSymbol:
  0052c	07 00 00 00	 DD	 7
  00530	00 00 00 00	 DD	 $LN35@EditSymbol
$LN35@EditSymbol:
  00534	c4 ff ff ff	 DD	 -60			; ffffffc4H
  00538	04 00 00 00	 DD	 4
  0053c	00 00 00 00	 DD	 $LN28@EditSymbol
  00540	b8 ff ff ff	 DD	 -72			; ffffffb8H
  00544	04 00 00 00	 DD	 4
  00548	00 00 00 00	 DD	 $LN29@EditSymbol
  0054c	a4 f5 ff ff	 DD	 -2652			; fffff5a4H
  00550	00 0a 00 00	 DD	 2560			; 00000a00H
  00554	00 00 00 00	 DD	 $LN30@EditSymbol
  00558	44 f3 ff ff	 DD	 -3260			; fffff344H
  0055c	58 02 00 00	 DD	 600			; 00000258H
  00560	00 00 00 00	 DD	 $LN31@EditSymbol
  00564	3c f1 ff ff	 DD	 -3780			; fffff13cH
  00568	00 02 00 00	 DD	 512			; 00000200H
  0056c	00 00 00 00	 DD	 $LN32@EditSymbol
  00570	34 e7 ff ff	 DD	 -6348			; ffffe734H
  00574	00 0a 00 00	 DD	 2560			; 00000a00H
  00578	00 00 00 00	 DD	 $LN33@EditSymbol
  0057c	1c e7 ff ff	 DD	 -6372			; ffffe71cH
  00580	10 00 00 00	 DD	 16			; 00000010H
  00584	00 00 00 00	 DD	 $LN34@EditSymbol
$LN34@EditSymbol:
  00588	50		 DB	 80			; 00000050H
  00589	72		 DB	 114			; 00000072H
  0058a	6f		 DB	 111			; 0000006fH
  0058b	63		 DB	 99			; 00000063H
  0058c	65		 DB	 101			; 00000065H
  0058d	73		 DB	 115			; 00000073H
  0058e	73		 DB	 115			; 00000073H
  0058f	49		 DB	 73			; 00000049H
  00590	6e		 DB	 110			; 0000006eH
  00591	66		 DB	 102			; 00000066H
  00592	6f		 DB	 111			; 0000006fH
  00593	00		 DB	 0
$LN33@EditSymbol:
  00594	45		 DB	 69			; 00000045H
  00595	78		 DB	 120			; 00000078H
  00596	65		 DB	 101			; 00000065H
  00597	50		 DB	 80			; 00000050H
  00598	61		 DB	 97			; 00000061H
  00599	72		 DB	 114			; 00000072H
  0059a	61		 DB	 97			; 00000061H
  0059b	6d		 DB	 109			; 0000006dH
  0059c	73		 DB	 115			; 00000073H
  0059d	00		 DB	 0
$LN32@EditSymbol:
  0059e	45		 DB	 69			; 00000045H
  0059f	78		 DB	 120			; 00000078H
  005a0	65		 DB	 101			; 00000065H
  005a1	46		 DB	 70			; 00000046H
  005a2	69		 DB	 105			; 00000069H
  005a3	6c		 DB	 108			; 0000006cH
  005a4	65		 DB	 101			; 00000065H
  005a5	00		 DB	 0
$LN31@EditSymbol:
  005a6	53		 DB	 83			; 00000053H
  005a7	79		 DB	 121			; 00000079H
  005a8	6d		 DB	 109			; 0000006dH
  005a9	62		 DB	 98			; 00000062H
  005aa	6f		 DB	 111			; 0000006fH
  005ab	6c		 DB	 108			; 0000006cH
  005ac	46		 DB	 70			; 00000046H
  005ad	69		 DB	 105			; 00000069H
  005ae	6c		 DB	 108			; 0000006cH
  005af	65		 DB	 101			; 00000065H
  005b0	00		 DB	 0
$LN30@EditSymbol:
  005b1	73		 DB	 115			; 00000073H
  005b2	74		 DB	 116			; 00000074H
  005b3	72		 DB	 114			; 00000072H
  005b4	00		 DB	 0
$LN29@EditSymbol:
  005b5	72		 DB	 114			; 00000072H
  005b6	65		 DB	 101			; 00000065H
  005b7	73		 DB	 115			; 00000073H
  005b8	32		 DB	 50			; 00000032H
  005b9	00		 DB	 0
$LN28@EditSymbol:
  005ba	72		 DB	 114			; 00000072H
  005bb	65		 DB	 101			; 00000065H
  005bc	73		 DB	 115			; 00000073H
  005bd	75		 DB	 117			; 00000075H
  005be	6c		 DB	 108			; 0000006cH
  005bf	74		 DB	 116			; 00000074H
  005c0	00		 DB	 0
_EditSymbol ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _AddSymbols
_TEXT	SEGMENT
tv137 = -1696						; size = 4
_Stop$ = -1112						; size = 4
_str2$ = -1100						; size = 512
_FileName2$ = -580					; size = 512
_count$ = -60						; size = 4
_res$ = -48						; size = 4
_SearchStr$ = -36					; size = 4
_FileName$ = -24					; size = 4
_Dir$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_ListNr$ = 8						; size = 4
_mode$ = 12						; size = 4
_AddSymbols PROC					; COMDAT

; 1600 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 06 00
	00		 sub	 esp, 1696		; 000006a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 60 f9 ff
	ff		 lea	 edi, DWORD PTR [ebp-1696]
  00012	b9 a8 01 00 00	 mov	 ecx, 424		; 000001a8H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1601 :   LPSTR  Dir,FileName,SearchStr;
; 1602 :   int32  res,count;
; 1603 :   char   FileName2[MAX_LENGTH_STRING],str2[MAX_LENGTH_STRING];
; 1604 :   int32   Stop=0;

  00028	c7 85 a8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _Stop$[ebp], 0

; 1605 : 
; 1606 :   count=0;

  00032	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 1607 :   Dir=(LPSTR)TempMem;

  00039	a1 00 00 00 00	 mov	 eax, DWORD PTR _TempMem
  0003e	89 45 f4	 mov	 DWORD PTR _Dir$[ebp], eax

; 1608 :   if (Dir[0]==0) return -1;

  00041	b8 01 00 00 00	 mov	 eax, 1
  00046	6b c8 00	 imul	 ecx, eax, 0
  00049	8b 55 f4	 mov	 edx, DWORD PTR _Dir$[ebp]
  0004c	0f be 04 0a	 movsx	 eax, BYTE PTR [edx+ecx]
  00050	85 c0		 test	 eax, eax
  00052	75 08		 jne	 SHORT $LN6@AddSymbols
  00054	83 c8 ff	 or	 eax, -1
  00057	e9 0d 02 00 00	 jmp	 $LN1@AddSymbols
$LN6@AddSymbols:

; 1609 :   SearchStr=Dir;

  0005c	8b 45 f4	 mov	 eax, DWORD PTR _Dir$[ebp]
  0005f	89 45 dc	 mov	 DWORD PTR _SearchStr$[ebp], eax

; 1610 :   FileName=(LPSTR)TempMem;

  00062	a1 00 00 00 00	 mov	 eax, DWORD PTR _TempMem
  00067	89 45 e8	 mov	 DWORD PTR _FileName$[ebp], eax

; 1611 :   FileName+=strlen(FileName)+1;

  0006a	8b 45 e8	 mov	 eax, DWORD PTR _FileName$[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 _strlen
  00073	83 c4 04	 add	 esp, 4
  00076	8b 4d e8	 mov	 ecx, DWORD PTR _FileName$[ebp]
  00079	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  0007d	89 55 e8	 mov	 DWORD PTR _FileName$[ebp], edx

; 1612 :   if (FileName[0]!=0) {

  00080	b8 01 00 00 00	 mov	 eax, 1
  00085	6b c8 00	 imul	 ecx, eax, 0
  00088	8b 55 e8	 mov	 edx, DWORD PTR _FileName$[ebp]
  0008b	0f be 04 0a	 movsx	 eax, BYTE PTR [edx+ecx]
  0008f	85 c0		 test	 eax, eax
  00091	74 16		 je	 SHORT $LN2@AddSymbols

; 1613 :     SearchStr+=strlen(SearchStr)+1;

  00093	8b 45 dc	 mov	 eax, DWORD PTR _SearchStr$[ebp]
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 _strlen
  0009c	83 c4 04	 add	 esp, 4
  0009f	8b 4d dc	 mov	 ecx, DWORD PTR _SearchStr$[ebp]
  000a2	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  000a6	89 55 dc	 mov	 DWORD PTR _SearchStr$[ebp], edx
$LN2@AddSymbols:

; 1614 :   }
; 1615 :   while (SearchStr[0]!=0) {

  000a9	b8 01 00 00 00	 mov	 eax, 1
  000ae	6b c8 00	 imul	 ecx, eax, 0
  000b1	8b 55 dc	 mov	 edx, DWORD PTR _SearchStr$[ebp]
  000b4	0f be 04 0a	 movsx	 eax, BYTE PTR [edx+ecx]
  000b8	85 c0		 test	 eax, eax
  000ba	0f 84 02 01 00
	00		 je	 $LN3@AddSymbols

; 1616 :     if (FileName[0]!=0) {

  000c0	b8 01 00 00 00	 mov	 eax, 1
  000c5	6b c8 00	 imul	 ecx, eax, 0
  000c8	8b 55 e8	 mov	 edx, DWORD PTR _FileName$[ebp]
  000cb	0f be 04 0a	 movsx	 eax, BYTE PTR [edx+ecx]
  000cf	85 c0		 test	 eax, eax
  000d1	74 1e		 je	 SHORT $LN8@AddSymbols

; 1617 :       sprintf(FileName2,"%s\\%s",Dir,FileName);

  000d3	8b 45 e8	 mov	 eax, DWORD PTR _FileName$[ebp]
  000d6	50		 push	 eax
  000d7	8b 4d f4	 mov	 ecx, DWORD PTR _Dir$[ebp]
  000da	51		 push	 ecx
  000db	68 00 00 00 00	 push	 OFFSET ??_C@_05BMGBEOOC@?$CFs?2?$CFs?$AA@
  000e0	8d 95 bc fd ff
	ff		 lea	 edx, DWORD PTR _FileName2$[ebp]
  000e6	52		 push	 edx
  000e7	e8 00 00 00 00	 call	 _sprintf
  000ec	83 c4 10	 add	 esp, 16			; 00000010H

; 1618 :     } else {

  000ef	eb 18		 jmp	 SHORT $LN9@AddSymbols
$LN8@AddSymbols:

; 1619 :       sprintf(FileName2,"%s",Dir);

  000f1	8b 45 f4	 mov	 eax, DWORD PTR _Dir$[ebp]
  000f4	50		 push	 eax
  000f5	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
  000fa	8d 8d bc fd ff
	ff		 lea	 ecx, DWORD PTR _FileName2$[ebp]
  00100	51		 push	 ecx
  00101	e8 00 00 00 00	 call	 _sprintf
  00106	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN9@AddSymbols:

; 1620 :     }
; 1621 :     if (!Stop) {

  00109	83 bd a8 fb ff
	ff 00		 cmp	 DWORD PTR _Stop$[ebp], 0
  00110	75 6a		 jne	 SHORT $LN10@AddSymbols

; 1622 : //      MessageBoxUTF8(LIBMANWindow,FileName2,"Add symbol",MB_APPLMODAL|MB_OK);
; 1623 :       if (mode==0) {

  00112	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  00116	75 1a		 jne	 SHORT $LN11@AddSymbols

; 1624 :         res=AddSymbolToLibrary(FileName2,ListNr,1);

  00118	6a 01		 push	 1
  0011a	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  0011d	50		 push	 eax
  0011e	8d 8d bc fd ff
	ff		 lea	 ecx, DWORD PTR _FileName2$[ebp]
  00124	51		 push	 ecx
  00125	e8 00 00 00 00	 call	 _AddSymbolToLibrary
  0012a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0012d	89 45 d0	 mov	 DWORD PTR _res$[ebp], eax

; 1625 :       } else {

  00130	eb 18		 jmp	 SHORT $LN12@AddSymbols
$LN11@AddSymbols:

; 1626 :         res=AddSymbolToLibrary(FileName2,ListNr,4+1);

  00132	6a 05		 push	 5
  00134	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  00137	50		 push	 eax
  00138	8d 8d bc fd ff
	ff		 lea	 ecx, DWORD PTR _FileName2$[ebp]
  0013e	51		 push	 ecx
  0013f	e8 00 00 00 00	 call	 _AddSymbolToLibrary
  00144	83 c4 0c	 add	 esp, 12			; 0000000cH
  00147	89 45 d0	 mov	 DWORD PTR _res$[ebp], eax
$LN12@AddSymbols:

; 1627 :       }
; 1628 : #if 0
; 1629 :       sprintf(str,"%d",res);
; 1630 :       MessageBoxUTF8(LIBMANWindow,str,"result",MB_APPLMODAL|MB_OK);
; 1631 : #endif
; 1632 :       switch (res) {

  0014a	8b 45 d0	 mov	 eax, DWORD PTR _res$[ebp]
  0014d	89 85 60 f9 ff
	ff		 mov	 DWORD PTR tv137[ebp], eax
  00153	83 bd 60 f9 ff
	ff ec		 cmp	 DWORD PTR tv137[ebp], -20 ; ffffffecH
  0015a	74 16		 je	 SHORT $LN14@AddSymbols
  0015c	83 bd 60 f9 ff
	ff 00		 cmp	 DWORD PTR tv137[ebp], 0
  00163	74 02		 je	 SHORT $LN13@AddSymbols
  00165	eb 15		 jmp	 SHORT $LN10@AddSymbols
$LN13@AddSymbols:

; 1633 :         case 0:
; 1634 :           count++;

  00167	8b 45 c4	 mov	 eax, DWORD PTR _count$[ebp]
  0016a	83 c0 01	 add	 eax, 1
  0016d	89 45 c4	 mov	 DWORD PTR _count$[ebp], eax

; 1635 :           break;

  00170	eb 0a		 jmp	 SHORT $LN10@AddSymbols
$LN14@AddSymbols:

; 1636 :         case -20:
; 1637 :           Stop=1;

  00172	c7 85 a8 fb ff
	ff 01 00 00 00	 mov	 DWORD PTR _Stop$[ebp], 1
$LN10@AddSymbols:

; 1638 :           break;
; 1639 :       }
; 1640 :     }
; 1641 :     if (mode==1) {

  0017c	83 7d 0c 01	 cmp	 DWORD PTR _mode$[ebp], 1
  00180	75 0f		 jne	 SHORT $LN15@AddSymbols

; 1642 :       DeleteFileUTF8(FileName2);

  00182	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _FileName2$[ebp]
  00188	50		 push	 eax
  00189	e8 00 00 00 00	 call	 _DeleteFileUTF8
  0018e	83 c4 04	 add	 esp, 4
$LN15@AddSymbols:

; 1643 :     }
; 1644 :     FileName+=strlen(FileName)+1;

  00191	8b 45 e8	 mov	 eax, DWORD PTR _FileName$[ebp]
  00194	50		 push	 eax
  00195	e8 00 00 00 00	 call	 _strlen
  0019a	83 c4 04	 add	 esp, 4
  0019d	8b 4d e8	 mov	 ecx, DWORD PTR _FileName$[ebp]
  001a0	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  001a4	89 55 e8	 mov	 DWORD PTR _FileName$[ebp], edx

; 1645 :     SearchStr+=strlen(SearchStr)+1;

  001a7	8b 45 dc	 mov	 eax, DWORD PTR _SearchStr$[ebp]
  001aa	50		 push	 eax
  001ab	e8 00 00 00 00	 call	 _strlen
  001b0	83 c4 04	 add	 esp, 4
  001b3	8b 4d dc	 mov	 ecx, DWORD PTR _SearchStr$[ebp]
  001b6	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  001ba	89 55 dc	 mov	 DWORD PTR _SearchStr$[ebp], edx

; 1646 :   }

  001bd	e9 e7 fe ff ff	 jmp	 $LN2@AddSymbols
$LN3@AddSymbols:

; 1647 :   if (mode==0) {

  001c2	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  001c6	0f 85 9b 00 00
	00		 jne	 $LN16@AddSymbols

; 1648 :     if (count>0) {

  001cc	83 7d c4 00	 cmp	 DWORD PTR _count$[ebp], 0
  001d0	0f 8e 91 00 00
	00		 jle	 $LN16@AddSymbols

; 1649 :       if (LibraryMode==0) {

  001d6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  001dd	75 31		 jne	 SHORT $LN18@AddSymbols

; 1650 :         sprintf(str2,SC(62,"%d symbols added/replaced for library %s"),count,LibraryFile[ListNr]);

  001df	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  001e2	c1 e0 09	 shl	 eax, 9
  001e5	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  001ea	50		 push	 eax
  001eb	8b 4d c4	 mov	 ecx, DWORD PTR _count$[ebp]
  001ee	51		 push	 ecx
  001ef	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@PHNPFLAE@?$CFd?5symbols?5added?1replaced?5for?5li@
  001f4	6a 3e		 push	 62			; 0000003eH
  001f6	e8 00 00 00 00	 call	 _StringConvert
  001fb	83 c4 08	 add	 esp, 8
  001fe	50		 push	 eax
  001ff	8d 95 b4 fb ff
	ff		 lea	 edx, DWORD PTR _str2$[ebp]
  00205	52		 push	 edx
  00206	e8 00 00 00 00	 call	 _sprintf
  0020b	83 c4 10	 add	 esp, 16			; 00000010H

; 1651 :       } else {

  0020e	eb 2f		 jmp	 SHORT $LN19@AddSymbols
$LN18@AddSymbols:

; 1652 :         sprintf(str2,SC(63,"%d geometries added/replaced for library %s"),count,LibraryFile[ListNr]);

  00210	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  00213	c1 e0 09	 shl	 eax, 9
  00216	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  0021b	50		 push	 eax
  0021c	8b 4d c4	 mov	 ecx, DWORD PTR _count$[ebp]
  0021f	51		 push	 ecx
  00220	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@EJCPCEL@?$CFd?5geometries?5added?1replaced?5for@
  00225	6a 3f		 push	 63			; 0000003fH
  00227	e8 00 00 00 00	 call	 _StringConvert
  0022c	83 c4 08	 add	 esp, 8
  0022f	50		 push	 eax
  00230	8d 95 b4 fb ff
	ff		 lea	 edx, DWORD PTR _str2$[ebp]
  00236	52		 push	 edx
  00237	e8 00 00 00 00	 call	 _sprintf
  0023c	83 c4 10	 add	 esp, 16			; 00000010H
$LN19@AddSymbols:

; 1653 :       }
; 1654 :       MessageBoxUTF8(LIBMANWindow,str2,SC(60,"Message"),MB_OK);

  0023f	6a 00		 push	 0
  00241	68 00 00 00 00	 push	 OFFSET ??_C@_07BEIHKDLJ@Message?$AA@
  00246	6a 3c		 push	 60			; 0000003cH
  00248	e8 00 00 00 00	 call	 _StringConvert
  0024d	83 c4 08	 add	 esp, 8
  00250	50		 push	 eax
  00251	8d 85 b4 fb ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  00257	50		 push	 eax
  00258	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  0025e	51		 push	 ecx
  0025f	e8 00 00 00 00	 call	 _MessageBoxUTF8
  00264	83 c4 10	 add	 esp, 16			; 00000010H
$LN16@AddSymbols:

; 1655 :     }
; 1656 :   }
; 1657 :   return 0;

  00267	33 c0		 xor	 eax, eax
$LN1@AddSymbols:

; 1658 : }

  00269	52		 push	 edx
  0026a	8b cd		 mov	 ecx, ebp
  0026c	50		 push	 eax
  0026d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN24@AddSymbols
  00273	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00278	58		 pop	 eax
  00279	5a		 pop	 edx
  0027a	5f		 pop	 edi
  0027b	5e		 pop	 esi
  0027c	5b		 pop	 ebx
  0027d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00280	33 cd		 xor	 ecx, ebp
  00282	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00287	81 c4 a0 06 00
	00		 add	 esp, 1696		; 000006a0H
  0028d	3b ec		 cmp	 ebp, esp
  0028f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00294	8b e5		 mov	 esp, ebp
  00296	5d		 pop	 ebp
  00297	c3		 ret	 0
$LN24@AddSymbols:
  00298	02 00 00 00	 DD	 2
  0029c	00 00 00 00	 DD	 $LN23@AddSymbols
$LN23@AddSymbols:
  002a0	bc fd ff ff	 DD	 -580			; fffffdbcH
  002a4	00 02 00 00	 DD	 512			; 00000200H
  002a8	00 00 00 00	 DD	 $LN21@AddSymbols
  002ac	b4 fb ff ff	 DD	 -1100			; fffffbb4H
  002b0	00 02 00 00	 DD	 512			; 00000200H
  002b4	00 00 00 00	 DD	 $LN22@AddSymbols
$LN22@AddSymbols:
  002b8	73		 DB	 115			; 00000073H
  002b9	74		 DB	 116			; 00000074H
  002ba	72		 DB	 114			; 00000072H
  002bb	32		 DB	 50			; 00000032H
  002bc	00		 DB	 0
$LN21@AddSymbols:
  002bd	46		 DB	 70			; 00000046H
  002be	69		 DB	 105			; 00000069H
  002bf	6c		 DB	 108			; 0000006cH
  002c0	65		 DB	 101			; 00000065H
  002c1	4e		 DB	 78			; 0000004eH
  002c2	61		 DB	 97			; 00000061H
  002c3	6d		 DB	 109			; 0000006dH
  002c4	65		 DB	 101			; 00000065H
  002c5	32		 DB	 50			; 00000032H
  002c6	00		 DB	 0
_AddSymbols ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _ExportSymbols
_TEXT	SEGMENT
tv226 = -3868						; size = 4
_ExportDir2$ = -2708					; size = 512
_SymbolFile$ = -2188					; size = 512
_str3$ = -1668						; size = 512
_str2$ = -1148						; size = 512
_str$ = -628						; size = 512
_res2$ = -108						; size = 4
_result$ = -96						; size = 4
_fp2$ = -84						; size = 4
_fp$ = -72						; size = 4
_length$ = -60						; size = 4
_count$ = -48						; size = 4
_cnt2$ = -36						; size = 4
_cnt$ = -24						; size = 4
_res$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_ListNr$ = 8						; size = 4
_mode$ = 12						; size = 4
_ExportSymbols PROC					; COMDAT

; 1504 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 1c 0f 00
	00		 sub	 esp, 3868		; 00000f1cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd e4 f0 ff
	ff		 lea	 edi, DWORD PTR [ebp-3868]
  00012	b9 c7 03 00 00	 mov	 ecx, 967		; 000003c7H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1505 :   int32  res,cnt,cnt2,count,length,fp,fp2,result,res2;
; 1506 :   char   str[MAX_LENGTH_STRING],str2[MAX_LENGTH_STRING],str3[MAX_LENGTH_STRING],
; 1507 :          SymbolFile[MAX_LENGTH_STRING],ExportDir2[MAX_LENGTH_STRING];
; 1508 : 
; 1509 :   if (ListNr==0) {

  00028	83 7d 08 00	 cmp	 DWORD PTR _ListNr$[ebp], 0
  0002c	75 2b		 jne	 SHORT $LN9@ExportSymb

; 1510 :     SymbolsSelected=SendMessage(ListWindow1,LB_GETSELITEMS,MAX_NR_LIB_SYMBOLS,

  0002e	8b f4		 mov	 esi, esp
  00030	68 00 00 00 00	 push	 OFFSET _LibIndex
  00035	68 00 10 00 00	 push	 4096			; 00001000H
  0003a	68 91 01 00 00	 push	 401			; 00000191H
  0003f	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow1
  00044	50		 push	 eax
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0004b	3b f4		 cmp	 esi, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	a3 00 00 00 00	 mov	 DWORD PTR _SymbolsSelected, eax

; 1511 :                                 (LPARAM)(LPINT)&LibIndex);
; 1512 :   } else {

  00057	eb 29		 jmp	 SHORT $LN10@ExportSymb
$LN9@ExportSymb:

; 1513 :     SymbolsSelected=SendMessage(ListWindow2,LB_GETSELITEMS,MAX_NR_LIB_SYMBOLS,

  00059	8b f4		 mov	 esi, esp
  0005b	68 00 00 00 00	 push	 OFFSET _LibIndex
  00060	68 00 10 00 00	 push	 4096			; 00001000H
  00065	68 91 01 00 00	 push	 401			; 00000191H
  0006a	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow2
  0006f	50		 push	 eax
  00070	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00076	3b f4		 cmp	 esi, esp
  00078	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007d	a3 00 00 00 00	 mov	 DWORD PTR _SymbolsSelected, eax
$LN10@ExportSymb:

; 1514 :                                 (LPARAM)(LPINT)&LibIndex);
; 1515 :   }
; 1516 :   if (SymbolsSelected<1) return -1;

  00082	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR _SymbolsSelected, 1
  00089	7d 08		 jge	 SHORT $LN11@ExportSymb
  0008b	83 c8 ff	 or	 eax, -1
  0008e	e9 e4 03 00 00	 jmp	 $LN1@ExportSymb
$LN11@ExportSymb:

; 1517 : 
; 1518 :   if (mode==1) {

  00093	83 7d 0c 01	 cmp	 DWORD PTR _mode$[ebp], 1
  00097	75 44		 jne	 SHORT $LN12@ExportSymb

; 1519 :     TempMemoryPos=0;

  00099	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _TempMemoryPos, 0

; 1520 :     TempMem[0]=0;

  000a3	b8 01 00 00 00	 mov	 eax, 1
  000a8	6b c8 00	 imul	 ecx, eax, 0
  000ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _TempMem
  000b1	c6 04 0a 00	 mov	 BYTE PTR [edx+ecx], 0

; 1521 :     TempMem[1]=0;

  000b5	b8 01 00 00 00	 mov	 eax, 1
  000ba	c1 e0 00	 shl	 eax, 0
  000bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _TempMem
  000c3	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1522 :     strcpy(ExportDir2,TempPath);

  000c7	68 00 00 00 00	 push	 OFFSET _TempPath
  000cc	8d 85 6c f5 ff
	ff		 lea	 eax, DWORD PTR _ExportDir2$[ebp]
  000d2	50		 push	 eax
  000d3	e8 00 00 00 00	 call	 _strcpy
  000d8	83 c4 08	 add	 esp, 8

; 1523 :   } else {

  000db	eb 4d		 jmp	 SHORT $LN13@ExportSymb
$LN12@ExportSymb:

; 1524 :     res=DialogBox(LIBMANClass.hInstance,MAKEINTRESOURCE(IDD_DIALOG_GET_DIR), LIBMANWindow, (DLGPROC)GetDirDialog2);

  000dd	8b f4		 mov	 esi, esp
  000df	6a 00		 push	 0
  000e1	68 00 00 00 00	 push	 OFFSET _GetDirDialog2@16
  000e6	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  000eb	50		 push	 eax
  000ec	68 d2 07 00 00	 push	 2002			; 000007d2H
  000f1	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANClass+16
  000f7	51		 push	 ecx
  000f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DialogBoxParamA@20
  000fe	3b f4		 cmp	 esi, esp
  00100	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00105	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 1525 :     if (res==2) return -1;

  00108	83 7d f4 02	 cmp	 DWORD PTR _res$[ebp], 2
  0010c	75 08		 jne	 SHORT $LN14@ExportSymb
  0010e	83 c8 ff	 or	 eax, -1
  00111	e9 61 03 00 00	 jmp	 $LN1@ExportSymb
$LN14@ExportSymb:

; 1526 :     strcpy(ExportDir2,ExportDir);

  00116	68 00 00 00 00	 push	 OFFSET _ExportDir
  0011b	8d 85 6c f5 ff
	ff		 lea	 eax, DWORD PTR _ExportDir2$[ebp]
  00121	50		 push	 eax
  00122	e8 00 00 00 00	 call	 _strcpy
  00127	83 c4 08	 add	 esp, 8
$LN13@ExportSymb:

; 1527 :   }
; 1528 : 
; 1529 :   count=0;

  0012a	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 1530 :   for (cnt=0;cnt<SymbolsSelected;cnt++) {

  00131	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _cnt$[ebp], 0
  00138	eb 09		 jmp	 SHORT $LN4@ExportSymb
$LN2@ExportSymb:
  0013a	8b 45 e8	 mov	 eax, DWORD PTR _cnt$[ebp]
  0013d	83 c0 01	 add	 eax, 1
  00140	89 45 e8	 mov	 DWORD PTR _cnt$[ebp], eax
$LN4@ExportSymb:
  00143	8b 45 e8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00146	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR _SymbolsSelected
  0014c	0f 8d 22 03 00
	00		 jge	 $LN3@ExportSymb

; 1531 :     if (ListNr==0) {

  00152	83 7d 08 00	 cmp	 DWORD PTR _ListNr$[ebp], 0
  00156	75 27		 jne	 SHORT $LN15@ExportSymb

; 1532 :       SendMessageUTF8(ListWindow1,LB_GETTEXT,LibIndex[cnt],(LPARAM)str3);

  00158	8d 85 7c f9 ff
	ff		 lea	 eax, DWORD PTR _str3$[ebp]
  0015e	50		 push	 eax
  0015f	8b 4d e8	 mov	 ecx, DWORD PTR _cnt$[ebp]
  00162	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR _LibIndex[ecx*4]
  00169	52		 push	 edx
  0016a	68 89 01 00 00	 push	 393			; 00000189H
  0016f	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow1
  00174	50		 push	 eax
  00175	e8 00 00 00 00	 call	 _SendMessageUTF8
  0017a	83 c4 10	 add	 esp, 16			; 00000010H

; 1533 :     } else {

  0017d	eb 25		 jmp	 SHORT $LN16@ExportSymb
$LN15@ExportSymb:

; 1534 :       SendMessageUTF8(ListWindow2,LB_GETTEXT,LibIndex[cnt],(LPARAM)str3);

  0017f	8d 85 7c f9 ff
	ff		 lea	 eax, DWORD PTR _str3$[ebp]
  00185	50		 push	 eax
  00186	8b 4d e8	 mov	 ecx, DWORD PTR _cnt$[ebp]
  00189	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR _LibIndex[ecx*4]
  00190	52		 push	 edx
  00191	68 89 01 00 00	 push	 393			; 00000189H
  00196	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow2
  0019b	50		 push	 eax
  0019c	e8 00 00 00 00	 call	 _SendMessageUTF8
  001a1	83 c4 10	 add	 esp, 16			; 00000010H
$LN16@ExportSymb:

; 1535 :     }
; 1536 :     cnt2=0;

  001a4	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _cnt2$[ebp], 0
$LN5@ExportSymb:

; 1537 :     while ((cnt2<Lib[ListNr].NrLibEntries)
; 1538 :           &&

  001ab	6b 45 08 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  001af	8b 4d dc	 mov	 ecx, DWORD PTR _cnt2$[ebp]
  001b2	3b 88 48 00 00
	00		 cmp	 ecx, DWORD PTR _Lib[eax+72]
  001b8	7d 31		 jge	 SHORT $LN6@ExportSymb
  001ba	8d 85 7c f9 ff
	ff		 lea	 eax, DWORD PTR _str3$[ebp]
  001c0	50		 push	 eax
  001c1	69 4d 08 00 80
	02 00		 imul	 ecx, DWORD PTR _ListNr$[ebp], 163840
  001c8	6b 55 dc 28	 imul	 edx, DWORD PTR _cnt2$[ebp], 40
  001cc	8d 84 11 00 00
	00 00		 lea	 eax, DWORD PTR _LibNames[ecx+edx]
  001d3	50		 push	 eax
  001d4	e8 00 00 00 00	 call	 _stricmp
  001d9	83 c4 08	 add	 esp, 8
  001dc	85 c0		 test	 eax, eax
  001de	74 0b		 je	 SHORT $LN6@ExportSymb

; 1539 :           (stricmp(LibNames[ListNr][cnt2].Text,str3)!=0)) cnt2++;

  001e0	8b 45 dc	 mov	 eax, DWORD PTR _cnt2$[ebp]
  001e3	83 c0 01	 add	 eax, 1
  001e6	89 45 dc	 mov	 DWORD PTR _cnt2$[ebp], eax
  001e9	eb c0		 jmp	 SHORT $LN5@ExportSymb
$LN6@ExportSymb:

; 1540 :     if (cnt2<Lib[ListNr].NrLibEntries) {

  001eb	6b 45 08 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  001ef	8b 4d dc	 mov	 ecx, DWORD PTR _cnt2$[ebp]
  001f2	3b 88 48 00 00
	00		 cmp	 ecx, DWORD PTR _Lib[eax+72]
  001f8	0f 8d 71 02 00
	00		 jge	 $LN17@ExportSymb

; 1541 :       length=LibNames[ListNr][cnt2].Length;

  001fe	69 45 08 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  00205	6b 4d dc 28	 imul	 ecx, DWORD PTR _cnt2$[ebp], 40
  00209	8b 94 08 24 00
	00 00		 mov	 edx, DWORD PTR _LibNames[eax+ecx+36]
  00210	89 55 c4	 mov	 DWORD PTR _length$[ebp], edx

; 1542 :       if (LibraryMode==0) {

  00213	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  0021a	75 40		 jne	 SHORT $LN18@ExportSymb

; 1543 :         if (mode==0) {

  0021c	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  00220	75 1d		 jne	 SHORT $LN20@ExportSymb

; 1544 :           sprintf(SymbolFile,"%s.sym",str3);

  00222	8d 85 7c f9 ff
	ff		 lea	 eax, DWORD PTR _str3$[ebp]
  00228	50		 push	 eax
  00229	68 00 00 00 00	 push	 OFFSET ??_C@_06POKIJBPH@?$CFs?4sym?$AA@
  0022e	8d 8d 74 f7 ff
	ff		 lea	 ecx, DWORD PTR _SymbolFile$[ebp]
  00234	51		 push	 ecx
  00235	e8 00 00 00 00	 call	 _sprintf
  0023a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1545 :         } else {

  0023d	eb 1b		 jmp	 SHORT $LN21@ExportSymb
$LN20@ExportSymb:

; 1546 :           sprintf(SymbolFile,"%s__#.sym",str3);

  0023f	8d 85 7c f9 ff
	ff		 lea	 eax, DWORD PTR _str3$[ebp]
  00245	50		 push	 eax
  00246	68 00 00 00 00	 push	 OFFSET ??_C@_09CIIEHHID@?$CFs__?$CD?4sym?$AA@
  0024b	8d 8d 74 f7 ff
	ff		 lea	 ecx, DWORD PTR _SymbolFile$[ebp]
  00251	51		 push	 ecx
  00252	e8 00 00 00 00	 call	 _sprintf
  00257	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN21@ExportSymb:

; 1547 :         }
; 1548 :       } else {

  0025a	eb 3e		 jmp	 SHORT $LN19@ExportSymb
$LN18@ExportSymb:

; 1549 :         if (mode==0) {

  0025c	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  00260	75 1d		 jne	 SHORT $LN22@ExportSymb

; 1550 :           sprintf(SymbolFile,"%s.shp",str3);

  00262	8d 85 7c f9 ff
	ff		 lea	 eax, DWORD PTR _str3$[ebp]
  00268	50		 push	 eax
  00269	68 00 00 00 00	 push	 OFFSET ??_C@_06BMCADEKM@?$CFs?4shp?$AA@
  0026e	8d 8d 74 f7 ff
	ff		 lea	 ecx, DWORD PTR _SymbolFile$[ebp]
  00274	51		 push	 ecx
  00275	e8 00 00 00 00	 call	 _sprintf
  0027a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1551 :         } else {

  0027d	eb 1b		 jmp	 SHORT $LN19@ExportSymb
$LN22@ExportSymb:

; 1552 :           sprintf(SymbolFile,"%s__#.shp",str3);

  0027f	8d 85 7c f9 ff
	ff		 lea	 eax, DWORD PTR _str3$[ebp]
  00285	50		 push	 eax
  00286	68 00 00 00 00	 push	 OFFSET ??_C@_09MKAMNCNI@?$CFs__?$CD?4shp?$AA@
  0028b	8d 8d 74 f7 ff
	ff		 lea	 ecx, DWORD PTR _SymbolFile$[ebp]
  00291	51		 push	 ecx
  00292	e8 00 00 00 00	 call	 _sprintf
  00297	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN19@ExportSymb:

; 1553 :         }
; 1554 :       }
; 1555 :       sprintf(str,"%s\\%s",ExportDir2,SymbolFile);

  0029a	8d 85 74 f7 ff
	ff		 lea	 eax, DWORD PTR _SymbolFile$[ebp]
  002a0	50		 push	 eax
  002a1	8d 8d 6c f5 ff
	ff		 lea	 ecx, DWORD PTR _ExportDir2$[ebp]
  002a7	51		 push	 ecx
  002a8	68 00 00 00 00	 push	 OFFSET ??_C@_05BMGBEOOC@?$CFs?2?$CFs?$AA@
  002ad	8d 95 8c fd ff
	ff		 lea	 edx, DWORD PTR _str$[ebp]
  002b3	52		 push	 edx
  002b4	e8 00 00 00 00	 call	 _sprintf
  002b9	83 c4 10	 add	 esp, 16			; 00000010H

; 1556 :       sprintf(str2,SC(26,"File %s\\%s exists, overwrite ?"),ExportDir2,SymbolFile);

  002bc	8d 85 74 f7 ff
	ff		 lea	 eax, DWORD PTR _SymbolFile$[ebp]
  002c2	50		 push	 eax
  002c3	8d 8d 6c f5 ff
	ff		 lea	 ecx, DWORD PTR _ExportDir2$[ebp]
  002c9	51		 push	 ecx
  002ca	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@MDKINCIN@File?5?$CFs?2?$CFs?5exists?0?5overwrite?5?$DP?$AA@
  002cf	6a 1a		 push	 26			; 0000001aH
  002d1	e8 00 00 00 00	 call	 _StringConvert
  002d6	83 c4 08	 add	 esp, 8
  002d9	50		 push	 eax
  002da	8d 95 84 fb ff
	ff		 lea	 edx, DWORD PTR _str2$[ebp]
  002e0	52		 push	 edx
  002e1	e8 00 00 00 00	 call	 _sprintf
  002e6	83 c4 10	 add	 esp, 16			; 00000010H

; 1557 :       fp=-1;

  002e9	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR _fp$[ebp], -1

; 1558 :       if ((mode==1)
; 1559 :          ||
; 1560 :          (FileExistsUTF8(str)!=0)
; 1561 :          ||

  002f0	83 7d 0c 01	 cmp	 DWORD PTR _mode$[ebp], 1
  002f4	74 44		 je	 SHORT $LN25@ExportSymb
  002f6	8d 85 8c fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  002fc	50		 push	 eax
  002fd	e8 00 00 00 00	 call	 _FileExistsUTF8
  00302	83 c4 04	 add	 esp, 4
  00305	85 c0		 test	 eax, eax
  00307	75 31		 jne	 SHORT $LN25@ExportSymb
  00309	6a 01		 push	 1
  0030b	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00310	6a 09		 push	 9
  00312	e8 00 00 00 00	 call	 _StringConvert
  00317	83 c4 08	 add	 esp, 8
  0031a	50		 push	 eax
  0031b	8d 85 84 fb ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  00321	50		 push	 eax
  00322	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00328	51		 push	 ecx
  00329	e8 00 00 00 00	 call	 _MessageBoxUTF8
  0032e	83 c4 10	 add	 esp, 16			; 00000010H
  00331	83 f8 01	 cmp	 eax, 1
  00334	0f 85 2b 01 00
	00		 jne	 $LN24@ExportSymb
$LN25@ExportSymb:

; 1562 :          (MessageBoxUTF8(LIBMANWindow,str2,SC(9,"Error"),MB_OKCANCEL)==IDOK)) {
; 1563 :         if (mode==1) {

  0033a	83 7d 0c 01	 cmp	 DWORD PTR _mode$[ebp], 1
  0033e	75 24		 jne	 SHORT $LN26@ExportSymb

; 1564 :           if (count==0) {

  00340	83 7d d0 00	 cmp	 DWORD PTR _count$[ebp], 0
  00344	75 0f		 jne	 SHORT $LN27@ExportSymb

; 1565 :             CopyFileNameToTempMem(ExportDir2);

  00346	8d 85 6c f5 ff
	ff		 lea	 eax, DWORD PTR _ExportDir2$[ebp]
  0034c	50		 push	 eax
  0034d	e8 00 00 00 00	 call	 _CopyFileNameToTempMem
  00352	83 c4 04	 add	 esp, 4
$LN27@ExportSymb:

; 1566 :           }
; 1567 :           CopyFileNameToTempMem(SymbolFile);

  00355	8d 85 74 f7 ff
	ff		 lea	 eax, DWORD PTR _SymbolFile$[ebp]
  0035b	50		 push	 eax
  0035c	e8 00 00 00 00	 call	 _CopyFileNameToTempMem
  00361	83 c4 04	 add	 esp, 4
$LN26@ExportSymb:

; 1568 :         }
; 1569 :         if ((fp=CheckForWritingAndOpenUTF8(str,length,LIBMANWindow))>0) {

  00364	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  00369	50		 push	 eax
  0036a	8b 4d c4	 mov	 ecx, DWORD PTR _length$[ebp]
  0036d	51		 push	 ecx
  0036e	8d 95 8c fd ff
	ff		 lea	 edx, DWORD PTR _str$[ebp]
  00374	52		 push	 edx
  00375	e8 00 00 00 00	 call	 _CheckForWritingAndOpenUTF8
  0037a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0037d	89 45 b8	 mov	 DWORD PTR _fp$[ebp], eax
  00380	83 7d b8 00	 cmp	 DWORD PTR _fp$[ebp], 0
  00384	0f 8e db 00 00
	00		 jle	 $LN24@ExportSymb

; 1570 :           if ((fp2=FileOpenReadOnlyUTF8(LibraryFile[ListNr]))<0) {

  0038a	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  0038d	c1 e0 09	 shl	 eax, 9
  00390	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  00395	50		 push	 eax
  00396	e8 00 00 00 00	 call	 _FileOpenReadOnlyUTF8
  0039b	83 c4 04	 add	 esp, 4
  0039e	89 45 ac	 mov	 DWORD PTR _fp2$[ebp], eax
  003a1	83 7d ac 00	 cmp	 DWORD PTR _fp2$[ebp], 0
  003a5	7d 08		 jge	 SHORT $LN29@ExportSymb

; 1571 :             return -1;

  003a7	83 c8 ff	 or	 eax, -1
  003aa	e9 c8 00 00 00	 jmp	 $LN1@ExportSymb
$LN29@ExportSymb:

; 1572 :           }
; 1573 :           FileSeek(fp2,LibNames[ListNr][cnt2].Pos);

  003af	69 45 08 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  003b6	6b 4d dc 28	 imul	 ecx, DWORD PTR _cnt2$[ebp], 40
  003ba	8b 94 08 20 00
	00 00		 mov	 edx, DWORD PTR _LibNames[eax+ecx+32]
  003c1	52		 push	 edx
  003c2	8b 45 ac	 mov	 eax, DWORD PTR _fp2$[ebp]
  003c5	50		 push	 eax
  003c6	e8 00 00 00 00	 call	 _FileSeek
  003cb	83 c4 08	 add	 esp, 8
$LN7@ExportSymb:

; 1574 :           while (length>0) {

  003ce	83 7d c4 00	 cmp	 DWORD PTR _length$[ebp], 0
  003d2	7e 70		 jle	 SHORT $LN8@ExportSymb

; 1575 :             FileRead(fp2,Buf,min(length,BufSize),&result);

  003d4	81 7d c4 00 00
	04 00		 cmp	 DWORD PTR _length$[ebp], 262144 ; 00040000H
  003db	7d 0b		 jge	 SHORT $LN33@ExportSymb
  003dd	8b 45 c4	 mov	 eax, DWORD PTR _length$[ebp]
  003e0	89 85 e4 f0 ff
	ff		 mov	 DWORD PTR tv226[ebp], eax
  003e6	eb 0a		 jmp	 SHORT $LN34@ExportSymb
$LN33@ExportSymb:
  003e8	c7 85 e4 f0 ff
	ff 00 00 04 00	 mov	 DWORD PTR tv226[ebp], 262144 ; 00040000H
$LN34@ExportSymb:
  003f2	8d 4d a0	 lea	 ecx, DWORD PTR _result$[ebp]
  003f5	51		 push	 ecx
  003f6	8b 95 e4 f0 ff
	ff		 mov	 edx, DWORD PTR tv226[ebp]
  003fc	52		 push	 edx
  003fd	a1 00 00 00 00	 mov	 eax, DWORD PTR _Buf
  00402	50		 push	 eax
  00403	8b 4d ac	 mov	 ecx, DWORD PTR _fp2$[ebp]
  00406	51		 push	 ecx
  00407	e8 00 00 00 00	 call	 _FileRead
  0040c	83 c4 10	 add	 esp, 16			; 00000010H

; 1576 :             if (result>0) {

  0040f	83 7d a0 00	 cmp	 DWORD PTR _result$[ebp], 0
  00413	7e 26		 jle	 SHORT $LN30@ExportSymb

; 1577 :               FileWrite(fp,Buf,result,&res2);

  00415	8d 45 94	 lea	 eax, DWORD PTR _res2$[ebp]
  00418	50		 push	 eax
  00419	8b 4d a0	 mov	 ecx, DWORD PTR _result$[ebp]
  0041c	51		 push	 ecx
  0041d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _Buf
  00423	52		 push	 edx
  00424	8b 45 b8	 mov	 eax, DWORD PTR _fp$[ebp]
  00427	50		 push	 eax
  00428	e8 00 00 00 00	 call	 _FileWrite
  0042d	83 c4 10	 add	 esp, 16			; 00000010H

; 1578 :               length-=result;

  00430	8b 45 c4	 mov	 eax, DWORD PTR _length$[ebp]
  00433	2b 45 a0	 sub	 eax, DWORD PTR _result$[ebp]
  00436	89 45 c4	 mov	 DWORD PTR _length$[ebp], eax
  00439	eb 07		 jmp	 SHORT $LN31@ExportSymb
$LN30@ExportSymb:

; 1579 :             } else length=0;

  0043b	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _length$[ebp], 0
$LN31@ExportSymb:

; 1580 :           }

  00442	eb 8a		 jmp	 SHORT $LN7@ExportSymb
$LN8@ExportSymb:

; 1581 :           count++;

  00444	8b 45 d0	 mov	 eax, DWORD PTR _count$[ebp]
  00447	83 c0 01	 add	 eax, 1
  0044a	89 45 d0	 mov	 DWORD PTR _count$[ebp], eax

; 1582 :           FileClose(fp2);

  0044d	8b 45 ac	 mov	 eax, DWORD PTR _fp2$[ebp]
  00450	50		 push	 eax
  00451	e8 00 00 00 00	 call	 _FileClose
  00456	83 c4 04	 add	 esp, 4

; 1583 :           FileClose(fp);

  00459	8b 45 b8	 mov	 eax, DWORD PTR _fp$[ebp]
  0045c	50		 push	 eax
  0045d	e8 00 00 00 00	 call	 _FileClose
  00462	83 c4 04	 add	 esp, 4
$LN24@ExportSymb:

; 1584 :         }
; 1585 :       }
; 1586 :       ok=1;

  00465	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _ok, 1
$LN17@ExportSymb:

; 1587 :     }
; 1588 :   }

  0046f	e9 c6 fc ff ff	 jmp	 $LN2@ExportSymb
$LN3@ExportSymb:

; 1589 :   return count;

  00474	8b 45 d0	 mov	 eax, DWORD PTR _count$[ebp]
$LN1@ExportSymb:

; 1590 : }

  00477	52		 push	 edx
  00478	8b cd		 mov	 ecx, ebp
  0047a	50		 push	 eax
  0047b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN43@ExportSymb
  00481	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00486	58		 pop	 eax
  00487	5a		 pop	 edx
  00488	5f		 pop	 edi
  00489	5e		 pop	 esi
  0048a	5b		 pop	 ebx
  0048b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0048e	33 cd		 xor	 ecx, ebp
  00490	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00495	81 c4 1c 0f 00
	00		 add	 esp, 3868		; 00000f1cH
  0049b	3b ec		 cmp	 ebp, esp
  0049d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004a2	8b e5		 mov	 esp, ebp
  004a4	5d		 pop	 ebp
  004a5	c3		 ret	 0
  004a6	66 90		 npad	 2
$LN43@ExportSymb:
  004a8	07 00 00 00	 DD	 7
  004ac	00 00 00 00	 DD	 $LN42@ExportSymb
$LN42@ExportSymb:
  004b0	a0 ff ff ff	 DD	 -96			; ffffffa0H
  004b4	04 00 00 00	 DD	 4
  004b8	00 00 00 00	 DD	 $LN35@ExportSymb
  004bc	94 ff ff ff	 DD	 -108			; ffffff94H
  004c0	04 00 00 00	 DD	 4
  004c4	00 00 00 00	 DD	 $LN36@ExportSymb
  004c8	8c fd ff ff	 DD	 -628			; fffffd8cH
  004cc	00 02 00 00	 DD	 512			; 00000200H
  004d0	00 00 00 00	 DD	 $LN37@ExportSymb
  004d4	84 fb ff ff	 DD	 -1148			; fffffb84H
  004d8	00 02 00 00	 DD	 512			; 00000200H
  004dc	00 00 00 00	 DD	 $LN38@ExportSymb
  004e0	7c f9 ff ff	 DD	 -1668			; fffff97cH
  004e4	00 02 00 00	 DD	 512			; 00000200H
  004e8	00 00 00 00	 DD	 $LN39@ExportSymb
  004ec	74 f7 ff ff	 DD	 -2188			; fffff774H
  004f0	00 02 00 00	 DD	 512			; 00000200H
  004f4	00 00 00 00	 DD	 $LN40@ExportSymb
  004f8	6c f5 ff ff	 DD	 -2708			; fffff56cH
  004fc	00 02 00 00	 DD	 512			; 00000200H
  00500	00 00 00 00	 DD	 $LN41@ExportSymb
$LN41@ExportSymb:
  00504	45		 DB	 69			; 00000045H
  00505	78		 DB	 120			; 00000078H
  00506	70		 DB	 112			; 00000070H
  00507	6f		 DB	 111			; 0000006fH
  00508	72		 DB	 114			; 00000072H
  00509	74		 DB	 116			; 00000074H
  0050a	44		 DB	 68			; 00000044H
  0050b	69		 DB	 105			; 00000069H
  0050c	72		 DB	 114			; 00000072H
  0050d	32		 DB	 50			; 00000032H
  0050e	00		 DB	 0
$LN40@ExportSymb:
  0050f	53		 DB	 83			; 00000053H
  00510	79		 DB	 121			; 00000079H
  00511	6d		 DB	 109			; 0000006dH
  00512	62		 DB	 98			; 00000062H
  00513	6f		 DB	 111			; 0000006fH
  00514	6c		 DB	 108			; 0000006cH
  00515	46		 DB	 70			; 00000046H
  00516	69		 DB	 105			; 00000069H
  00517	6c		 DB	 108			; 0000006cH
  00518	65		 DB	 101			; 00000065H
  00519	00		 DB	 0
$LN39@ExportSymb:
  0051a	73		 DB	 115			; 00000073H
  0051b	74		 DB	 116			; 00000074H
  0051c	72		 DB	 114			; 00000072H
  0051d	33		 DB	 51			; 00000033H
  0051e	00		 DB	 0
$LN38@ExportSymb:
  0051f	73		 DB	 115			; 00000073H
  00520	74		 DB	 116			; 00000074H
  00521	72		 DB	 114			; 00000072H
  00522	32		 DB	 50			; 00000032H
  00523	00		 DB	 0
$LN37@ExportSymb:
  00524	73		 DB	 115			; 00000073H
  00525	74		 DB	 116			; 00000074H
  00526	72		 DB	 114			; 00000072H
  00527	00		 DB	 0
$LN36@ExportSymb:
  00528	72		 DB	 114			; 00000072H
  00529	65		 DB	 101			; 00000065H
  0052a	73		 DB	 115			; 00000073H
  0052b	32		 DB	 50			; 00000032H
  0052c	00		 DB	 0
$LN35@ExportSymb:
  0052d	72		 DB	 114			; 00000072H
  0052e	65		 DB	 101			; 00000065H
  0052f	73		 DB	 115			; 00000073H
  00530	75		 DB	 117			; 00000075H
  00531	6c		 DB	 108			; 0000006cH
  00532	74		 DB	 116			; 00000074H
  00533	00		 DB	 0
_ExportSymbols ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _DeleteSymbols
_TEXT	SEGMENT
tv207 = -1044						; size = 4
_Found$ = -652						; size = 4
_str$ = -640						; size = 512
_FilePos2$ = -120					; size = 4
_FilePos$ = -108					; size = 4
_res2$ = -96						; size = 4
_result$ = -84						; size = 4
_fp2$ = -72						; size = 4
_fp$ = -60						; size = 4
_count2$ = -48						; size = 4
_count$ = -36						; size = 4
_cnt2$ = -24						; size = 4
_cnt$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_ListNr$ = 8						; size = 4
_DeleteSymbols PROC					; COMDAT

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 04 00
	00		 sub	 esp, 1044		; 00000414H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd ec fb ff
	ff		 lea	 edi, DWORD PTR [ebp-1044]
  00012	b9 05 01 00 00	 mov	 ecx, 261		; 00000105H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1421 :   int32  cnt,cnt2,count,count2,fp,fp2,result,res2,FilePos,FilePos2;
; 1422 :   char   str[MAX_LENGTH_STRING];
; 1423 :   int32   Found=0;

  00028	c7 85 74 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _Found$[ebp], 0

; 1424 : 
; 1425 :   if (ListNr==0) {

  00032	83 7d 08 00	 cmp	 DWORD PTR _ListNr$[ebp], 0
  00036	75 2b		 jne	 SHORT $LN12@DeleteSymb

; 1426 :     SymbolsSelected=SendMessage(ListWindow1,LB_GETSELITEMS,MAX_NR_LIB_SYMBOLS+1,

  00038	8b f4		 mov	 esi, esp
  0003a	68 00 00 00 00	 push	 OFFSET _LibIndex
  0003f	68 01 10 00 00	 push	 4097			; 00001001H
  00044	68 91 01 00 00	 push	 401			; 00000191H
  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow1
  0004e	50		 push	 eax
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00055	3b f4		 cmp	 esi, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	a3 00 00 00 00	 mov	 DWORD PTR _SymbolsSelected, eax

; 1427 :                                 (LPARAM)(LPINT)&LibIndex);
; 1428 :   } else {

  00061	eb 29		 jmp	 SHORT $LN13@DeleteSymb
$LN12@DeleteSymb:

; 1429 :     SymbolsSelected=SendMessage(ListWindow2,LB_GETSELITEMS,MAX_NR_LIB_SYMBOLS+1,

  00063	8b f4		 mov	 esi, esp
  00065	68 00 00 00 00	 push	 OFFSET _LibIndex
  0006a	68 01 10 00 00	 push	 4097			; 00001001H
  0006f	68 91 01 00 00	 push	 401			; 00000191H
  00074	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow2
  00079	50		 push	 eax
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00080	3b f4		 cmp	 esi, esp
  00082	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00087	a3 00 00 00 00	 mov	 DWORD PTR _SymbolsSelected, eax
$LN13@DeleteSymb:

; 1430 :                                 (LPARAM)(LPINT)&LibIndex);
; 1431 :   }
; 1432 : 
; 1433 :   if (SymbolsSelected<1) return -1;

  0008c	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR _SymbolsSelected, 1
  00093	7d 08		 jge	 SHORT $LN14@DeleteSymb
  00095	83 c8 ff	 or	 eax, -1
  00098	e9 f6 03 00 00	 jmp	 $LN1@DeleteSymb
$LN14@DeleteSymb:

; 1434 :   MakeBackup(ListNr);

  0009d	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 _MakeBackup
  000a6	83 c4 04	 add	 esp, 4

; 1435 :   memset(&LibNamesDeleted,0,sizeof(LibNamesDeleted));

  000a9	68 00 10 00 00	 push	 4096			; 00001000H
  000ae	6a 00		 push	 0
  000b0	68 00 00 00 00	 push	 OFFSET _LibNamesDeleted
  000b5	e8 00 00 00 00	 call	 _memset
  000ba	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1436 :   for (cnt=SymbolsSelected-1;cnt>=0;cnt--) {

  000bd	a1 00 00 00 00	 mov	 eax, DWORD PTR _SymbolsSelected
  000c2	83 e8 01	 sub	 eax, 1
  000c5	89 45 f4	 mov	 DWORD PTR _cnt$[ebp], eax
  000c8	eb 09		 jmp	 SHORT $LN4@DeleteSymb
$LN2@DeleteSymb:
  000ca	8b 45 f4	 mov	 eax, DWORD PTR _cnt$[ebp]
  000cd	83 e8 01	 sub	 eax, 1
  000d0	89 45 f4	 mov	 DWORD PTR _cnt$[ebp], eax
$LN4@DeleteSymb:
  000d3	83 7d f4 00	 cmp	 DWORD PTR _cnt$[ebp], 0
  000d7	0f 8c d6 00 00
	00		 jl	 $LN3@DeleteSymb

; 1437 :     if (ListNr==0) {

  000dd	83 7d 08 00	 cmp	 DWORD PTR _ListNr$[ebp], 0
  000e1	75 27		 jne	 SHORT $LN15@DeleteSymb

; 1438 :       SendMessageUTF8(ListWindow1,LB_GETTEXT,LibIndex[cnt],(LPARAM)str);

  000e3	8d 85 80 fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  000e9	50		 push	 eax
  000ea	8b 4d f4	 mov	 ecx, DWORD PTR _cnt$[ebp]
  000ed	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR _LibIndex[ecx*4]
  000f4	52		 push	 edx
  000f5	68 89 01 00 00	 push	 393			; 00000189H
  000fa	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow1
  000ff	50		 push	 eax
  00100	e8 00 00 00 00	 call	 _SendMessageUTF8
  00105	83 c4 10	 add	 esp, 16			; 00000010H

; 1439 :     } else {

  00108	eb 25		 jmp	 SHORT $LN16@DeleteSymb
$LN15@DeleteSymb:

; 1440 :       SendMessageUTF8(ListWindow2,LB_GETTEXT,LibIndex[cnt],(LPARAM)str);

  0010a	8d 85 80 fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  00110	50		 push	 eax
  00111	8b 4d f4	 mov	 ecx, DWORD PTR _cnt$[ebp]
  00114	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR _LibIndex[ecx*4]
  0011b	52		 push	 edx
  0011c	68 89 01 00 00	 push	 393			; 00000189H
  00121	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow2
  00126	50		 push	 eax
  00127	e8 00 00 00 00	 call	 _SendMessageUTF8
  0012c	83 c4 10	 add	 esp, 16			; 00000010H
$LN16@DeleteSymb:

; 1441 :     }
; 1442 :     cnt2=0;

  0012f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _cnt2$[ebp], 0
$LN5@DeleteSymb:

; 1443 :     while ((cnt2<Lib[ListNr].NrLibEntries)
; 1444 :           &&

  00136	6b 45 08 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  0013a	8b 4d e8	 mov	 ecx, DWORD PTR _cnt2$[ebp]
  0013d	3b 88 48 00 00
	00		 cmp	 ecx, DWORD PTR _Lib[eax+72]
  00143	7d 31		 jge	 SHORT $LN6@DeleteSymb
  00145	8d 85 80 fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  0014b	50		 push	 eax
  0014c	69 4d 08 00 80
	02 00		 imul	 ecx, DWORD PTR _ListNr$[ebp], 163840
  00153	6b 55 e8 28	 imul	 edx, DWORD PTR _cnt2$[ebp], 40
  00157	8d 84 11 00 00
	00 00		 lea	 eax, DWORD PTR _LibNames[ecx+edx]
  0015e	50		 push	 eax
  0015f	e8 00 00 00 00	 call	 _stricmp
  00164	83 c4 08	 add	 esp, 8
  00167	85 c0		 test	 eax, eax
  00169	74 0b		 je	 SHORT $LN6@DeleteSymb

; 1445 :           (stricmp(LibNames[ListNr][cnt2].Text,str)!=0)) cnt2++;

  0016b	8b 45 e8	 mov	 eax, DWORD PTR _cnt2$[ebp]
  0016e	83 c0 01	 add	 eax, 1
  00171	89 45 e8	 mov	 DWORD PTR _cnt2$[ebp], eax
  00174	eb c0		 jmp	 SHORT $LN5@DeleteSymb
$LN6@DeleteSymb:

; 1446 :     if (cnt2<Lib[ListNr].NrLibEntries) {

  00176	6b 45 08 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  0017a	8b 4d e8	 mov	 ecx, DWORD PTR _cnt2$[ebp]
  0017d	3b 88 48 00 00
	00		 cmp	 ecx, DWORD PTR _Lib[eax+72]
  00183	7d 29		 jge	 SHORT $LN17@DeleteSymb

; 1447 :       LibNamesDeleted[cnt2]=1;

  00185	8b 45 e8	 mov	 eax, DWORD PTR _cnt2$[ebp]
  00188	c6 80 00 00 00
	00 01		 mov	 BYTE PTR _LibNamesDeleted[eax], 1

; 1448 :       RemoveSymbolFromList(ListNr,str,0);

  0018f	6a 00		 push	 0
  00191	8d 85 80 fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  00197	50		 push	 eax
  00198	8b 4d 08	 mov	 ecx, DWORD PTR _ListNr$[ebp]
  0019b	51		 push	 ecx
  0019c	e8 00 00 00 00	 call	 _RemoveSymbolFromList
  001a1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1449 :       Found=1;

  001a4	c7 85 74 fd ff
	ff 01 00 00 00	 mov	 DWORD PTR _Found$[ebp], 1
$LN17@DeleteSymb:

; 1450 :     }
; 1451 :   }

  001ae	e9 17 ff ff ff	 jmp	 $LN2@DeleteSymb
$LN3@DeleteSymb:

; 1452 :   if (!Found) return -2;

  001b3	83 bd 74 fd ff
	ff 00		 cmp	 DWORD PTR _Found$[ebp], 0
  001ba	75 0a		 jne	 SHORT $LN18@DeleteSymb
  001bc	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  001c1	e9 cd 02 00 00	 jmp	 $LN1@DeleteSymb
$LN18@DeleteSymb:

; 1453 : 
; 1454 :   sprintf(str,"%s\\library.$#@",DefaultLibraryPath);

  001c6	68 00 00 00 00	 push	 OFFSET _DefaultLibraryPath
  001cb	68 00 00 00 00	 push	 OFFSET ??_C@_0P@ELJOPBKN@?$CFs?2library?4$?$CD?$EA?$AA@
  001d0	8d 85 80 fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  001d6	50		 push	 eax
  001d7	e8 00 00 00 00	 call	 _sprintf
  001dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1455 : 
; 1456 :   if ((fp=FileOpenReadOnlyUTF8(LibraryFile[ListNr]))<0) {

  001df	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  001e2	c1 e0 09	 shl	 eax, 9
  001e5	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  001ea	50		 push	 eax
  001eb	e8 00 00 00 00	 call	 _FileOpenReadOnlyUTF8
  001f0	83 c4 04	 add	 esp, 4
  001f3	89 45 c4	 mov	 DWORD PTR _fp$[ebp], eax
  001f6	83 7d c4 00	 cmp	 DWORD PTR _fp$[ebp], 0
  001fa	7d 08		 jge	 SHORT $LN19@DeleteSymb

; 1457 :     return -1;

  001fc	83 c8 ff	 or	 eax, -1
  001ff	e9 8f 02 00 00	 jmp	 $LN1@DeleteSymb
$LN19@DeleteSymb:

; 1458 :   }
; 1459 :   if ((fp2=FileOpenWriteUTF8(str))<0) {

  00204	8d 85 80 fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  0020a	50		 push	 eax
  0020b	e8 00 00 00 00	 call	 _FileOpenWriteUTF8
  00210	83 c4 04	 add	 esp, 4
  00213	89 45 b8	 mov	 DWORD PTR _fp2$[ebp], eax
  00216	83 7d b8 00	 cmp	 DWORD PTR _fp2$[ebp], 0
  0021a	7d 08		 jge	 SHORT $LN20@DeleteSymb

; 1460 :     return -1;

  0021c	83 c8 ff	 or	 eax, -1
  0021f	e9 6f 02 00 00	 jmp	 $LN1@DeleteSymb
$LN20@DeleteSymb:

; 1461 :   }
; 1462 :   count=0;

  00224	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 1463 :   FilePos=sizeof(LibRecord)+Lib[ListNr].MaxNrLibEntries*sizeof(LibNameRecord);

  0022b	6b 45 08 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  0022f	6b 88 4c 00 00
	00 28		 imul	 ecx, DWORD PTR _Lib[eax+76], 40
  00236	83 c1 50	 add	 ecx, 80			; 00000050H
  00239	89 4d 94	 mov	 DWORD PTR _FilePos$[ebp], ecx

; 1464 :   FilePos2=FilePos;

  0023c	8b 45 94	 mov	 eax, DWORD PTR _FilePos$[ebp]
  0023f	89 45 88	 mov	 DWORD PTR _FilePos2$[ebp], eax

; 1465 :   FileSeek(fp2,FilePos2);

  00242	8b 45 88	 mov	 eax, DWORD PTR _FilePos2$[ebp]
  00245	50		 push	 eax
  00246	8b 4d b8	 mov	 ecx, DWORD PTR _fp2$[ebp]
  00249	51		 push	 ecx
  0024a	e8 00 00 00 00	 call	 _FileSeek
  0024f	83 c4 08	 add	 esp, 8

; 1466 :   for (cnt=0;cnt<Lib[ListNr].NrLibEntries;cnt++) {

  00252	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _cnt$[ebp], 0
  00259	eb 09		 jmp	 SHORT $LN9@DeleteSymb
$LN7@DeleteSymb:
  0025b	8b 45 f4	 mov	 eax, DWORD PTR _cnt$[ebp]
  0025e	83 c0 01	 add	 eax, 1
  00261	89 45 f4	 mov	 DWORD PTR _cnt$[ebp], eax
$LN9@DeleteSymb:
  00264	6b 45 08 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  00268	8b 4d f4	 mov	 ecx, DWORD PTR _cnt$[ebp]
  0026b	3b 88 48 00 00
	00		 cmp	 ecx, DWORD PTR _Lib[eax+72]
  00271	0f 8d 2f 01 00
	00		 jge	 $LN8@DeleteSymb

; 1467 :     FileSeek(fp,FilePos);

  00277	8b 45 94	 mov	 eax, DWORD PTR _FilePos$[ebp]
  0027a	50		 push	 eax
  0027b	8b 4d c4	 mov	 ecx, DWORD PTR _fp$[ebp]
  0027e	51		 push	 ecx
  0027f	e8 00 00 00 00	 call	 _FileSeek
  00284	83 c4 08	 add	 esp, 8

; 1468 :     if (LibNamesDeleted[cnt]==0) {

  00287	8b 45 f4	 mov	 eax, DWORD PTR _cnt$[ebp]
  0028a	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR _LibNamesDeleted[eax]
  00291	85 c9		 test	 ecx, ecx
  00293	0f 85 f0 00 00
	00		 jne	 $LN21@DeleteSymb

; 1469 :       if (count!=cnt) memmove(&LibNames[ListNr][count],&LibNames[ListNr][cnt],sizeof(LibNameRecord));

  00299	8b 45 dc	 mov	 eax, DWORD PTR _count$[ebp]
  0029c	3b 45 f4	 cmp	 eax, DWORD PTR _cnt$[ebp]
  0029f	74 30		 je	 SHORT $LN22@DeleteSymb
  002a1	6a 28		 push	 40			; 00000028H
  002a3	69 45 08 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  002aa	6b 4d f4 28	 imul	 ecx, DWORD PTR _cnt$[ebp], 40
  002ae	8d 94 08 00 00
	00 00		 lea	 edx, DWORD PTR _LibNames[eax+ecx]
  002b5	52		 push	 edx
  002b6	69 45 08 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  002bd	6b 4d dc 28	 imul	 ecx, DWORD PTR _count$[ebp], 40
  002c1	8d 94 08 00 00
	00 00		 lea	 edx, DWORD PTR _LibNames[eax+ecx]
  002c8	52		 push	 edx
  002c9	e8 00 00 00 00	 call	 _memmove
  002ce	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN22@DeleteSymb:

; 1470 :       LibNames[ListNr][count].Pos=FilePos2;

  002d1	69 45 08 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  002d8	6b 4d dc 28	 imul	 ecx, DWORD PTR _count$[ebp], 40
  002dc	8b 55 88	 mov	 edx, DWORD PTR _FilePos2$[ebp]
  002df	89 94 08 20 00
	00 00		 mov	 DWORD PTR _LibNames[eax+ecx+32], edx

; 1471 :       count2=LibNames[ListNr][count].Length;

  002e6	69 45 08 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  002ed	6b 4d dc 28	 imul	 ecx, DWORD PTR _count$[ebp], 40
  002f1	8b 94 08 24 00
	00 00		 mov	 edx, DWORD PTR _LibNames[eax+ecx+36]
  002f8	89 55 d0	 mov	 DWORD PTR _count2$[ebp], edx
$LN10@DeleteSymb:

; 1472 :       while (count2>0) {

  002fb	83 7d d0 00	 cmp	 DWORD PTR _count2$[ebp], 0
  002ff	7e 67		 jle	 SHORT $LN11@DeleteSymb

; 1473 :         FileRead(fp,Buf,min(count2,BufSize),&result);

  00301	81 7d d0 00 00
	04 00		 cmp	 DWORD PTR _count2$[ebp], 262144 ; 00040000H
  00308	7d 0b		 jge	 SHORT $LN25@DeleteSymb
  0030a	8b 45 d0	 mov	 eax, DWORD PTR _count2$[ebp]
  0030d	89 85 ec fb ff
	ff		 mov	 DWORD PTR tv207[ebp], eax
  00313	eb 0a		 jmp	 SHORT $LN26@DeleteSymb
$LN25@DeleteSymb:
  00315	c7 85 ec fb ff
	ff 00 00 04 00	 mov	 DWORD PTR tv207[ebp], 262144 ; 00040000H
$LN26@DeleteSymb:
  0031f	8d 4d ac	 lea	 ecx, DWORD PTR _result$[ebp]
  00322	51		 push	 ecx
  00323	8b 95 ec fb ff
	ff		 mov	 edx, DWORD PTR tv207[ebp]
  00329	52		 push	 edx
  0032a	a1 00 00 00 00	 mov	 eax, DWORD PTR _Buf
  0032f	50		 push	 eax
  00330	8b 4d c4	 mov	 ecx, DWORD PTR _fp$[ebp]
  00333	51		 push	 ecx
  00334	e8 00 00 00 00	 call	 _FileRead
  00339	83 c4 10	 add	 esp, 16			; 00000010H

; 1474 :         if (result>0) FileWrite(fp2,Buf,result,&res2);

  0033c	83 7d ac 00	 cmp	 DWORD PTR _result$[ebp], 0
  00340	7e 1b		 jle	 SHORT $LN23@DeleteSymb
  00342	8d 45 a0	 lea	 eax, DWORD PTR _res2$[ebp]
  00345	50		 push	 eax
  00346	8b 4d ac	 mov	 ecx, DWORD PTR _result$[ebp]
  00349	51		 push	 ecx
  0034a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _Buf
  00350	52		 push	 edx
  00351	8b 45 b8	 mov	 eax, DWORD PTR _fp2$[ebp]
  00354	50		 push	 eax
  00355	e8 00 00 00 00	 call	 _FileWrite
  0035a	83 c4 10	 add	 esp, 16			; 00000010H
$LN23@DeleteSymb:

; 1475 :         count2-=result;

  0035d	8b 45 d0	 mov	 eax, DWORD PTR _count2$[ebp]
  00360	2b 45 ac	 sub	 eax, DWORD PTR _result$[ebp]
  00363	89 45 d0	 mov	 DWORD PTR _count2$[ebp], eax

; 1476 :       }

  00366	eb 93		 jmp	 SHORT $LN10@DeleteSymb
$LN11@DeleteSymb:

; 1477 :       FilePos2+=LibNames[ListNr][count].Length;

  00368	69 45 08 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  0036f	6b 4d dc 28	 imul	 ecx, DWORD PTR _count$[ebp], 40
  00373	8b 55 88	 mov	 edx, DWORD PTR _FilePos2$[ebp]
  00376	03 94 08 24 00
	00 00		 add	 edx, DWORD PTR _LibNames[eax+ecx+36]
  0037d	89 55 88	 mov	 DWORD PTR _FilePos2$[ebp], edx

; 1478 :       count++;

  00380	8b 45 dc	 mov	 eax, DWORD PTR _count$[ebp]
  00383	83 c0 01	 add	 eax, 1
  00386	89 45 dc	 mov	 DWORD PTR _count$[ebp], eax
$LN21@DeleteSymb:

; 1479 :     }
; 1480 :     FilePos+=LibNames[ListNr][cnt].Length;

  00389	69 45 08 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  00390	6b 4d f4 28	 imul	 ecx, DWORD PTR _cnt$[ebp], 40
  00394	8b 55 94	 mov	 edx, DWORD PTR _FilePos$[ebp]
  00397	03 94 08 24 00
	00 00		 add	 edx, DWORD PTR _LibNames[eax+ecx+36]
  0039e	89 55 94	 mov	 DWORD PTR _FilePos$[ebp], edx

; 1481 :   }

  003a1	e9 b5 fe ff ff	 jmp	 $LN7@DeleteSymb
$LN8@DeleteSymb:

; 1482 :   FileSeek(fp2,0);

  003a6	6a 00		 push	 0
  003a8	8b 45 b8	 mov	 eax, DWORD PTR _fp2$[ebp]
  003ab	50		 push	 eax
  003ac	e8 00 00 00 00	 call	 _FileSeek
  003b1	83 c4 08	 add	 esp, 8

; 1483 :   Lib[ListNr].NrLibEntries=count;

  003b4	6b 45 08 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  003b8	8b 4d dc	 mov	 ecx, DWORD PTR _count$[ebp]
  003bb	89 88 48 00 00
	00		 mov	 DWORD PTR _Lib[eax+72], ecx

; 1484 :   FileWrite(fp2,&Lib[ListNr],sizeof(LibRecord),&res2);

  003c1	8d 45 a0	 lea	 eax, DWORD PTR _res2$[ebp]
  003c4	50		 push	 eax
  003c5	6a 50		 push	 80			; 00000050H
  003c7	6b 4d 08 50	 imul	 ecx, DWORD PTR _ListNr$[ebp], 80
  003cb	81 c1 00 00 00
	00		 add	 ecx, OFFSET _Lib
  003d1	51		 push	 ecx
  003d2	8b 55 b8	 mov	 edx, DWORD PTR _fp2$[ebp]
  003d5	52		 push	 edx
  003d6	e8 00 00 00 00	 call	 _FileWrite
  003db	83 c4 10	 add	 esp, 16			; 00000010H

; 1485 :   memset(&LibNames[ListNr][Lib[ListNr].NrLibEntries],0,

  003de	6b 45 08 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  003e2	6b 4d 08 50	 imul	 ecx, DWORD PTR _ListNr$[ebp], 80
  003e6	8b 90 4c 00 00
	00		 mov	 edx, DWORD PTR _Lib[eax+76]
  003ec	2b 91 48 00 00
	00		 sub	 edx, DWORD PTR _Lib[ecx+72]
  003f2	6b c2 28	 imul	 eax, edx, 40
  003f5	50		 push	 eax
  003f6	6a 00		 push	 0
  003f8	69 4d 08 00 80
	02 00		 imul	 ecx, DWORD PTR _ListNr$[ebp], 163840
  003ff	6b 55 08 50	 imul	 edx, DWORD PTR _ListNr$[ebp], 80
  00403	6b 82 48 00 00
	00 28		 imul	 eax, DWORD PTR _Lib[edx+72], 40
  0040a	8d 8c 01 00 00
	00 00		 lea	 ecx, DWORD PTR _LibNames[ecx+eax]
  00411	51		 push	 ecx
  00412	e8 00 00 00 00	 call	 _memset
  00417	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1486 :          (Lib[ListNr].MaxNrLibEntries-Lib[ListNr].NrLibEntries)*sizeof(LibNameRecord));
; 1487 :   FileWrite(fp2,&LibNames[ListNr],Lib[ListNr].MaxNrLibEntries*sizeof(LibNameRecord),&res2);

  0041a	8d 45 a0	 lea	 eax, DWORD PTR _res2$[ebp]
  0041d	50		 push	 eax
  0041e	6b 4d 08 50	 imul	 ecx, DWORD PTR _ListNr$[ebp], 80
  00422	6b 91 4c 00 00
	00 28		 imul	 edx, DWORD PTR _Lib[ecx+76], 40
  00429	52		 push	 edx
  0042a	69 45 08 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  00431	05 00 00 00 00	 add	 eax, OFFSET _LibNames
  00436	50		 push	 eax
  00437	8b 4d b8	 mov	 ecx, DWORD PTR _fp2$[ebp]
  0043a	51		 push	 ecx
  0043b	e8 00 00 00 00	 call	 _FileWrite
  00440	83 c4 10	 add	 esp, 16			; 00000010H

; 1488 :   FileClose(fp);

  00443	8b 45 c4	 mov	 eax, DWORD PTR _fp$[ebp]
  00446	50		 push	 eax
  00447	e8 00 00 00 00	 call	 _FileClose
  0044c	83 c4 04	 add	 esp, 4

; 1489 :   FileClose(fp2);

  0044f	8b 45 b8	 mov	 eax, DWORD PTR _fp2$[ebp]
  00452	50		 push	 eax
  00453	e8 00 00 00 00	 call	 _FileClose
  00458	83 c4 04	 add	 esp, 4

; 1490 :   DisplayLibraryText(1);

  0045b	6a 01		 push	 1
  0045d	e8 00 00 00 00	 call	 _DisplayLibraryText
  00462	83 c4 04	 add	 esp, 4

; 1491 : 
; 1492 :   CopyFileUTF8(str,LibraryFile[ListNr],0);

  00465	6a 00		 push	 0
  00467	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  0046a	c1 e0 09	 shl	 eax, 9
  0046d	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  00472	50		 push	 eax
  00473	8d 8d 80 fd ff
	ff		 lea	 ecx, DWORD PTR _str$[ebp]
  00479	51		 push	 ecx
  0047a	e8 00 00 00 00	 call	 _CopyFileUTF8
  0047f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1493 :   DeleteFileUTF8(str);

  00482	8d 85 80 fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  00488	50		 push	 eax
  00489	e8 00 00 00 00	 call	 _DeleteFileUTF8
  0048e	83 c4 04	 add	 esp, 4

; 1494 :   return 0;

  00491	33 c0		 xor	 eax, eax
$LN1@DeleteSymb:

; 1495 : }

  00493	52		 push	 edx
  00494	8b cd		 mov	 ecx, ebp
  00496	50		 push	 eax
  00497	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN31@DeleteSymb
  0049d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  004a2	58		 pop	 eax
  004a3	5a		 pop	 edx
  004a4	5f		 pop	 edi
  004a5	5e		 pop	 esi
  004a6	5b		 pop	 ebx
  004a7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004aa	33 cd		 xor	 ecx, ebp
  004ac	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004b1	81 c4 14 04 00
	00		 add	 esp, 1044		; 00000414H
  004b7	3b ec		 cmp	 ebp, esp
  004b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004be	8b e5		 mov	 esp, ebp
  004c0	5d		 pop	 ebp
  004c1	c3		 ret	 0
  004c2	66 90		 npad	 2
$LN31@DeleteSymb:
  004c4	03 00 00 00	 DD	 3
  004c8	00 00 00 00	 DD	 $LN30@DeleteSymb
$LN30@DeleteSymb:
  004cc	ac ff ff ff	 DD	 -84			; ffffffacH
  004d0	04 00 00 00	 DD	 4
  004d4	00 00 00 00	 DD	 $LN27@DeleteSymb
  004d8	a0 ff ff ff	 DD	 -96			; ffffffa0H
  004dc	04 00 00 00	 DD	 4
  004e0	00 00 00 00	 DD	 $LN28@DeleteSymb
  004e4	80 fd ff ff	 DD	 -640			; fffffd80H
  004e8	00 02 00 00	 DD	 512			; 00000200H
  004ec	00 00 00 00	 DD	 $LN29@DeleteSymb
$LN29@DeleteSymb:
  004f0	73		 DB	 115			; 00000073H
  004f1	74		 DB	 116			; 00000074H
  004f2	72		 DB	 114			; 00000072H
  004f3	00		 DB	 0
$LN28@DeleteSymb:
  004f4	72		 DB	 114			; 00000072H
  004f5	65		 DB	 101			; 00000065H
  004f6	73		 DB	 115			; 00000073H
  004f7	32		 DB	 50			; 00000032H
  004f8	00		 DB	 0
$LN27@DeleteSymb:
  004f9	72		 DB	 114			; 00000072H
  004fa	65		 DB	 101			; 00000065H
  004fb	73		 DB	 115			; 00000073H
  004fc	75		 DB	 117			; 00000075H
  004fd	6c		 DB	 108			; 0000006cH
  004fe	74		 DB	 116			; 00000074H
  004ff	00		 DB	 0
_DeleteSymbols ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _AddSymbolToLibrary
_TEXT	SEGMENT
tv641 = -3196						; size = 4
tv306 = -3196						; size = 4
$T1 = -3188						; size = 4
$T2 = -3176						; size = 4
_Shape$ = -2204						; size = 156
_Symbol$ = -2040					; size = 220
_ExistingLibName$ = -1812				; size = 40
_LibName$ = -1764					; size = 40
_SymbolName$ = -1716					; size = 512
_str2$ = -1196						; size = 512
_str$ = -676						; size = 512
_cnt$ = -156						; size = 4
_BytesToWrite$ = -144					; size = 4
_FilePos$ = -132					; size = 4
_SymbolIndexNr$ = -120					; size = 4
_SymbolFileSize$ = -108					; size = 4
_res$ = -96						; size = 4
_LibSymbolDataPos$ = -84				; size = 4
_res2$ = -72						; size = 4
_LibraryFileSize$ = -60					; size = 4
_result$ = -48						; size = 4
_fp3$ = -36						; size = 4
_fp2$ = -24						; size = 4
_fp$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_SymbolFile$ = 8					; size = 4
_ListNr$ = 12						; size = 4
_mode$ = 16						; size = 4
_AddSymbolToLibrary PROC				; COMDAT

; 1157 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 7c 0c 00
	00		 sub	 esp, 3196		; 00000c7cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 84 f3 ff
	ff		 lea	 edi, DWORD PTR [ebp-3196]
  00012	b9 1f 03 00 00	 mov	 ecx, 799		; 0000031fH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1158 :   int32 fp,fp2,fp3,result,LibraryFileSize,res2,LibSymbolDataPos,
; 1159 :         res,SymbolFileSize,SymbolIndexNr,FilePos,BytesToWrite,cnt;
; 1160 :   char str[MAX_LENGTH_STRING],str2[MAX_LENGTH_STRING],SymbolName[MAX_LENGTH_STRING];
; 1161 :   LibNameRecord  LibName,ExistingLibName;
; 1162 :   SymbolRecord Symbol;
; 1163 :   ShapeRecord Shape;
; 1164 : 
; 1165 :   memset(&ExistingLibName,0,sizeof(ExistingLibName));

  00028	6a 28		 push	 40			; 00000028H
  0002a	6a 00		 push	 0
  0002c	8d 85 ec f8 ff
	ff		 lea	 eax, DWORD PTR _ExistingLibName$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 _memset
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1166 :   SymbolIndexNr=-1;

  0003b	c7 45 88 ff ff
	ff ff		 mov	 DWORD PTR _SymbolIndexNr$[ebp], -1

; 1167 :   GetNameWithOutExtensionFromFileName(SymbolFile,SymbolName);

  00042	8d 85 4c f9 ff
	ff		 lea	 eax, DWORD PTR _SymbolName$[ebp]
  00048	50		 push	 eax
  00049	8b 4d 08	 mov	 ecx, DWORD PTR _SymbolFile$[ebp]
  0004c	51		 push	 ecx
  0004d	e8 00 00 00 00	 call	 _GetNameWithOutExtensionFromFileName
  00052	83 c4 08	 add	 esp, 8

; 1168 :   if ((mode & 4) == 4) {

  00055	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00058	83 e0 04	 and	 eax, 4
  0005b	74 3f		 je	 SHORT $LN25@AddSymbolT

; 1169 :     result=strlen(SymbolName);

  0005d	8d 85 4c f9 ff
	ff		 lea	 eax, DWORD PTR _SymbolName$[ebp]
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 _strlen
  00069	83 c4 04	 add	 esp, 4
  0006c	89 45 d0	 mov	 DWORD PTR _result$[ebp], eax

; 1170 :     SymbolName[result-3]=0;

  0006f	8b 45 d0	 mov	 eax, DWORD PTR _result$[ebp]
  00072	83 e8 03	 sub	 eax, 3
  00075	89 85 98 f3 ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  0007b	81 bd 98 f3 ff
	ff 00 02 00 00	 cmp	 DWORD PTR $T2[ebp], 512	; 00000200H
  00085	73 02		 jae	 SHORT $LN77@AddSymbolT
  00087	eb 05		 jmp	 SHORT $LN78@AddSymbolT
$LN77@AddSymbolT:
  00089	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN78@AddSymbolT:
  0008e	8b 8d 98 f3 ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  00094	c6 84 0d 4c f9
	ff ff 00	 mov	 BYTE PTR _SymbolName$[ebp+ecx], 0
$LN25@AddSymbolT:

; 1171 :   }
; 1172 :   if (FileExistsUTF8(SymbolFile)!=0) {

  0009c	8b 45 08	 mov	 eax, DWORD PTR _SymbolFile$[ebp]
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 _FileExistsUTF8
  000a5	83 c4 04	 add	 esp, 4
  000a8	85 c0		 test	 eax, eax
  000aa	0f 84 89 00 00
	00		 je	 $LN26@AddSymbolT

; 1173 :     if ((mode & 1) == 1) {

  000b0	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  000b3	83 e0 01	 and	 eax, 1
  000b6	74 79		 je	 SHORT $LN27@AddSymbolT

; 1174 :       if (LibraryMode==0) {

  000b8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  000bf	75 25		 jne	 SHORT $LN28@AddSymbolT

; 1175 :         sprintf(str,SC(15,"Can not open symbol in file %s"),SymbolFile);

  000c1	8b 45 08	 mov	 eax, DWORD PTR _SymbolFile$[ebp]
  000c4	50		 push	 eax
  000c5	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@CFMDOOK@Can?5not?5open?5symbol?5in?5file?5?$CFs?$AA@
  000ca	6a 0f		 push	 15			; 0000000fH
  000cc	e8 00 00 00 00	 call	 _StringConvert
  000d1	83 c4 08	 add	 esp, 8
  000d4	50		 push	 eax
  000d5	8d 8d 5c fd ff
	ff		 lea	 ecx, DWORD PTR _str$[ebp]
  000db	51		 push	 ecx
  000dc	e8 00 00 00 00	 call	 _sprintf
  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1176 :       } else {

  000e4	eb 23		 jmp	 SHORT $LN29@AddSymbolT
$LN28@AddSymbolT:

; 1177 :         sprintf(str,SC(16,"Can not open geometry in file %s"),SymbolFile);

  000e6	8b 45 08	 mov	 eax, DWORD PTR _SymbolFile$[ebp]
  000e9	50		 push	 eax
  000ea	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@HGKICLGE@Can?5not?5open?5geometry?5in?5file?5?$CFs@
  000ef	6a 10		 push	 16			; 00000010H
  000f1	e8 00 00 00 00	 call	 _StringConvert
  000f6	83 c4 08	 add	 esp, 8
  000f9	50		 push	 eax
  000fa	8d 8d 5c fd ff
	ff		 lea	 ecx, DWORD PTR _str$[ebp]
  00100	51		 push	 ecx
  00101	e8 00 00 00 00	 call	 _sprintf
  00106	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN29@AddSymbolT:

; 1178 :       }
; 1179 :       MessageBoxUTF8(LIBMANWindow,str,SC(9,"Error"),MB_APPLMODAL|MB_OK);

  00109	6a 00		 push	 0
  0010b	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00110	6a 09		 push	 9
  00112	e8 00 00 00 00	 call	 _StringConvert
  00117	83 c4 08	 add	 esp, 8
  0011a	50		 push	 eax
  0011b	8d 85 5c fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  00121	50		 push	 eax
  00122	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00128	51		 push	 ecx
  00129	e8 00 00 00 00	 call	 _MessageBoxUTF8
  0012e	83 c4 10	 add	 esp, 16			; 00000010H
$LN27@AddSymbolT:

; 1180 :     }
; 1181 :     return -1;

  00131	83 c8 ff	 or	 eax, -1
  00134	e9 10 0d 00 00	 jmp	 $LN76@AddSymbolT
$LN26@AddSymbolT:

; 1182 :   }
; 1183 :   if ((fp=FileOpenReadOnlyUTF8(SymbolFile))<=0) {

  00139	8b 45 08	 mov	 eax, DWORD PTR _SymbolFile$[ebp]
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 _FileOpenReadOnlyUTF8
  00142	83 c4 04	 add	 esp, 4
  00145	89 45 f4	 mov	 DWORD PTR _fp$[ebp], eax
  00148	83 7d f4 00	 cmp	 DWORD PTR _fp$[ebp], 0
  0014c	7f 08		 jg	 SHORT $LN30@AddSymbolT

; 1184 :     return -1;

  0014e	83 c8 ff	 or	 eax, -1
  00151	e9 f3 0c 00 00	 jmp	 $LN76@AddSymbolT
$LN30@AddSymbolT:

; 1185 :   }
; 1186 :   if (LibraryMode==0) {

  00156	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  0015d	0f 85 e2 00 00
	00		 jne	 $LN31@AddSymbolT

; 1187 :     if (FileRead(fp,&Symbol,sizeof(SymbolRecord),&result)==0) {

  00163	8d 45 d0	 lea	 eax, DWORD PTR _result$[ebp]
  00166	50		 push	 eax
  00167	68 dc 00 00 00	 push	 220			; 000000dcH
  0016c	8d 8d 08 f8 ff
	ff		 lea	 ecx, DWORD PTR _Symbol$[ebp]
  00172	51		 push	 ecx
  00173	8b 55 f4	 mov	 edx, DWORD PTR _fp$[ebp]
  00176	52		 push	 edx
  00177	e8 00 00 00 00	 call	 _FileRead
  0017c	83 c4 10	 add	 esp, 16			; 00000010H
  0017f	85 c0		 test	 eax, eax
  00181	0f 85 b9 00 00
	00		 jne	 $LN33@AddSymbolT

; 1188 :       if ((strcmp((LPSTR)&Symbol,SymbolCode1)!=0)
; 1189 :          &&
; 1190 :          (strcmp((LPSTR)&Symbol,SymbolCode2)!=0)
; 1191 :          &&

  00187	68 00 00 00 00	 push	 OFFSET ??_C@_07MKBOLLDP@Symb1?40?$AA@
  0018c	8d 85 08 f8 ff
	ff		 lea	 eax, DWORD PTR _Symbol$[ebp]
  00192	50		 push	 eax
  00193	e8 00 00 00 00	 call	 _strcmp
  00198	83 c4 08	 add	 esp, 8
  0019b	85 c0		 test	 eax, eax
  0019d	0f 84 9d 00 00
	00		 je	 $LN33@AddSymbolT
  001a3	68 00 00 00 00	 push	 OFFSET ??_C@_07NIKLBENB@Symb2?40?$AA@
  001a8	8d 85 08 f8 ff
	ff		 lea	 eax, DWORD PTR _Symbol$[ebp]
  001ae	50		 push	 eax
  001af	e8 00 00 00 00	 call	 _strcmp
  001b4	83 c4 08	 add	 esp, 8
  001b7	85 c0		 test	 eax, eax
  001b9	0f 84 81 00 00
	00		 je	 $LN33@AddSymbolT
  001bf	68 00 00 00 00	 push	 OFFSET ??_C@_07GABHHDLE@Symb3?40?$AA@
  001c4	8d 85 08 f8 ff
	ff		 lea	 eax, DWORD PTR _Symbol$[ebp]
  001ca	50		 push	 eax
  001cb	e8 00 00 00 00	 call	 _strcmp
  001d0	83 c4 08	 add	 esp, 8
  001d3	85 c0		 test	 eax, eax
  001d5	74 69		 je	 SHORT $LN33@AddSymbolT

; 1192 :          (strcmp((LPSTR)&Symbol,SymbolCode3)!=0)) {
; 1193 :         if ((mode & 1) == 1) {

  001d7	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  001da	83 e0 01	 and	 eax, 1
  001dd	74 57		 je	 SHORT $LN35@AddSymbolT

; 1194 :           sprintf(str2,SC(17,"Symbol %s is wrong"),SymbolFile);

  001df	8b 45 08	 mov	 eax, DWORD PTR _SymbolFile$[ebp]
  001e2	50		 push	 eax
  001e3	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@BOPCBFNK@Symbol?5?$CFs?5is?5wrong?$AA@
  001e8	6a 11		 push	 17			; 00000011H
  001ea	e8 00 00 00 00	 call	 _StringConvert
  001ef	83 c4 08	 add	 esp, 8
  001f2	50		 push	 eax
  001f3	8d 8d 54 fb ff
	ff		 lea	 ecx, DWORD PTR _str2$[ebp]
  001f9	51		 push	 ecx
  001fa	e8 00 00 00 00	 call	 _sprintf
  001ff	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1195 :           MessageBoxUTF8(LIBMANWindow,str2,SC(9,"Error"),MB_APPLMODAL|MB_OK);

  00202	6a 00		 push	 0
  00204	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00209	6a 09		 push	 9
  0020b	e8 00 00 00 00	 call	 _StringConvert
  00210	83 c4 08	 add	 esp, 8
  00213	50		 push	 eax
  00214	8d 85 54 fb ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  0021a	50		 push	 eax
  0021b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00221	51		 push	 ecx
  00222	e8 00 00 00 00	 call	 _MessageBoxUTF8
  00227	83 c4 10	 add	 esp, 16			; 00000010H

; 1196 :           FileClose(fp);

  0022a	8b 45 f4	 mov	 eax, DWORD PTR _fp$[ebp]
  0022d	50		 push	 eax
  0022e	e8 00 00 00 00	 call	 _FileClose
  00233	83 c4 04	 add	 esp, 4
$LN35@AddSymbolT:

; 1197 :         }
; 1198 :         return -2;

  00236	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  0023b	e9 09 0c 00 00	 jmp	 $LN76@AddSymbolT
$LN33@AddSymbolT:

; 1199 :       }
; 1200 :     }
; 1201 :   } else {

  00240	e9 c1 00 00 00	 jmp	 $LN32@AddSymbolT
$LN31@AddSymbolT:

; 1202 :     if (FileRead(fp,&Shape,sizeof(ShapeRecord),&result)==0) {

  00245	8d 45 d0	 lea	 eax, DWORD PTR _result$[ebp]
  00248	50		 push	 eax
  00249	68 9c 00 00 00	 push	 156			; 0000009cH
  0024e	8d 8d 64 f7 ff
	ff		 lea	 ecx, DWORD PTR _Shape$[ebp]
  00254	51		 push	 ecx
  00255	8b 55 f4	 mov	 edx, DWORD PTR _fp$[ebp]
  00258	52		 push	 edx
  00259	e8 00 00 00 00	 call	 _FileRead
  0025e	83 c4 10	 add	 esp, 16			; 00000010H
  00261	85 c0		 test	 eax, eax
  00263	0f 85 9d 00 00
	00		 jne	 $LN32@AddSymbolT

; 1203 :       if ((strcmp((LPSTR)&Shape,ShapeCode)!=0)
; 1204 :          &&

  00269	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@JAOEBJBK@Shape?5definition?51?40?$AA@
  0026e	8d 85 64 f7 ff
	ff		 lea	 eax, DWORD PTR _Shape$[ebp]
  00274	50		 push	 eax
  00275	e8 00 00 00 00	 call	 _strcmp
  0027a	83 c4 08	 add	 esp, 8
  0027d	85 c0		 test	 eax, eax
  0027f	0f 84 81 00 00
	00		 je	 $LN32@AddSymbolT
  00285	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@ONJDONFP@Shape?5definition?51?45?$AA@
  0028a	8d 85 64 f7 ff
	ff		 lea	 eax, DWORD PTR _Shape$[ebp]
  00290	50		 push	 eax
  00291	e8 00 00 00 00	 call	 _strcmp
  00296	83 c4 08	 add	 esp, 8
  00299	85 c0		 test	 eax, eax
  0029b	74 69		 je	 SHORT $LN32@AddSymbolT

; 1205 :          (strcmp((LPSTR)&Shape,ShapeCode2)!=0)) {
; 1206 :         if ((mode & 1) == 1) {

  0029d	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  002a0	83 e0 01	 and	 eax, 1
  002a3	74 57		 je	 SHORT $LN38@AddSymbolT

; 1207 :           sprintf(str2,SC(18,"Shape %s is wrong"),SymbolFile);

  002a5	8b 45 08	 mov	 eax, DWORD PTR _SymbolFile$[ebp]
  002a8	50		 push	 eax
  002a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@HCOEMECA@Shape?5?$CFs?5is?5wrong?$AA@
  002ae	6a 12		 push	 18			; 00000012H
  002b0	e8 00 00 00 00	 call	 _StringConvert
  002b5	83 c4 08	 add	 esp, 8
  002b8	50		 push	 eax
  002b9	8d 8d 54 fb ff
	ff		 lea	 ecx, DWORD PTR _str2$[ebp]
  002bf	51		 push	 ecx
  002c0	e8 00 00 00 00	 call	 _sprintf
  002c5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1208 :           MessageBoxUTF8(LIBMANWindow,str2,SC(9,"Error"),MB_APPLMODAL|MB_OK);

  002c8	6a 00		 push	 0
  002ca	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  002cf	6a 09		 push	 9
  002d1	e8 00 00 00 00	 call	 _StringConvert
  002d6	83 c4 08	 add	 esp, 8
  002d9	50		 push	 eax
  002da	8d 85 54 fb ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  002e0	50		 push	 eax
  002e1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  002e7	51		 push	 ecx
  002e8	e8 00 00 00 00	 call	 _MessageBoxUTF8
  002ed	83 c4 10	 add	 esp, 16			; 00000010H

; 1209 :           FileClose(fp);

  002f0	8b 45 f4	 mov	 eax, DWORD PTR _fp$[ebp]
  002f3	50		 push	 eax
  002f4	e8 00 00 00 00	 call	 _FileClose
  002f9	83 c4 04	 add	 esp, 4
$LN38@AddSymbolT:

; 1210 :         }
; 1211 :         return -2;

  002fc	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00301	e9 43 0b 00 00	 jmp	 $LN76@AddSymbolT
$LN32@AddSymbolT:

; 1212 :       }
; 1213 :     }
; 1214 :   }
; 1215 :   FileClose(fp);

  00306	8b 45 f4	 mov	 eax, DWORD PTR _fp$[ebp]
  00309	50		 push	 eax
  0030a	e8 00 00 00 00	 call	 _FileClose
  0030f	83 c4 04	 add	 esp, 4

; 1216 :   if ((fp=FileOpenReadOnlyUTF8(LibraryFile[ListNr]))<=0) {

  00312	8b 45 0c	 mov	 eax, DWORD PTR _ListNr$[ebp]
  00315	c1 e0 09	 shl	 eax, 9
  00318	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  0031d	50		 push	 eax
  0031e	e8 00 00 00 00	 call	 _FileOpenReadOnlyUTF8
  00323	83 c4 04	 add	 esp, 4
  00326	89 45 f4	 mov	 DWORD PTR _fp$[ebp], eax
  00329	83 7d f4 00	 cmp	 DWORD PTR _fp$[ebp], 0
  0032d	7f 0a		 jg	 SHORT $LN39@AddSymbolT

; 1217 :     return -3;

  0032f	b8 fd ff ff ff	 mov	 eax, -3			; fffffffdH
  00334	e9 10 0b 00 00	 jmp	 $LN76@AddSymbolT
$LN39@AddSymbolT:

; 1218 :   }
; 1219 :   FileClose(fp);

  00339	8b 45 f4	 mov	 eax, DWORD PTR _fp$[ebp]
  0033c	50		 push	 eax
  0033d	e8 00 00 00 00	 call	 _FileClose
  00342	83 c4 04	 add	 esp, 4

; 1220 :   if ((LibraryFileSize=FileSizeUTF8(LibraryFile[ListNr]))<0) {

  00345	8b 45 0c	 mov	 eax, DWORD PTR _ListNr$[ebp]
  00348	c1 e0 09	 shl	 eax, 9
  0034b	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  00350	50		 push	 eax
  00351	e8 00 00 00 00	 call	 _FileSizeUTF8
  00356	83 c4 04	 add	 esp, 4
  00359	89 45 c4	 mov	 DWORD PTR _LibraryFileSize$[ebp], eax
  0035c	83 7d c4 00	 cmp	 DWORD PTR _LibraryFileSize$[ebp], 0
  00360	7d 0a		 jge	 SHORT $LN40@AddSymbolT

; 1221 :     return -100;

  00362	b8 9c ff ff ff	 mov	 eax, -100		; ffffff9cH
  00367	e9 dd 0a 00 00	 jmp	 $LN76@AddSymbolT
$LN40@AddSymbolT:

; 1222 :   }
; 1223 :   if (LibraryFileSize>32*1040*1024) {

  0036c	81 7d c4 00 00
	08 02		 cmp	 DWORD PTR _LibraryFileSize$[ebp], 34078720 ; 02080000H
  00373	7e 42		 jle	 SHORT $LN41@AddSymbolT

; 1224 :     if ((mode & 1) == 1) {

  00375	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00378	83 e0 01	 and	 eax, 1
  0037b	74 30		 je	 SHORT $LN42@AddSymbolT

; 1225 :       MessageBoxUTF8(LIBMANWindow,SC(19,"Library size >32 Mbyte"),SC(9,"Error"),MB_APPLMODAL|MB_OK);

  0037d	6a 00		 push	 0
  0037f	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00384	6a 09		 push	 9
  00386	e8 00 00 00 00	 call	 _StringConvert
  0038b	83 c4 08	 add	 esp, 8
  0038e	50		 push	 eax
  0038f	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@GDAKKDFA@Library?5size?5?$DO32?5Mbyte?$AA@
  00394	6a 13		 push	 19			; 00000013H
  00396	e8 00 00 00 00	 call	 _StringConvert
  0039b	83 c4 08	 add	 esp, 8
  0039e	50		 push	 eax
  0039f	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  003a4	50		 push	 eax
  003a5	e8 00 00 00 00	 call	 _MessageBoxUTF8
  003aa	83 c4 10	 add	 esp, 16			; 00000010H
$LN42@AddSymbolT:

; 1226 :     }
; 1227 :     return -4;

  003ad	b8 fc ff ff ff	 mov	 eax, -4			; fffffffcH
  003b2	e9 92 0a 00 00	 jmp	 $LN76@AddSymbolT
$LN41@AddSymbolT:

; 1228 :   }
; 1229 :   if ((SymbolFileSize=FileSizeUTF8(SymbolFile))<0) {

  003b7	8b 45 08	 mov	 eax, DWORD PTR _SymbolFile$[ebp]
  003ba	50		 push	 eax
  003bb	e8 00 00 00 00	 call	 _FileSizeUTF8
  003c0	83 c4 04	 add	 esp, 4
  003c3	89 45 94	 mov	 DWORD PTR _SymbolFileSize$[ebp], eax
  003c6	83 7d 94 00	 cmp	 DWORD PTR _SymbolFileSize$[ebp], 0
  003ca	7d 0a		 jge	 SHORT $LN43@AddSymbolT

; 1230 :     return -100;

  003cc	b8 9c ff ff ff	 mov	 eax, -100		; ffffff9cH
  003d1	e9 73 0a 00 00	 jmp	 $LN76@AddSymbolT
$LN43@AddSymbolT:

; 1231 :   }
; 1232 :   if ((mode & 1) == 1) {

  003d6	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  003d9	83 e0 01	 and	 eax, 1
  003dc	0f 84 91 00 00
	00		 je	 $LN44@AddSymbolT

; 1233 :     if (LibraryMode==0) {

  003e2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  003e9	75 45		 jne	 SHORT $LN45@AddSymbolT

; 1234 :       if (SymbolFileSize>1024*1024) {

  003eb	81 7d 94 00 00
	10 00		 cmp	 DWORD PTR _SymbolFileSize$[ebp], 1048576 ; 00100000H
  003f2	7e 3a		 jle	 SHORT $LN47@AddSymbolT

; 1235 :         MessageBoxUTF8(LIBMANWindow,SC(20,"Symbol size >1024 kbyte"),SC(9,"Error"),MB_APPLMODAL|MB_OK);

  003f4	6a 00		 push	 0
  003f6	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  003fb	6a 09		 push	 9
  003fd	e8 00 00 00 00	 call	 _StringConvert
  00402	83 c4 08	 add	 esp, 8
  00405	50		 push	 eax
  00406	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@BFFPJHHG@Symbol?5size?5?$DO1024?5kbyte?$AA@
  0040b	6a 14		 push	 20			; 00000014H
  0040d	e8 00 00 00 00	 call	 _StringConvert
  00412	83 c4 08	 add	 esp, 8
  00415	50		 push	 eax
  00416	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  0041b	50		 push	 eax
  0041c	e8 00 00 00 00	 call	 _MessageBoxUTF8
  00421	83 c4 10	 add	 esp, 16			; 00000010H

; 1236 :         return -5;

  00424	b8 fb ff ff ff	 mov	 eax, -5			; fffffffbH
  00429	e9 1b 0a 00 00	 jmp	 $LN76@AddSymbolT
$LN47@AddSymbolT:

; 1237 :       }
; 1238 :     } else {

  0042e	eb 43		 jmp	 SHORT $LN44@AddSymbolT
$LN45@AddSymbolT:

; 1239 :       if (SymbolFileSize>4096*1024) {

  00430	81 7d 94 00 00
	40 00		 cmp	 DWORD PTR _SymbolFileSize$[ebp], 4194304 ; 00400000H
  00437	7e 3a		 jle	 SHORT $LN44@AddSymbolT

; 1240 :         MessageBoxUTF8(LIBMANWindow,SC(61,"Geometry size >4096 kbyte"),SC(9,"Error"),MB_APPLMODAL|MB_OK);

  00439	6a 00		 push	 0
  0043b	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00440	6a 09		 push	 9
  00442	e8 00 00 00 00	 call	 _StringConvert
  00447	83 c4 08	 add	 esp, 8
  0044a	50		 push	 eax
  0044b	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@KFCEOLDI@Geometry?5size?5?$DO4096?5kbyte?$AA@
  00450	6a 3d		 push	 61			; 0000003dH
  00452	e8 00 00 00 00	 call	 _StringConvert
  00457	83 c4 08	 add	 esp, 8
  0045a	50		 push	 eax
  0045b	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  00460	50		 push	 eax
  00461	e8 00 00 00 00	 call	 _MessageBoxUTF8
  00466	83 c4 10	 add	 esp, 16			; 00000010H

; 1241 :         return -5;

  00469	b8 fb ff ff ff	 mov	 eax, -5			; fffffffbH
  0046e	e9 d6 09 00 00	 jmp	 $LN76@AddSymbolT
$LN44@AddSymbolT:

; 1242 :       }
; 1243 :     }
; 1244 :   }
; 1245 :   SymbolName[sizeof(LibName.Text)-1]=0;

  00473	b8 01 00 00 00	 mov	 eax, 1
  00478	6b c8 1f	 imul	 ecx, eax, 31
  0047b	89 8d 8c f3 ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  00481	81 bd 8c f3 ff
	ff 00 02 00 00	 cmp	 DWORD PTR $T1[ebp], 512	; 00000200H
  0048b	73 02		 jae	 SHORT $LN79@AddSymbolT
  0048d	eb 05		 jmp	 SHORT $LN80@AddSymbolT
$LN79@AddSymbolT:
  0048f	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN80@AddSymbolT:
  00494	8b 95 8c f3 ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  0049a	c6 84 15 4c f9
	ff ff 00	 mov	 BYTE PTR _SymbolName$[ebp+edx], 0

; 1246 :   if (Lib[ListNr].NrLibEntries>=MAX_NR_LIB_SYMBOLS) {

  004a2	6b 45 0c 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  004a6	81 b8 48 00 00
	00 00 10 00 00	 cmp	 DWORD PTR _Lib[eax+72], 4096 ; 00001000H
  004b0	7c 0a		 jl	 SHORT $LN49@AddSymbolT

; 1247 :     return -12;

  004b2	b8 f4 ff ff ff	 mov	 eax, -12		; fffffff4H
  004b7	e9 8d 09 00 00	 jmp	 $LN76@AddSymbolT
$LN49@AddSymbolT:

; 1248 :   }
; 1249 :   for (cnt=0;cnt<Lib[ListNr].NrLibEntries;cnt++) {

  004bc	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _cnt$[ebp], 0
  004c6	eb 0f		 jmp	 SHORT $LN4@AddSymbolT
$LN2@AddSymbolT:
  004c8	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _cnt$[ebp]
  004ce	83 c0 01	 add	 eax, 1
  004d1	89 85 64 ff ff
	ff		 mov	 DWORD PTR _cnt$[ebp], eax
$LN4@AddSymbolT:
  004d7	6b 45 0c 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  004db	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR _cnt$[ebp]
  004e1	3b 88 48 00 00
	00		 cmp	 ecx, DWORD PTR _Lib[eax+72]
  004e7	0f 8d 3f 01 00
	00		 jge	 $LN3@AddSymbolT

; 1250 :     if (stricmp(LibNames[ListNr][cnt].Text,SymbolName)==0) {

  004ed	8d 85 4c f9 ff
	ff		 lea	 eax, DWORD PTR _SymbolName$[ebp]
  004f3	50		 push	 eax
  004f4	69 4d 0c 00 80
	02 00		 imul	 ecx, DWORD PTR _ListNr$[ebp], 163840
  004fb	6b 95 64 ff ff
	ff 28		 imul	 edx, DWORD PTR _cnt$[ebp], 40
  00502	8d 84 11 00 00
	00 00		 lea	 eax, DWORD PTR _LibNames[ecx+edx]
  00509	50		 push	 eax
  0050a	e8 00 00 00 00	 call	 _stricmp
  0050f	83 c4 08	 add	 esp, 8
  00512	85 c0		 test	 eax, eax
  00514	0f 85 0d 01 00
	00		 jne	 $LN50@AddSymbolT

; 1251 :       if (SymbolIndexNr==-1) {

  0051a	83 7d 88 ff	 cmp	 DWORD PTR _SymbolIndexNr$[ebp], -1
  0051e	0f 85 03 01 00
	00		 jne	 $LN50@AddSymbolT

; 1252 :         SymbolIndexNr=cnt;

  00524	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _cnt$[ebp]
  0052a	89 45 88	 mov	 DWORD PTR _SymbolIndexNr$[ebp], eax

; 1253 :         memmove(&ExistingLibName,&LibNames[ListNr][cnt],sizeof(LibNameRecord));

  0052d	6a 28		 push	 40			; 00000028H
  0052f	69 45 0c 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  00536	6b 8d 64 ff ff
	ff 28		 imul	 ecx, DWORD PTR _cnt$[ebp], 40
  0053d	8d 94 08 00 00
	00 00		 lea	 edx, DWORD PTR _LibNames[eax+ecx]
  00544	52		 push	 edx
  00545	8d 85 ec f8 ff
	ff		 lea	 eax, DWORD PTR _ExistingLibName$[ebp]
  0054b	50		 push	 eax
  0054c	e8 00 00 00 00	 call	 _memmove
  00551	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1254 :         if ((mode & 1) == 1) {

  00554	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00557	83 e0 01	 and	 eax, 1
  0055a	0f 84 c7 00 00
	00		 je	 $LN50@AddSymbolT

; 1255 :           if (LibraryMode==0) {

  00560	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  00567	75 28		 jne	 SHORT $LN53@AddSymbolT

; 1256 :             sprintf(str,SC(22,"Symbol %s exists, overwrite ?"),SymbolName);

  00569	8d 85 4c f9 ff
	ff		 lea	 eax, DWORD PTR _SymbolName$[ebp]
  0056f	50		 push	 eax
  00570	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@LAEEEFKG@Symbol?5?$CFs?5exists?0?5overwrite?5?$DP?$AA@
  00575	6a 16		 push	 22			; 00000016H
  00577	e8 00 00 00 00	 call	 _StringConvert
  0057c	83 c4 08	 add	 esp, 8
  0057f	50		 push	 eax
  00580	8d 8d 5c fd ff
	ff		 lea	 ecx, DWORD PTR _str$[ebp]
  00586	51		 push	 ecx
  00587	e8 00 00 00 00	 call	 _sprintf
  0058c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1257 :           } else {

  0058f	eb 26		 jmp	 SHORT $LN54@AddSymbolT
$LN53@AddSymbolT:

; 1258 :             sprintf(str,SC(23,"Geometry %s exists, overwrite ?"),SymbolName);

  00591	8d 85 4c f9 ff
	ff		 lea	 eax, DWORD PTR _SymbolName$[ebp]
  00597	50		 push	 eax
  00598	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@LGAHECG@Geometry?5?$CFs?5exists?0?5overwrite?5?$DP?$AA@
  0059d	6a 17		 push	 23			; 00000017H
  0059f	e8 00 00 00 00	 call	 _StringConvert
  005a4	83 c4 08	 add	 esp, 8
  005a7	50		 push	 eax
  005a8	8d 8d 5c fd ff
	ff		 lea	 ecx, DWORD PTR _str$[ebp]
  005ae	51		 push	 ecx
  005af	e8 00 00 00 00	 call	 _sprintf
  005b4	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN54@AddSymbolT:

; 1259 :           }
; 1260 :           res=MessageBoxUTF8(LIBMANWindow,str,SC(60,"Message"),MB_APPLMODAL|MB_YESNOCANCEL);

  005b7	6a 03		 push	 3
  005b9	68 00 00 00 00	 push	 OFFSET ??_C@_07BEIHKDLJ@Message?$AA@
  005be	6a 3c		 push	 60			; 0000003cH
  005c0	e8 00 00 00 00	 call	 _StringConvert
  005c5	83 c4 08	 add	 esp, 8
  005c8	50		 push	 eax
  005c9	8d 85 5c fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  005cf	50		 push	 eax
  005d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  005d6	51		 push	 ecx
  005d7	e8 00 00 00 00	 call	 _MessageBoxUTF8
  005dc	83 c4 10	 add	 esp, 16			; 00000010H
  005df	89 45 a0	 mov	 DWORD PTR _res$[ebp], eax

; 1261 :           switch (res) {

  005e2	8b 45 a0	 mov	 eax, DWORD PTR _res$[ebp]
  005e5	89 85 84 f3 ff
	ff		 mov	 DWORD PTR tv306[ebp], eax
  005eb	83 bd 84 f3 ff
	ff 02		 cmp	 DWORD PTR tv306[ebp], 2
  005f2	74 29		 je	 SHORT $LN57@AddSymbolT
  005f4	83 bd 84 f3 ff
	ff 06		 cmp	 DWORD PTR tv306[ebp], 6
  005fb	74 0b		 je	 SHORT $LN55@AddSymbolT
  005fd	83 bd 84 f3 ff
	ff 07		 cmp	 DWORD PTR tv306[ebp], 7
  00604	74 0d		 je	 SHORT $LN56@AddSymbolT
  00606	eb 1f		 jmp	 SHORT $LN50@AddSymbolT
$LN55@AddSymbolT:

; 1262 :             case IDYES:
; 1263 :               mode|=2;

  00608	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  0060b	83 c8 02	 or	 eax, 2
  0060e	89 45 10	 mov	 DWORD PTR _mode$[ebp], eax

; 1264 :               break;

  00611	eb 14		 jmp	 SHORT $LN50@AddSymbolT
$LN56@AddSymbolT:

; 1265 :             case IDNO:
; 1266 :               return -10;

  00613	b8 f6 ff ff ff	 mov	 eax, -10		; fffffff6H
  00618	e9 2c 08 00 00	 jmp	 $LN76@AddSymbolT
$LN57@AddSymbolT:

; 1267 :             case IDCANCEL:
; 1268 :               return -20;

  0061d	b8 ec ff ff ff	 mov	 eax, -20		; ffffffecH
  00622	e9 22 08 00 00	 jmp	 $LN76@AddSymbolT
$LN50@AddSymbolT:

; 1269 :           }
; 1270 :         }
; 1271 :       }
; 1272 :     }
; 1273 :   }

  00627	e9 9c fe ff ff	 jmp	 $LN2@AddSymbolT
$LN3@AddSymbolT:

; 1274 :   if ((mode & 2)
; 1275 :      &&

  0062c	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  0062f	83 e0 02	 and	 eax, 2
  00632	0f 84 9b 00 00
	00		 je	 $LN58@AddSymbolT
  00638	83 7d 88 ff	 cmp	 DWORD PTR _SymbolIndexNr$[ebp], -1
  0063c	0f 85 91 00 00
	00		 jne	 $LN58@AddSymbolT

; 1276 :      (SymbolIndexNr==-1)) {
; 1277 :     if (mode & 1) {

  00642	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00645	83 e0 01	 and	 eax, 1
  00648	74 7f		 je	 SHORT $LN59@AddSymbolT

; 1278 :       if (LibraryMode==0) {

  0064a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  00651	75 28		 jne	 SHORT $LN60@AddSymbolT

; 1279 :         sprintf(str,SC(24,"Symbol %s not found"),SymbolName);

  00653	8d 85 4c f9 ff
	ff		 lea	 eax, DWORD PTR _SymbolName$[ebp]
  00659	50		 push	 eax
  0065a	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@OIDBEMPJ@Symbol?5?$CFs?5not?5found?$AA@
  0065f	6a 18		 push	 24			; 00000018H
  00661	e8 00 00 00 00	 call	 _StringConvert
  00666	83 c4 08	 add	 esp, 8
  00669	50		 push	 eax
  0066a	8d 8d 5c fd ff
	ff		 lea	 ecx, DWORD PTR _str$[ebp]
  00670	51		 push	 ecx
  00671	e8 00 00 00 00	 call	 _sprintf
  00676	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1280 :       } else {

  00679	eb 26		 jmp	 SHORT $LN61@AddSymbolT
$LN60@AddSymbolT:

; 1281 :         sprintf(str,SC(25,"Geometry %s not found"),SymbolName);

  0067b	8d 85 4c f9 ff
	ff		 lea	 eax, DWORD PTR _SymbolName$[ebp]
  00681	50		 push	 eax
  00682	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@OCMKLJEI@Geometry?5?$CFs?5not?5found?$AA@
  00687	6a 19		 push	 25			; 00000019H
  00689	e8 00 00 00 00	 call	 _StringConvert
  0068e	83 c4 08	 add	 esp, 8
  00691	50		 push	 eax
  00692	8d 8d 5c fd ff
	ff		 lea	 ecx, DWORD PTR _str$[ebp]
  00698	51		 push	 ecx
  00699	e8 00 00 00 00	 call	 _sprintf
  0069e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN61@AddSymbolT:

; 1282 :       }
; 1283 :       MessageBoxUTF8(LIBMANWindow,str,SC(9,"Error"),MB_APPLMODAL|MB_OK);

  006a1	6a 00		 push	 0
  006a3	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  006a8	6a 09		 push	 9
  006aa	e8 00 00 00 00	 call	 _StringConvert
  006af	83 c4 08	 add	 esp, 8
  006b2	50		 push	 eax
  006b3	8d 85 5c fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  006b9	50		 push	 eax
  006ba	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  006c0	51		 push	 ecx
  006c1	e8 00 00 00 00	 call	 _MessageBoxUTF8
  006c6	83 c4 10	 add	 esp, 16			; 00000010H
$LN59@AddSymbolT:

; 1284 :     }
; 1285 :     return -10;

  006c9	b8 f6 ff ff ff	 mov	 eax, -10		; fffffff6H
  006ce	e9 76 07 00 00	 jmp	 $LN76@AddSymbolT
$LN58@AddSymbolT:

; 1286 :   }
; 1287 :   MakeBackup(ListNr);

  006d3	8b 45 0c	 mov	 eax, DWORD PTR _ListNr$[ebp]
  006d6	50		 push	 eax
  006d7	e8 00 00 00 00	 call	 _MakeBackup
  006dc	83 c4 04	 add	 esp, 4

; 1288 :   if ((mode & 2) == 0) {

  006df	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  006e2	83 e0 02	 and	 eax, 2
  006e5	0f 85 60 04 00
	00		 jne	 $LN62@AddSymbolT

; 1289 : // **************************************************************************************************
; 1290 : // **************************************************************************************************
; 1291 : //
; 1292 : // Add symbol to library
; 1293 : //
; 1294 :     if (Lib[ListNr].NrLibEntries < Lib[ListNr].MaxNrLibEntries) {

  006eb	6b 45 0c 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  006ef	6b 4d 0c 50	 imul	 ecx, DWORD PTR _ListNr$[ebp], 80
  006f3	8b 90 48 00 00
	00		 mov	 edx, DWORD PTR _Lib[eax+72]
  006f9	3b 91 4c 00 00
	00		 cmp	 edx, DWORD PTR _Lib[ecx+76]
  006ff	0f 8d 95 01 00
	00		 jge	 $LN64@AddSymbolT

; 1295 :       memset(&LibName,0,sizeof(LibNameRecord));

  00705	6a 28		 push	 40			; 00000028H
  00707	6a 00		 push	 0
  00709	8d 85 1c f9 ff
	ff		 lea	 eax, DWORD PTR _LibName$[ebp]
  0070f	50		 push	 eax
  00710	e8 00 00 00 00	 call	 _memset
  00715	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1296 :       strcpy(LibName.Text,SymbolName);

  00718	8d 85 4c f9 ff
	ff		 lea	 eax, DWORD PTR _SymbolName$[ebp]
  0071e	50		 push	 eax
  0071f	8d 8d 1c f9 ff
	ff		 lea	 ecx, DWORD PTR _LibName$[ebp]
  00725	51		 push	 ecx
  00726	e8 00 00 00 00	 call	 _strcpy
  0072b	83 c4 08	 add	 esp, 8

; 1297 :       if (AddSymbolToList(ListNr,SymbolName,0)==-1) {

  0072e	6a 00		 push	 0
  00730	8d 85 4c f9 ff
	ff		 lea	 eax, DWORD PTR _SymbolName$[ebp]
  00736	50		 push	 eax
  00737	8b 4d 0c	 mov	 ecx, DWORD PTR _ListNr$[ebp]
  0073a	51		 push	 ecx
  0073b	e8 00 00 00 00	 call	 _AddSymbolToList
  00740	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1298 :       }
; 1299 :       LibName.Pos=LibraryFileSize;

  00743	8b 45 c4	 mov	 eax, DWORD PTR _LibraryFileSize$[ebp]
  00746	89 85 3c f9 ff
	ff		 mov	 DWORD PTR _LibName$[ebp+32], eax

; 1300 :       LibName.Length=SymbolFileSize;

  0074c	8b 45 94	 mov	 eax, DWORD PTR _SymbolFileSize$[ebp]
  0074f	89 85 40 f9 ff
	ff		 mov	 DWORD PTR _LibName$[ebp+36], eax

; 1301 :       memmove(&LibNames[ListNr][Lib[ListNr].NrLibEntries],&LibName,sizeof(LibNameRecord));

  00755	6a 28		 push	 40			; 00000028H
  00757	8d 85 1c f9 ff
	ff		 lea	 eax, DWORD PTR _LibName$[ebp]
  0075d	50		 push	 eax
  0075e	69 4d 0c 00 80
	02 00		 imul	 ecx, DWORD PTR _ListNr$[ebp], 163840
  00765	6b 55 0c 50	 imul	 edx, DWORD PTR _ListNr$[ebp], 80
  00769	6b 82 48 00 00
	00 28		 imul	 eax, DWORD PTR _Lib[edx+72], 40
  00770	8d 8c 01 00 00
	00 00		 lea	 ecx, DWORD PTR _LibNames[ecx+eax]
  00777	51		 push	 ecx
  00778	e8 00 00 00 00	 call	 _memmove
  0077d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1302 :       Lib[ListNr].NrLibEntries++;

  00780	6b 45 0c 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  00784	8b 88 48 00 00
	00		 mov	 ecx, DWORD PTR _Lib[eax+72]
  0078a	83 c1 01	 add	 ecx, 1
  0078d	6b 55 0c 50	 imul	 edx, DWORD PTR _ListNr$[ebp], 80
  00791	89 8a 48 00 00
	00		 mov	 DWORD PTR _Lib[edx+72], ecx

; 1303 :       fp=FileOpenUTF8(LibraryFile[ListNr]);

  00797	8b 45 0c	 mov	 eax, DWORD PTR _ListNr$[ebp]
  0079a	c1 e0 09	 shl	 eax, 9
  0079d	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  007a2	50		 push	 eax
  007a3	e8 00 00 00 00	 call	 _FileOpenUTF8
  007a8	83 c4 04	 add	 esp, 4
  007ab	89 45 f4	 mov	 DWORD PTR _fp$[ebp], eax

; 1304 :       FileSeek(fp,0);

  007ae	6a 00		 push	 0
  007b0	8b 45 f4	 mov	 eax, DWORD PTR _fp$[ebp]
  007b3	50		 push	 eax
  007b4	e8 00 00 00 00	 call	 _FileSeek
  007b9	83 c4 08	 add	 esp, 8

; 1305 :       FileWrite(fp,&Lib[ListNr],sizeof(LibRecord),&result);

  007bc	8d 45 d0	 lea	 eax, DWORD PTR _result$[ebp]
  007bf	50		 push	 eax
  007c0	6a 50		 push	 80			; 00000050H
  007c2	6b 4d 0c 50	 imul	 ecx, DWORD PTR _ListNr$[ebp], 80
  007c6	81 c1 00 00 00
	00		 add	 ecx, OFFSET _Lib
  007cc	51		 push	 ecx
  007cd	8b 55 f4	 mov	 edx, DWORD PTR _fp$[ebp]
  007d0	52		 push	 edx
  007d1	e8 00 00 00 00	 call	 _FileWrite
  007d6	83 c4 10	 add	 esp, 16			; 00000010H

; 1306 :       FileSeek(fp,sizeof(LibRecord)+(Lib[ListNr].NrLibEntries-1)*sizeof(LibNameRecord));

  007d9	6b 45 0c 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  007dd	8b 88 48 00 00
	00		 mov	 ecx, DWORD PTR _Lib[eax+72]
  007e3	83 e9 01	 sub	 ecx, 1
  007e6	6b d1 28	 imul	 edx, ecx, 40
  007e9	83 c2 50	 add	 edx, 80			; 00000050H
  007ec	52		 push	 edx
  007ed	8b 45 f4	 mov	 eax, DWORD PTR _fp$[ebp]
  007f0	50		 push	 eax
  007f1	e8 00 00 00 00	 call	 _FileSeek
  007f6	83 c4 08	 add	 esp, 8

; 1307 :       FileWrite(fp,&LibName,sizeof(LibNameRecord),&result);

  007f9	8d 45 d0	 lea	 eax, DWORD PTR _result$[ebp]
  007fc	50		 push	 eax
  007fd	6a 28		 push	 40			; 00000028H
  007ff	8d 8d 1c f9 ff
	ff		 lea	 ecx, DWORD PTR _LibName$[ebp]
  00805	51		 push	 ecx
  00806	8b 55 f4	 mov	 edx, DWORD PTR _fp$[ebp]
  00809	52		 push	 edx
  0080a	e8 00 00 00 00	 call	 _FileWrite
  0080f	83 c4 10	 add	 esp, 16			; 00000010H

; 1308 :       FileSeek(fp,LibraryFileSize);

  00812	8b 45 c4	 mov	 eax, DWORD PTR _LibraryFileSize$[ebp]
  00815	50		 push	 eax
  00816	8b 4d f4	 mov	 ecx, DWORD PTR _fp$[ebp]
  00819	51		 push	 ecx
  0081a	e8 00 00 00 00	 call	 _FileSeek
  0081f	83 c4 08	 add	 esp, 8

; 1309 :       fp3=FileOpenReadOnlyUTF8(SymbolFile);

  00822	8b 45 08	 mov	 eax, DWORD PTR _SymbolFile$[ebp]
  00825	50		 push	 eax
  00826	e8 00 00 00 00	 call	 _FileOpenReadOnlyUTF8
  0082b	83 c4 04	 add	 esp, 4
  0082e	89 45 dc	 mov	 DWORD PTR _fp3$[ebp], eax

; 1310 :       result=1;

  00831	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN7@AddSymbolT:

; 1311 :       while (result>0) {

  00838	83 7d d0 00	 cmp	 DWORD PTR _result$[ebp], 0
  0083c	7e 3f		 jle	 SHORT $LN8@AddSymbolT

; 1312 :         FileRead(fp3,Buf,BufSize,&result);

  0083e	8d 45 d0	 lea	 eax, DWORD PTR _result$[ebp]
  00841	50		 push	 eax
  00842	68 00 00 04 00	 push	 262144			; 00040000H
  00847	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _Buf
  0084d	51		 push	 ecx
  0084e	8b 55 dc	 mov	 edx, DWORD PTR _fp3$[ebp]
  00851	52		 push	 edx
  00852	e8 00 00 00 00	 call	 _FileRead
  00857	83 c4 10	 add	 esp, 16			; 00000010H

; 1313 :         if (result>0) FileWrite(fp,Buf,result,&res2);

  0085a	83 7d d0 00	 cmp	 DWORD PTR _result$[ebp], 0
  0085e	7e 1b		 jle	 SHORT $LN67@AddSymbolT
  00860	8d 45 b8	 lea	 eax, DWORD PTR _res2$[ebp]
  00863	50		 push	 eax
  00864	8b 4d d0	 mov	 ecx, DWORD PTR _result$[ebp]
  00867	51		 push	 ecx
  00868	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _Buf
  0086e	52		 push	 edx
  0086f	8b 45 f4	 mov	 eax, DWORD PTR _fp$[ebp]
  00872	50		 push	 eax
  00873	e8 00 00 00 00	 call	 _FileWrite
  00878	83 c4 10	 add	 esp, 16			; 00000010H
$LN67@AddSymbolT:

; 1314 :       }

  0087b	eb bb		 jmp	 SHORT $LN7@AddSymbolT
$LN8@AddSymbolT:

; 1315 :       FileClose(fp3);

  0087d	8b 45 dc	 mov	 eax, DWORD PTR _fp3$[ebp]
  00880	50		 push	 eax
  00881	e8 00 00 00 00	 call	 _FileClose
  00886	83 c4 04	 add	 esp, 4

; 1316 :       FileClose(fp);

  00889	8b 45 f4	 mov	 eax, DWORD PTR _fp$[ebp]
  0088c	50		 push	 eax
  0088d	e8 00 00 00 00	 call	 _FileClose
  00892	83 c4 04	 add	 esp, 4

; 1317 :     } else {

  00895	e9 ac 02 00 00	 jmp	 $LN65@AddSymbolT
$LN64@AddSymbolT:

; 1318 : // **************************************************************************************************
; 1319 : // **************************************************************************************************
; 1320 : //
; 1321 : // Add symbol to library, and extend the number of symbols
; 1322 : //
; 1323 :       sprintf(str,"%s\\library.$#@",DefaultLibraryPath);

  0089a	68 00 00 00 00	 push	 OFFSET _DefaultLibraryPath
  0089f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@ELJOPBKN@?$CFs?2library?4$?$CD?$EA?$AA@
  008a4	8d 85 5c fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  008aa	50		 push	 eax
  008ab	e8 00 00 00 00	 call	 _sprintf
  008b0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1324 : 
; 1325 :       if ((fp2=FileOpenWriteUTF8(str))>0) {

  008b3	8d 85 5c fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  008b9	50		 push	 eax
  008ba	e8 00 00 00 00	 call	 _FileOpenWriteUTF8
  008bf	83 c4 04	 add	 esp, 4
  008c2	89 45 e8	 mov	 DWORD PTR _fp2$[ebp], eax
  008c5	83 7d e8 00	 cmp	 DWORD PTR _fp2$[ebp], 0
  008c9	0f 8e 77 02 00
	00		 jle	 $LN65@AddSymbolT

; 1326 :         fp=FileOpenUTF8(LibraryFile[ListNr]);

  008cf	8b 45 0c	 mov	 eax, DWORD PTR _ListNr$[ebp]
  008d2	c1 e0 09	 shl	 eax, 9
  008d5	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  008da	50		 push	 eax
  008db	e8 00 00 00 00	 call	 _FileOpenUTF8
  008e0	83 c4 04	 add	 esp, 4
  008e3	89 45 f4	 mov	 DWORD PTR _fp$[ebp], eax

; 1327 :         FileSeek(fp,sizeof(LibRecord)+Lib[ListNr].MaxNrLibEntries*sizeof(LibNameRecord));

  008e6	6b 45 0c 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  008ea	6b 88 4c 00 00
	00 28		 imul	 ecx, DWORD PTR _Lib[eax+76], 40
  008f1	83 c1 50	 add	 ecx, 80			; 00000050H
  008f4	51		 push	 ecx
  008f5	8b 55 f4	 mov	 edx, DWORD PTR _fp$[ebp]
  008f8	52		 push	 edx
  008f9	e8 00 00 00 00	 call	 _FileSeek
  008fe	83 c4 08	 add	 esp, 8

; 1328 :         Lib[ListNr].MaxNrLibEntries+=100;

  00901	6b 45 0c 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  00905	8b 88 4c 00 00
	00		 mov	 ecx, DWORD PTR _Lib[eax+76]
  0090b	83 c1 64	 add	 ecx, 100		; 00000064H
  0090e	6b 55 0c 50	 imul	 edx, DWORD PTR _ListNr$[ebp], 80
  00912	89 8a 4c 00 00
	00		 mov	 DWORD PTR _Lib[edx+76], ecx

; 1329 :         for (cnt=0;cnt<Lib[ListNr].NrLibEntries;cnt++) {

  00918	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _cnt$[ebp], 0
  00922	eb 0f		 jmp	 SHORT $LN11@AddSymbolT
$LN9@AddSymbolT:
  00924	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _cnt$[ebp]
  0092a	83 c0 01	 add	 eax, 1
  0092d	89 85 64 ff ff
	ff		 mov	 DWORD PTR _cnt$[ebp], eax
$LN11@AddSymbolT:
  00933	6b 45 0c 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  00937	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR _cnt$[ebp]
  0093d	3b 88 48 00 00
	00		 cmp	 ecx, DWORD PTR _Lib[eax+72]
  00943	7d 32		 jge	 SHORT $LN10@AddSymbolT

; 1330 :           LibNames[ListNr][cnt].Pos+=100*sizeof(LibNameRecord);

  00945	69 45 0c 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  0094c	6b 8d 64 ff ff
	ff 28		 imul	 ecx, DWORD PTR _cnt$[ebp], 40
  00953	8b 94 08 20 00
	00 00		 mov	 edx, DWORD PTR _LibNames[eax+ecx+32]
  0095a	81 c2 a0 0f 00
	00		 add	 edx, 4000		; 00000fa0H
  00960	6b 85 64 ff ff
	ff 28		 imul	 eax, DWORD PTR _cnt$[ebp], 40
  00967	69 4d 0c 00 80
	02 00		 imul	 ecx, DWORD PTR _ListNr$[ebp], 163840
  0096e	89 94 01 20 00
	00 00		 mov	 DWORD PTR _LibNames[ecx+eax+32], edx

; 1331 :         }

  00975	eb ad		 jmp	 SHORT $LN9@AddSymbolT
$LN10@AddSymbolT:

; 1332 :         strcpy(LibNames[ListNr][Lib[ListNr].NrLibEntries].Text,SymbolName);

  00977	8d 85 4c f9 ff
	ff		 lea	 eax, DWORD PTR _SymbolName$[ebp]
  0097d	50		 push	 eax
  0097e	69 4d 0c 00 80
	02 00		 imul	 ecx, DWORD PTR _ListNr$[ebp], 163840
  00985	6b 55 0c 50	 imul	 edx, DWORD PTR _ListNr$[ebp], 80
  00989	6b 82 48 00 00
	00 28		 imul	 eax, DWORD PTR _Lib[edx+72], 40
  00990	8d 8c 01 00 00
	00 00		 lea	 ecx, DWORD PTR _LibNames[ecx+eax]
  00997	51		 push	 ecx
  00998	e8 00 00 00 00	 call	 _strcpy
  0099d	83 c4 08	 add	 esp, 8

; 1333 :         AddSymbolToList(ListNr,SymbolName,0);

  009a0	6a 00		 push	 0
  009a2	8d 85 4c f9 ff
	ff		 lea	 eax, DWORD PTR _SymbolName$[ebp]
  009a8	50		 push	 eax
  009a9	8b 4d 0c	 mov	 ecx, DWORD PTR _ListNr$[ebp]
  009ac	51		 push	 ecx
  009ad	e8 00 00 00 00	 call	 _AddSymbolToList
  009b2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1334 : 
; 1335 :         LibNames[ListNr][Lib[ListNr].NrLibEntries].Pos=LibraryFileSize+100*sizeof(LibNameRecord);

  009b5	8b 45 c4	 mov	 eax, DWORD PTR _LibraryFileSize$[ebp]
  009b8	05 a0 0f 00 00	 add	 eax, 4000		; 00000fa0H
  009bd	69 4d 0c 00 80
	02 00		 imul	 ecx, DWORD PTR _ListNr$[ebp], 163840
  009c4	6b 55 0c 50	 imul	 edx, DWORD PTR _ListNr$[ebp], 80
  009c8	6b 92 48 00 00
	00 28		 imul	 edx, DWORD PTR _Lib[edx+72], 40
  009cf	89 84 11 20 00
	00 00		 mov	 DWORD PTR _LibNames[ecx+edx+32], eax

; 1336 :         LibNames[ListNr][Lib[ListNr].NrLibEntries].Length=SymbolFileSize;

  009d6	69 45 0c 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  009dd	6b 4d 0c 50	 imul	 ecx, DWORD PTR _ListNr$[ebp], 80
  009e1	6b 91 48 00 00
	00 28		 imul	 edx, DWORD PTR _Lib[ecx+72], 40
  009e8	8b 4d 94	 mov	 ecx, DWORD PTR _SymbolFileSize$[ebp]
  009eb	89 8c 10 24 00
	00 00		 mov	 DWORD PTR _LibNames[eax+edx+36], ecx

; 1337 :         Lib[ListNr].NrLibEntries++;

  009f2	6b 45 0c 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  009f6	8b 88 48 00 00
	00		 mov	 ecx, DWORD PTR _Lib[eax+72]
  009fc	83 c1 01	 add	 ecx, 1
  009ff	6b 55 0c 50	 imul	 edx, DWORD PTR _ListNr$[ebp], 80
  00a03	89 8a 48 00 00
	00		 mov	 DWORD PTR _Lib[edx+72], ecx

; 1338 : 
; 1339 :         FileWrite(fp2,&Lib[ListNr],sizeof(LibRecord),&result);

  00a09	8d 45 d0	 lea	 eax, DWORD PTR _result$[ebp]
  00a0c	50		 push	 eax
  00a0d	6a 50		 push	 80			; 00000050H
  00a0f	6b 4d 0c 50	 imul	 ecx, DWORD PTR _ListNr$[ebp], 80
  00a13	81 c1 00 00 00
	00		 add	 ecx, OFFSET _Lib
  00a19	51		 push	 ecx
  00a1a	8b 55 e8	 mov	 edx, DWORD PTR _fp2$[ebp]
  00a1d	52		 push	 edx
  00a1e	e8 00 00 00 00	 call	 _FileWrite
  00a23	83 c4 10	 add	 esp, 16			; 00000010H

; 1340 :         FileWrite(fp2,&LibNames[ListNr],Lib[ListNr].MaxNrLibEntries*sizeof(LibNameRecord),&result);

  00a26	8d 45 d0	 lea	 eax, DWORD PTR _result$[ebp]
  00a29	50		 push	 eax
  00a2a	6b 4d 0c 50	 imul	 ecx, DWORD PTR _ListNr$[ebp], 80
  00a2e	6b 91 4c 00 00
	00 28		 imul	 edx, DWORD PTR _Lib[ecx+76], 40
  00a35	52		 push	 edx
  00a36	69 45 0c 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  00a3d	05 00 00 00 00	 add	 eax, OFFSET _LibNames
  00a42	50		 push	 eax
  00a43	8b 4d e8	 mov	 ecx, DWORD PTR _fp2$[ebp]
  00a46	51		 push	 ecx
  00a47	e8 00 00 00 00	 call	 _FileWrite
  00a4c	83 c4 10	 add	 esp, 16			; 00000010H

; 1341 :         result=1;

  00a4f	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN12@AddSymbolT:

; 1342 :         while (result>0) {

  00a56	83 7d d0 00	 cmp	 DWORD PTR _result$[ebp], 0
  00a5a	7e 3f		 jle	 SHORT $LN13@AddSymbolT

; 1343 :           FileRead(fp,Buf,BufSize,&result);

  00a5c	8d 45 d0	 lea	 eax, DWORD PTR _result$[ebp]
  00a5f	50		 push	 eax
  00a60	68 00 00 04 00	 push	 262144			; 00040000H
  00a65	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _Buf
  00a6b	51		 push	 ecx
  00a6c	8b 55 f4	 mov	 edx, DWORD PTR _fp$[ebp]
  00a6f	52		 push	 edx
  00a70	e8 00 00 00 00	 call	 _FileRead
  00a75	83 c4 10	 add	 esp, 16			; 00000010H

; 1344 :           if (result>0) FileWrite(fp2,Buf,result,&res2);

  00a78	83 7d d0 00	 cmp	 DWORD PTR _result$[ebp], 0
  00a7c	7e 1b		 jle	 SHORT $LN69@AddSymbolT
  00a7e	8d 45 b8	 lea	 eax, DWORD PTR _res2$[ebp]
  00a81	50		 push	 eax
  00a82	8b 4d d0	 mov	 ecx, DWORD PTR _result$[ebp]
  00a85	51		 push	 ecx
  00a86	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _Buf
  00a8c	52		 push	 edx
  00a8d	8b 45 e8	 mov	 eax, DWORD PTR _fp2$[ebp]
  00a90	50		 push	 eax
  00a91	e8 00 00 00 00	 call	 _FileWrite
  00a96	83 c4 10	 add	 esp, 16			; 00000010H
$LN69@AddSymbolT:

; 1345 :         }

  00a99	eb bb		 jmp	 SHORT $LN12@AddSymbolT
$LN13@AddSymbolT:

; 1346 :         FileClose(fp);

  00a9b	8b 45 f4	 mov	 eax, DWORD PTR _fp$[ebp]
  00a9e	50		 push	 eax
  00a9f	e8 00 00 00 00	 call	 _FileClose
  00aa4	83 c4 04	 add	 esp, 4

; 1347 :         fp3=FileOpenReadOnly(SymbolFile);

  00aa7	8b 45 08	 mov	 eax, DWORD PTR _SymbolFile$[ebp]
  00aaa	50		 push	 eax
  00aab	e8 00 00 00 00	 call	 _FileOpenReadOnly
  00ab0	83 c4 04	 add	 esp, 4
  00ab3	89 45 dc	 mov	 DWORD PTR _fp3$[ebp], eax

; 1348 :         result=1;

  00ab6	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN14@AddSymbolT:

; 1349 :         while (result>0) {

  00abd	83 7d d0 00	 cmp	 DWORD PTR _result$[ebp], 0
  00ac1	7e 3f		 jle	 SHORT $LN15@AddSymbolT

; 1350 :           FileRead(fp3,Buf,BufSize,&result);

  00ac3	8d 45 d0	 lea	 eax, DWORD PTR _result$[ebp]
  00ac6	50		 push	 eax
  00ac7	68 00 00 04 00	 push	 262144			; 00040000H
  00acc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _Buf
  00ad2	51		 push	 ecx
  00ad3	8b 55 dc	 mov	 edx, DWORD PTR _fp3$[ebp]
  00ad6	52		 push	 edx
  00ad7	e8 00 00 00 00	 call	 _FileRead
  00adc	83 c4 10	 add	 esp, 16			; 00000010H

; 1351 :           if (result>0) FileWrite(fp,Buf,result,&res2);

  00adf	83 7d d0 00	 cmp	 DWORD PTR _result$[ebp], 0
  00ae3	7e 1b		 jle	 SHORT $LN70@AddSymbolT
  00ae5	8d 45 b8	 lea	 eax, DWORD PTR _res2$[ebp]
  00ae8	50		 push	 eax
  00ae9	8b 4d d0	 mov	 ecx, DWORD PTR _result$[ebp]
  00aec	51		 push	 ecx
  00aed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _Buf
  00af3	52		 push	 edx
  00af4	8b 45 f4	 mov	 eax, DWORD PTR _fp$[ebp]
  00af7	50		 push	 eax
  00af8	e8 00 00 00 00	 call	 _FileWrite
  00afd	83 c4 10	 add	 esp, 16			; 00000010H
$LN70@AddSymbolT:

; 1352 :         }

  00b00	eb bb		 jmp	 SHORT $LN14@AddSymbolT
$LN15@AddSymbolT:

; 1353 :         FileClose(fp3);

  00b02	8b 45 dc	 mov	 eax, DWORD PTR _fp3$[ebp]
  00b05	50		 push	 eax
  00b06	e8 00 00 00 00	 call	 _FileClose
  00b0b	83 c4 04	 add	 esp, 4

; 1354 :         FileClose(fp2);

  00b0e	8b 45 e8	 mov	 eax, DWORD PTR _fp2$[ebp]
  00b11	50		 push	 eax
  00b12	e8 00 00 00 00	 call	 _FileClose
  00b17	83 c4 04	 add	 esp, 4

; 1355 : 
; 1356 :         CopyFileUTF8(str,LibraryFile[ListNr],0);

  00b1a	6a 00		 push	 0
  00b1c	8b 45 0c	 mov	 eax, DWORD PTR _ListNr$[ebp]
  00b1f	c1 e0 09	 shl	 eax, 9
  00b22	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  00b27	50		 push	 eax
  00b28	8d 8d 5c fd ff
	ff		 lea	 ecx, DWORD PTR _str$[ebp]
  00b2e	51		 push	 ecx
  00b2f	e8 00 00 00 00	 call	 _CopyFileUTF8
  00b34	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1357 :         DeleteFileUTF8(str);

  00b37	8d 85 5c fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  00b3d	50		 push	 eax
  00b3e	e8 00 00 00 00	 call	 _DeleteFileUTF8
  00b43	83 c4 04	 add	 esp, 4
$LN65@AddSymbolT:

; 1358 :       }
; 1359 :     }
; 1360 :   } else {

  00b46	e9 f2 02 00 00	 jmp	 $LN63@AddSymbolT
$LN62@AddSymbolT:

; 1361 : // **************************************************************************************************
; 1362 : // **************************************************************************************************
; 1363 : //
; 1364 : // Replace symbol in library
; 1365 : //
; 1366 :     sprintf(str,"%s\\library.$#@",DefaultLibraryPath);

  00b4b	68 00 00 00 00	 push	 OFFSET _DefaultLibraryPath
  00b50	68 00 00 00 00	 push	 OFFSET ??_C@_0P@ELJOPBKN@?$CFs?2library?4$?$CD?$EA?$AA@
  00b55	8d 85 5c fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  00b5b	50		 push	 eax
  00b5c	e8 00 00 00 00	 call	 _sprintf
  00b61	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1367 : 
; 1368 :     if ((fp2=FileOpenWriteUTF8(str))>0) {

  00b64	8d 85 5c fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  00b6a	50		 push	 eax
  00b6b	e8 00 00 00 00	 call	 _FileOpenWriteUTF8
  00b70	83 c4 04	 add	 esp, 4
  00b73	89 45 e8	 mov	 DWORD PTR _fp2$[ebp], eax
  00b76	83 7d e8 00	 cmp	 DWORD PTR _fp2$[ebp], 0
  00b7a	0f 8e bd 02 00
	00		 jle	 $LN63@AddSymbolT

; 1369 :       fp=FileOpenUTF8(LibraryFile[ListNr]);

  00b80	8b 45 0c	 mov	 eax, DWORD PTR _ListNr$[ebp]
  00b83	c1 e0 09	 shl	 eax, 9
  00b86	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  00b8b	50		 push	 eax
  00b8c	e8 00 00 00 00	 call	 _FileOpenUTF8
  00b91	83 c4 04	 add	 esp, 4
  00b94	89 45 f4	 mov	 DWORD PTR _fp$[ebp], eax

; 1370 :       FilePos=LibNames[ListNr][SymbolIndexNr].Pos;

  00b97	69 45 0c 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  00b9e	6b 4d 88 28	 imul	 ecx, DWORD PTR _SymbolIndexNr$[ebp], 40
  00ba2	8b 94 08 20 00
	00 00		 mov	 edx, DWORD PTR _LibNames[eax+ecx+32]
  00ba9	89 95 7c ff ff
	ff		 mov	 DWORD PTR _FilePos$[ebp], edx

; 1371 :       LibSymbolDataPos=sizeof(LibRecord)+Lib[ListNr].MaxNrLibEntries*sizeof(LibNameRecord);

  00baf	6b 45 0c 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  00bb3	6b 88 4c 00 00
	00 28		 imul	 ecx, DWORD PTR _Lib[eax+76], 40
  00bba	83 c1 50	 add	 ecx, 80			; 00000050H
  00bbd	89 4d ac	 mov	 DWORD PTR _LibSymbolDataPos$[ebp], ecx

; 1372 :       for (cnt=SymbolIndexNr+1;cnt<Lib[ListNr].NrLibEntries;cnt++) {

  00bc0	8b 45 88	 mov	 eax, DWORD PTR _SymbolIndexNr$[ebp]
  00bc3	83 c0 01	 add	 eax, 1
  00bc6	89 85 64 ff ff
	ff		 mov	 DWORD PTR _cnt$[ebp], eax
  00bcc	eb 0f		 jmp	 SHORT $LN18@AddSymbolT
$LN16@AddSymbolT:
  00bce	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _cnt$[ebp]
  00bd4	83 c0 01	 add	 eax, 1
  00bd7	89 85 64 ff ff
	ff		 mov	 DWORD PTR _cnt$[ebp], eax
$LN18@AddSymbolT:
  00bdd	6b 45 0c 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  00be1	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR _cnt$[ebp]
  00be7	3b 88 48 00 00
	00		 cmp	 ecx, DWORD PTR _Lib[eax+72]
  00bed	7d 35		 jge	 SHORT $LN17@AddSymbolT

; 1373 :         LibNames[ListNr][cnt].Pos+=SymbolFileSize-ExistingLibName.Length;

  00bef	69 45 0c 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  00bf6	6b 8d 64 ff ff
	ff 28		 imul	 ecx, DWORD PTR _cnt$[ebp], 40
  00bfd	8b 55 94	 mov	 edx, DWORD PTR _SymbolFileSize$[ebp]
  00c00	2b 95 10 f9 ff
	ff		 sub	 edx, DWORD PTR _ExistingLibName$[ebp+36]
  00c06	03 94 08 20 00
	00 00		 add	 edx, DWORD PTR _LibNames[eax+ecx+32]
  00c0d	6b 85 64 ff ff
	ff 28		 imul	 eax, DWORD PTR _cnt$[ebp], 40
  00c14	69 4d 0c 00 80
	02 00		 imul	 ecx, DWORD PTR _ListNr$[ebp], 163840
  00c1b	89 94 01 20 00
	00 00		 mov	 DWORD PTR _LibNames[ecx+eax+32], edx

; 1374 :       }

  00c22	eb aa		 jmp	 SHORT $LN16@AddSymbolT
$LN17@AddSymbolT:

; 1375 :       LibNames[ListNr][SymbolIndexNr].Length=SymbolFileSize;

  00c24	69 45 0c 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  00c2b	6b 4d 88 28	 imul	 ecx, DWORD PTR _SymbolIndexNr$[ebp], 40
  00c2f	8b 55 94	 mov	 edx, DWORD PTR _SymbolFileSize$[ebp]
  00c32	89 94 08 24 00
	00 00		 mov	 DWORD PTR _LibNames[eax+ecx+36], edx

; 1376 :       FileWrite(fp2,&Lib[ListNr],sizeof(LibRecord),&result);

  00c39	8d 45 d0	 lea	 eax, DWORD PTR _result$[ebp]
  00c3c	50		 push	 eax
  00c3d	6a 50		 push	 80			; 00000050H
  00c3f	6b 4d 0c 50	 imul	 ecx, DWORD PTR _ListNr$[ebp], 80
  00c43	81 c1 00 00 00
	00		 add	 ecx, OFFSET _Lib
  00c49	51		 push	 ecx
  00c4a	8b 55 e8	 mov	 edx, DWORD PTR _fp2$[ebp]
  00c4d	52		 push	 edx
  00c4e	e8 00 00 00 00	 call	 _FileWrite
  00c53	83 c4 10	 add	 esp, 16			; 00000010H

; 1377 :       FileWrite(fp2,&LibNames[ListNr],Lib[ListNr].MaxNrLibEntries*sizeof(LibNameRecord),&result);

  00c56	8d 45 d0	 lea	 eax, DWORD PTR _result$[ebp]
  00c59	50		 push	 eax
  00c5a	6b 4d 0c 50	 imul	 ecx, DWORD PTR _ListNr$[ebp], 80
  00c5e	6b 91 4c 00 00
	00 28		 imul	 edx, DWORD PTR _Lib[ecx+76], 40
  00c65	52		 push	 edx
  00c66	69 45 0c 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  00c6d	05 00 00 00 00	 add	 eax, OFFSET _LibNames
  00c72	50		 push	 eax
  00c73	8b 4d e8	 mov	 ecx, DWORD PTR _fp2$[ebp]
  00c76	51		 push	 ecx
  00c77	e8 00 00 00 00	 call	 _FileWrite
  00c7c	83 c4 10	 add	 esp, 16			; 00000010H

; 1378 : 
; 1379 :       BytesToWrite=FilePos-LibSymbolDataPos;

  00c7f	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _FilePos$[ebp]
  00c85	2b 45 ac	 sub	 eax, DWORD PTR _LibSymbolDataPos$[ebp]
  00c88	89 85 70 ff ff
	ff		 mov	 DWORD PTR _BytesToWrite$[ebp], eax

; 1380 :       FileSeek(fp,LibSymbolDataPos);

  00c8e	8b 45 ac	 mov	 eax, DWORD PTR _LibSymbolDataPos$[ebp]
  00c91	50		 push	 eax
  00c92	8b 4d f4	 mov	 ecx, DWORD PTR _fp$[ebp]
  00c95	51		 push	 ecx
  00c96	e8 00 00 00 00	 call	 _FileSeek
  00c9b	83 c4 08	 add	 esp, 8
$LN19@AddSymbolT:

; 1381 :       while (BytesToWrite>0) {

  00c9e	83 bd 70 ff ff
	ff 00		 cmp	 DWORD PTR _BytesToWrite$[ebp], 0
  00ca5	0f 8e 82 00 00
	00		 jle	 $LN20@AddSymbolT

; 1382 :         FileRead(fp,Buf,min(BytesToWrite,BufSize),&result);

  00cab	81 bd 70 ff ff
	ff 00 00 04 00	 cmp	 DWORD PTR _BytesToWrite$[ebp], 262144 ; 00040000H
  00cb5	7d 0e		 jge	 SHORT $LN81@AddSymbolT
  00cb7	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _BytesToWrite$[ebp]
  00cbd	89 85 84 f3 ff
	ff		 mov	 DWORD PTR tv641[ebp], eax
  00cc3	eb 0a		 jmp	 SHORT $LN82@AddSymbolT
$LN81@AddSymbolT:
  00cc5	c7 85 84 f3 ff
	ff 00 00 04 00	 mov	 DWORD PTR tv641[ebp], 262144 ; 00040000H
$LN82@AddSymbolT:
  00ccf	8d 4d d0	 lea	 ecx, DWORD PTR _result$[ebp]
  00cd2	51		 push	 ecx
  00cd3	8b 95 84 f3 ff
	ff		 mov	 edx, DWORD PTR tv641[ebp]
  00cd9	52		 push	 edx
  00cda	a1 00 00 00 00	 mov	 eax, DWORD PTR _Buf
  00cdf	50		 push	 eax
  00ce0	8b 4d f4	 mov	 ecx, DWORD PTR _fp$[ebp]
  00ce3	51		 push	 ecx
  00ce4	e8 00 00 00 00	 call	 _FileRead
  00ce9	83 c4 10	 add	 esp, 16			; 00000010H

; 1383 :         if (result>0) {

  00cec	83 7d d0 00	 cmp	 DWORD PTR _result$[ebp], 0
  00cf0	7e 2c		 jle	 SHORT $LN72@AddSymbolT

; 1384 :           FileWrite(fp2,Buf,result,&res2);

  00cf2	8d 45 b8	 lea	 eax, DWORD PTR _res2$[ebp]
  00cf5	50		 push	 eax
  00cf6	8b 4d d0	 mov	 ecx, DWORD PTR _result$[ebp]
  00cf9	51		 push	 ecx
  00cfa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _Buf
  00d00	52		 push	 edx
  00d01	8b 45 e8	 mov	 eax, DWORD PTR _fp2$[ebp]
  00d04	50		 push	 eax
  00d05	e8 00 00 00 00	 call	 _FileWrite
  00d0a	83 c4 10	 add	 esp, 16			; 00000010H

; 1385 :           BytesToWrite-=result;

  00d0d	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _BytesToWrite$[ebp]
  00d13	2b 45 d0	 sub	 eax, DWORD PTR _result$[ebp]
  00d16	89 85 70 ff ff
	ff		 mov	 DWORD PTR _BytesToWrite$[ebp], eax
  00d1c	eb 0a		 jmp	 SHORT $LN73@AddSymbolT
$LN72@AddSymbolT:

; 1386 :         } else BytesToWrite=0;

  00d1e	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _BytesToWrite$[ebp], 0
$LN73@AddSymbolT:

; 1387 :       }

  00d28	e9 71 ff ff ff	 jmp	 $LN19@AddSymbolT
$LN20@AddSymbolT:

; 1388 :       fp3=FileOpenReadOnlyUTF8(SymbolFile);

  00d2d	8b 45 08	 mov	 eax, DWORD PTR _SymbolFile$[ebp]
  00d30	50		 push	 eax
  00d31	e8 00 00 00 00	 call	 _FileOpenReadOnlyUTF8
  00d36	83 c4 04	 add	 esp, 4
  00d39	89 45 dc	 mov	 DWORD PTR _fp3$[ebp], eax

; 1389 :       result=1;

  00d3c	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN21@AddSymbolT:

; 1390 :       while (result>0) {

  00d43	83 7d d0 00	 cmp	 DWORD PTR _result$[ebp], 0
  00d47	7e 3f		 jle	 SHORT $LN22@AddSymbolT

; 1391 :         FileRead(fp3,Buf,BufSize,&result);

  00d49	8d 45 d0	 lea	 eax, DWORD PTR _result$[ebp]
  00d4c	50		 push	 eax
  00d4d	68 00 00 04 00	 push	 262144			; 00040000H
  00d52	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _Buf
  00d58	51		 push	 ecx
  00d59	8b 55 dc	 mov	 edx, DWORD PTR _fp3$[ebp]
  00d5c	52		 push	 edx
  00d5d	e8 00 00 00 00	 call	 _FileRead
  00d62	83 c4 10	 add	 esp, 16			; 00000010H

; 1392 :         if (result>0) FileWrite(fp2,Buf,result,&res2);

  00d65	83 7d d0 00	 cmp	 DWORD PTR _result$[ebp], 0
  00d69	7e 1b		 jle	 SHORT $LN74@AddSymbolT
  00d6b	8d 45 b8	 lea	 eax, DWORD PTR _res2$[ebp]
  00d6e	50		 push	 eax
  00d6f	8b 4d d0	 mov	 ecx, DWORD PTR _result$[ebp]
  00d72	51		 push	 ecx
  00d73	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _Buf
  00d79	52		 push	 edx
  00d7a	8b 45 e8	 mov	 eax, DWORD PTR _fp2$[ebp]
  00d7d	50		 push	 eax
  00d7e	e8 00 00 00 00	 call	 _FileWrite
  00d83	83 c4 10	 add	 esp, 16			; 00000010H
$LN74@AddSymbolT:

; 1393 :       }

  00d86	eb bb		 jmp	 SHORT $LN21@AddSymbolT
$LN22@AddSymbolT:

; 1394 :       FileClose(fp3);

  00d88	8b 45 dc	 mov	 eax, DWORD PTR _fp3$[ebp]
  00d8b	50		 push	 eax
  00d8c	e8 00 00 00 00	 call	 _FileClose
  00d91	83 c4 04	 add	 esp, 4

; 1395 :       FileSeek(fp,FilePos+ExistingLibName.Length);

  00d94	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _FilePos$[ebp]
  00d9a	03 85 10 f9 ff
	ff		 add	 eax, DWORD PTR _ExistingLibName$[ebp+36]
  00da0	50		 push	 eax
  00da1	8b 4d f4	 mov	 ecx, DWORD PTR _fp$[ebp]
  00da4	51		 push	 ecx
  00da5	e8 00 00 00 00	 call	 _FileSeek
  00daa	83 c4 08	 add	 esp, 8

; 1396 :       result=1;

  00dad	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN23@AddSymbolT:

; 1397 :       while (result>0) {

  00db4	83 7d d0 00	 cmp	 DWORD PTR _result$[ebp], 0
  00db8	7e 3f		 jle	 SHORT $LN24@AddSymbolT

; 1398 :         FileRead(fp,Buf,BufSize,&result);

  00dba	8d 45 d0	 lea	 eax, DWORD PTR _result$[ebp]
  00dbd	50		 push	 eax
  00dbe	68 00 00 04 00	 push	 262144			; 00040000H
  00dc3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _Buf
  00dc9	51		 push	 ecx
  00dca	8b 55 f4	 mov	 edx, DWORD PTR _fp$[ebp]
  00dcd	52		 push	 edx
  00dce	e8 00 00 00 00	 call	 _FileRead
  00dd3	83 c4 10	 add	 esp, 16			; 00000010H

; 1399 :         if (result>0) FileWrite(fp2,Buf,result,&res2);

  00dd6	83 7d d0 00	 cmp	 DWORD PTR _result$[ebp], 0
  00dda	7e 1b		 jle	 SHORT $LN75@AddSymbolT
  00ddc	8d 45 b8	 lea	 eax, DWORD PTR _res2$[ebp]
  00ddf	50		 push	 eax
  00de0	8b 4d d0	 mov	 ecx, DWORD PTR _result$[ebp]
  00de3	51		 push	 ecx
  00de4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _Buf
  00dea	52		 push	 edx
  00deb	8b 45 e8	 mov	 eax, DWORD PTR _fp2$[ebp]
  00dee	50		 push	 eax
  00def	e8 00 00 00 00	 call	 _FileWrite
  00df4	83 c4 10	 add	 esp, 16			; 00000010H
$LN75@AddSymbolT:

; 1400 :       }

  00df7	eb bb		 jmp	 SHORT $LN23@AddSymbolT
$LN24@AddSymbolT:

; 1401 :       FileClose(fp2);

  00df9	8b 45 e8	 mov	 eax, DWORD PTR _fp2$[ebp]
  00dfc	50		 push	 eax
  00dfd	e8 00 00 00 00	 call	 _FileClose
  00e02	83 c4 04	 add	 esp, 4

; 1402 :       FileClose(fp);

  00e05	8b 45 f4	 mov	 eax, DWORD PTR _fp$[ebp]
  00e08	50		 push	 eax
  00e09	e8 00 00 00 00	 call	 _FileClose
  00e0e	83 c4 04	 add	 esp, 4

; 1403 : 
; 1404 :       CopyFileUTF8(str,LibraryFile[ListNr],0);

  00e11	6a 00		 push	 0
  00e13	8b 45 0c	 mov	 eax, DWORD PTR _ListNr$[ebp]
  00e16	c1 e0 09	 shl	 eax, 9
  00e19	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  00e1e	50		 push	 eax
  00e1f	8d 8d 5c fd ff
	ff		 lea	 ecx, DWORD PTR _str$[ebp]
  00e25	51		 push	 ecx
  00e26	e8 00 00 00 00	 call	 _CopyFileUTF8
  00e2b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1405 :       DeleteFileUTF8(str);

  00e2e	8d 85 5c fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  00e34	50		 push	 eax
  00e35	e8 00 00 00 00	 call	 _DeleteFileUTF8
  00e3a	83 c4 04	 add	 esp, 4
$LN63@AddSymbolT:

; 1406 :     }
; 1407 :   }
; 1408 :   DisplayLibraryText(1);

  00e3d	6a 01		 push	 1
  00e3f	e8 00 00 00 00	 call	 _DisplayLibraryText
  00e44	83 c4 04	 add	 esp, 4

; 1409 : 
; 1410 :   return 0;

  00e47	33 c0		 xor	 eax, eax
$LN76@AddSymbolT:

; 1411 : }

  00e49	52		 push	 edx
  00e4a	8b cd		 mov	 ecx, ebp
  00e4c	50		 push	 eax
  00e4d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN93@AddSymbolT
  00e53	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00e58	58		 pop	 eax
  00e59	5a		 pop	 edx
  00e5a	5f		 pop	 edi
  00e5b	5e		 pop	 esi
  00e5c	5b		 pop	 ebx
  00e5d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00e60	33 cd		 xor	 ecx, ebp
  00e62	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00e67	81 c4 7c 0c 00
	00		 add	 esp, 3196		; 00000c7cH
  00e6d	3b ec		 cmp	 ebp, esp
  00e6f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e74	8b e5		 mov	 esp, ebp
  00e76	5d		 pop	 ebp
  00e77	c3		 ret	 0
$LN93@AddSymbolT:
  00e78	09 00 00 00	 DD	 9
  00e7c	00 00 00 00	 DD	 $LN92@AddSymbolT
$LN92@AddSymbolT:
  00e80	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00e84	04 00 00 00	 DD	 4
  00e88	00 00 00 00	 DD	 $LN83@AddSymbolT
  00e8c	b8 ff ff ff	 DD	 -72			; ffffffb8H
  00e90	04 00 00 00	 DD	 4
  00e94	00 00 00 00	 DD	 $LN84@AddSymbolT
  00e98	5c fd ff ff	 DD	 -676			; fffffd5cH
  00e9c	00 02 00 00	 DD	 512			; 00000200H
  00ea0	00 00 00 00	 DD	 $LN85@AddSymbolT
  00ea4	54 fb ff ff	 DD	 -1196			; fffffb54H
  00ea8	00 02 00 00	 DD	 512			; 00000200H
  00eac	00 00 00 00	 DD	 $LN86@AddSymbolT
  00eb0	4c f9 ff ff	 DD	 -1716			; fffff94cH
  00eb4	00 02 00 00	 DD	 512			; 00000200H
  00eb8	00 00 00 00	 DD	 $LN87@AddSymbolT
  00ebc	1c f9 ff ff	 DD	 -1764			; fffff91cH
  00ec0	28 00 00 00	 DD	 40			; 00000028H
  00ec4	00 00 00 00	 DD	 $LN88@AddSymbolT
  00ec8	ec f8 ff ff	 DD	 -1812			; fffff8ecH
  00ecc	28 00 00 00	 DD	 40			; 00000028H
  00ed0	00 00 00 00	 DD	 $LN89@AddSymbolT
  00ed4	08 f8 ff ff	 DD	 -2040			; fffff808H
  00ed8	dc 00 00 00	 DD	 220			; 000000dcH
  00edc	00 00 00 00	 DD	 $LN90@AddSymbolT
  00ee0	64 f7 ff ff	 DD	 -2204			; fffff764H
  00ee4	9c 00 00 00	 DD	 156			; 0000009cH
  00ee8	00 00 00 00	 DD	 $LN91@AddSymbolT
$LN91@AddSymbolT:
  00eec	53		 DB	 83			; 00000053H
  00eed	68		 DB	 104			; 00000068H
  00eee	61		 DB	 97			; 00000061H
  00eef	70		 DB	 112			; 00000070H
  00ef0	65		 DB	 101			; 00000065H
  00ef1	00		 DB	 0
$LN90@AddSymbolT:
  00ef2	53		 DB	 83			; 00000053H
  00ef3	79		 DB	 121			; 00000079H
  00ef4	6d		 DB	 109			; 0000006dH
  00ef5	62		 DB	 98			; 00000062H
  00ef6	6f		 DB	 111			; 0000006fH
  00ef7	6c		 DB	 108			; 0000006cH
  00ef8	00		 DB	 0
$LN89@AddSymbolT:
  00ef9	45		 DB	 69			; 00000045H
  00efa	78		 DB	 120			; 00000078H
  00efb	69		 DB	 105			; 00000069H
  00efc	73		 DB	 115			; 00000073H
  00efd	74		 DB	 116			; 00000074H
  00efe	69		 DB	 105			; 00000069H
  00eff	6e		 DB	 110			; 0000006eH
  00f00	67		 DB	 103			; 00000067H
  00f01	4c		 DB	 76			; 0000004cH
  00f02	69		 DB	 105			; 00000069H
  00f03	62		 DB	 98			; 00000062H
  00f04	4e		 DB	 78			; 0000004eH
  00f05	61		 DB	 97			; 00000061H
  00f06	6d		 DB	 109			; 0000006dH
  00f07	65		 DB	 101			; 00000065H
  00f08	00		 DB	 0
$LN88@AddSymbolT:
  00f09	4c		 DB	 76			; 0000004cH
  00f0a	69		 DB	 105			; 00000069H
  00f0b	62		 DB	 98			; 00000062H
  00f0c	4e		 DB	 78			; 0000004eH
  00f0d	61		 DB	 97			; 00000061H
  00f0e	6d		 DB	 109			; 0000006dH
  00f0f	65		 DB	 101			; 00000065H
  00f10	00		 DB	 0
$LN87@AddSymbolT:
  00f11	53		 DB	 83			; 00000053H
  00f12	79		 DB	 121			; 00000079H
  00f13	6d		 DB	 109			; 0000006dH
  00f14	62		 DB	 98			; 00000062H
  00f15	6f		 DB	 111			; 0000006fH
  00f16	6c		 DB	 108			; 0000006cH
  00f17	4e		 DB	 78			; 0000004eH
  00f18	61		 DB	 97			; 00000061H
  00f19	6d		 DB	 109			; 0000006dH
  00f1a	65		 DB	 101			; 00000065H
  00f1b	00		 DB	 0
$LN86@AddSymbolT:
  00f1c	73		 DB	 115			; 00000073H
  00f1d	74		 DB	 116			; 00000074H
  00f1e	72		 DB	 114			; 00000072H
  00f1f	32		 DB	 50			; 00000032H
  00f20	00		 DB	 0
$LN85@AddSymbolT:
  00f21	73		 DB	 115			; 00000073H
  00f22	74		 DB	 116			; 00000074H
  00f23	72		 DB	 114			; 00000072H
  00f24	00		 DB	 0
$LN84@AddSymbolT:
  00f25	72		 DB	 114			; 00000072H
  00f26	65		 DB	 101			; 00000065H
  00f27	73		 DB	 115			; 00000073H
  00f28	32		 DB	 50			; 00000032H
  00f29	00		 DB	 0
$LN83@AddSymbolT:
  00f2a	72		 DB	 114			; 00000072H
  00f2b	65		 DB	 101			; 00000065H
  00f2c	73		 DB	 115			; 00000073H
  00f2d	75		 DB	 117			; 00000075H
  00f2e	6c		 DB	 108			; 0000006cH
  00f2f	74		 DB	 116			; 00000074H
  00f30	00		 DB	 0
_AddSymbolToLibrary ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _LoadLib
_TEXT	SEGMENT
$T1 = -2388						; size = 4
$T2 = -2376						; size = 4
_WrongLibrary$ = -1596					; size = 4
_result$ = -1584					; size = 4
_fp$ = -1572						; size = 4
_str5$ = -1560						; size = 512
_str2$ = -1040						; size = 512
_str$ = -520						; size = 512
__$ArrayPad$ = -4					; size = 4
_ListNr$ = 8						; size = 4
_LoadLib PROC						; COMDAT

; 1094 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 58 09 00
	00		 sub	 esp, 2392		; 00000958H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd a8 f6 ff
	ff		 lea	 edi, DWORD PTR [ebp-2392]
  00012	b9 56 02 00 00	 mov	 ecx, 598		; 00000256H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1095 :   char  str[MAX_LENGTH_STRING],str2[MAX_LENGTH_STRING],str5[MAX_LENGTH_STRING];
; 1096 :   int32 fp,result,WrongLibrary=1;

  00028	c7 85 c4 f9 ff
	ff 01 00 00 00	 mov	 DWORD PTR _WrongLibrary$[ebp], 1

; 1097 : 
; 1098 :   str[0]=0;

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	6b c8 00	 imul	 ecx, eax, 0
  0003a	89 8d b8 f6 ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  00040	81 bd b8 f6 ff
	ff 00 02 00 00	 cmp	 DWORD PTR $T2[ebp], 512	; 00000200H
  0004a	73 02		 jae	 SHORT $LN13@LoadLib
  0004c	eb 05		 jmp	 SHORT $LN14@LoadLib
$LN13@LoadLib:
  0004e	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN14@LoadLib:
  00053	8b 95 b8 f6 ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  00059	c6 84 15 f8 fd
	ff ff 00	 mov	 BYTE PTR _str$[ebp+edx], 0

; 1099 :   str2[0]=0;

  00061	b8 01 00 00 00	 mov	 eax, 1
  00066	6b c8 00	 imul	 ecx, eax, 0
  00069	89 8d ac f6 ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  0006f	81 bd ac f6 ff
	ff 00 02 00 00	 cmp	 DWORD PTR $T1[ebp], 512	; 00000200H
  00079	73 02		 jae	 SHORT $LN15@LoadLib
  0007b	eb 05		 jmp	 SHORT $LN16@LoadLib
$LN15@LoadLib:
  0007d	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN16@LoadLib:
  00082	8b 95 ac f6 ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00088	c6 84 15 f0 fb
	ff ff 00	 mov	 BYTE PTR _str2$[ebp+edx], 0

; 1100 :   TempMem[0]=0;

  00090	b8 01 00 00 00	 mov	 eax, 1
  00095	6b c8 00	 imul	 ecx, eax, 0
  00098	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _TempMem
  0009e	c6 04 0a 00	 mov	 BYTE PTR [edx+ecx], 0

; 1101 :   TempMem[1]=0;

  000a2	b8 01 00 00 00	 mov	 eax, 1
  000a7	c1 e0 00	 shl	 eax, 0
  000aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _TempMem
  000b0	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1102 : 
; 1103 :   if (LibraryMode==0) {

  000b4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  000bb	75 35		 jne	 SHORT $LN2@LoadLib

; 1104 :     strcpy(str5,SC(11,"Symbol library files"));

  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@PACNIOIP@Symbol?5library?5files?$AA@
  000c2	6a 0b		 push	 11			; 0000000bH
  000c4	e8 00 00 00 00	 call	 _StringConvert
  000c9	83 c4 08	 add	 esp, 8
  000cc	50		 push	 eax
  000cd	8d 85 e8 f9 ff
	ff		 lea	 eax, DWORD PTR _str5$[ebp]
  000d3	50		 push	 eax
  000d4	e8 00 00 00 00	 call	 _strcpy
  000d9	83 c4 08	 add	 esp, 8

; 1105 :     strcpy(str2,"lib");

  000dc	68 00 00 00 00	 push	 OFFSET ??_C@_03LPIGJBNC@lib?$AA@
  000e1	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  000e7	50		 push	 eax
  000e8	e8 00 00 00 00	 call	 _strcpy
  000ed	83 c4 08	 add	 esp, 8

; 1106 :   } else {

  000f0	eb 33		 jmp	 SHORT $LN3@LoadLib
$LN2@LoadLib:

; 1107 :     strcpy(str5,SC(12,"Geometry library files"));

  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@EMEBPGGA@Geometry?5library?5files?$AA@
  000f7	6a 0c		 push	 12			; 0000000cH
  000f9	e8 00 00 00 00	 call	 _StringConvert
  000fe	83 c4 08	 add	 esp, 8
  00101	50		 push	 eax
  00102	8d 85 e8 f9 ff
	ff		 lea	 eax, DWORD PTR _str5$[ebp]
  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 _strcpy
  0010e	83 c4 08	 add	 esp, 8

; 1108 :     strcpy(str2,"slb");

  00111	68 00 00 00 00	 push	 OFFSET ??_C@_03LBDHBEPA@slb?$AA@
  00116	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  0011c	50		 push	 eax
  0011d	e8 00 00 00 00	 call	 _strcpy
  00122	83 c4 08	 add	 esp, 8
$LN3@LoadLib:

; 1109 :   }
; 1110 : 
; 1111 :   LibraryFile[ListNr][0]=0;

  00125	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  00128	c1 e0 09	 shl	 eax, 9
  0012b	b9 01 00 00 00	 mov	 ecx, 1
  00130	6b d1 00	 imul	 edx, ecx, 0
  00133	c6 84 10 00 00
	00 00 00	 mov	 BYTE PTR _LibraryFile[eax+edx], 0

; 1112 :   if (GetNewFileUTF8(LIBMANWindow,LIBMANClass.hInstance,(char *)&LibraryFile[ListNr],
; 1113 :                      DefaultLibraryPath,str5,NULL,str5,str2,0)!=0) {

  0013b	6a 00		 push	 0
  0013d	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  00143	50		 push	 eax
  00144	8d 8d e8 f9 ff
	ff		 lea	 ecx, DWORD PTR _str5$[ebp]
  0014a	51		 push	 ecx
  0014b	6a 00		 push	 0
  0014d	8d 95 e8 f9 ff
	ff		 lea	 edx, DWORD PTR _str5$[ebp]
  00153	52		 push	 edx
  00154	68 00 00 00 00	 push	 OFFSET _DefaultLibraryPath
  00159	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  0015c	c1 e0 09	 shl	 eax, 9
  0015f	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  00164	50		 push	 eax
  00165	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANClass+16
  0016b	51		 push	 ecx
  0016c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _LIBMANWindow
  00172	52		 push	 edx
  00173	e8 00 00 00 00	 call	 _GetNewFileUTF8
  00178	83 c4 24	 add	 esp, 36			; 00000024H
  0017b	85 c0		 test	 eax, eax
  0017d	74 07		 je	 SHORT $LN4@LoadLib

; 1114 :     return 0;

  0017f	33 c0		 xor	 eax, eax
  00181	e9 00 02 00 00	 jmp	 $LN12@LoadLib
$LN4@LoadLib:

; 1115 :   }
; 1116 : 
; 1117 :   if ((fp=FileOpenReadOnlyUTF8(LibraryFile[ListNr]))<0) {

  00186	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  00189	c1 e0 09	 shl	 eax, 9
  0018c	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  00191	50		 push	 eax
  00192	e8 00 00 00 00	 call	 _FileOpenReadOnlyUTF8
  00197	83 c4 04	 add	 esp, 4
  0019a	89 85 dc f9 ff
	ff		 mov	 DWORD PTR _fp$[ebp], eax
  001a0	83 bd dc f9 ff
	ff 00		 cmp	 DWORD PTR _fp$[ebp], 0
  001a7	7d 5b		 jge	 SHORT $LN5@LoadLib

; 1118 :     sprintf(str2,SC(13,"Error in reading library %s"),LibraryFile[ListNr]);

  001a9	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  001ac	c1 e0 09	 shl	 eax, 9
  001af	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  001b4	50		 push	 eax
  001b5	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@EPLEAHJC@Error?5in?5reading?5library?5?$CFs?$AA@
  001ba	6a 0d		 push	 13			; 0000000dH
  001bc	e8 00 00 00 00	 call	 _StringConvert
  001c1	83 c4 08	 add	 esp, 8
  001c4	50		 push	 eax
  001c5	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _str2$[ebp]
  001cb	51		 push	 ecx
  001cc	e8 00 00 00 00	 call	 _sprintf
  001d1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1119 :     MessageBoxUTF8(LIBMANWindow,str2,SC(9,"Error"),MB_OK);

  001d4	6a 00		 push	 0
  001d6	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  001db	6a 09		 push	 9
  001dd	e8 00 00 00 00	 call	 _StringConvert
  001e2	83 c4 08	 add	 esp, 8
  001e5	50		 push	 eax
  001e6	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  001ec	50		 push	 eax
  001ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  001f3	51		 push	 ecx
  001f4	e8 00 00 00 00	 call	 _MessageBoxUTF8
  001f9	83 c4 10	 add	 esp, 16			; 00000010H

; 1120 :     return -1;

  001fc	83 c8 ff	 or	 eax, -1
  001ff	e9 82 01 00 00	 jmp	 $LN12@LoadLib
$LN5@LoadLib:

; 1121 :   }
; 1122 :   if (FileRead(fp,&Lib[ListNr],sizeof(LibRecord),&result)<0) {

  00204	8d 85 d0 f9 ff
	ff		 lea	 eax, DWORD PTR _result$[ebp]
  0020a	50		 push	 eax
  0020b	6a 50		 push	 80			; 00000050H
  0020d	6b 4d 08 50	 imul	 ecx, DWORD PTR _ListNr$[ebp], 80
  00211	81 c1 00 00 00
	00		 add	 ecx, OFFSET _Lib
  00217	51		 push	 ecx
  00218	8b 95 dc f9 ff
	ff		 mov	 edx, DWORD PTR _fp$[ebp]
  0021e	52		 push	 edx
  0021f	e8 00 00 00 00	 call	 _FileRead
  00224	83 c4 10	 add	 esp, 16			; 00000010H
  00227	85 c0		 test	 eax, eax
  00229	7d 6a		 jge	 SHORT $LN6@LoadLib

; 1123 :     sprintf(str2,SC(13,"Error in reading library %s"),LibraryFile[ListNr]);

  0022b	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  0022e	c1 e0 09	 shl	 eax, 9
  00231	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  00236	50		 push	 eax
  00237	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@EPLEAHJC@Error?5in?5reading?5library?5?$CFs?$AA@
  0023c	6a 0d		 push	 13			; 0000000dH
  0023e	e8 00 00 00 00	 call	 _StringConvert
  00243	83 c4 08	 add	 esp, 8
  00246	50		 push	 eax
  00247	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _str2$[ebp]
  0024d	51		 push	 ecx
  0024e	e8 00 00 00 00	 call	 _sprintf
  00253	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1124 :     MessageBoxUTF8(LIBMANWindow,str2,SC(9,"Error"),MB_OK);

  00256	6a 00		 push	 0
  00258	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  0025d	6a 09		 push	 9
  0025f	e8 00 00 00 00	 call	 _StringConvert
  00264	83 c4 08	 add	 esp, 8
  00267	50		 push	 eax
  00268	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  0026e	50		 push	 eax
  0026f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00275	51		 push	 ecx
  00276	e8 00 00 00 00	 call	 _MessageBoxUTF8
  0027b	83 c4 10	 add	 esp, 16			; 00000010H

; 1125 :     FileClose(fp);

  0027e	8b 85 dc f9 ff
	ff		 mov	 eax, DWORD PTR _fp$[ebp]
  00284	50		 push	 eax
  00285	e8 00 00 00 00	 call	 _FileClose
  0028a	83 c4 04	 add	 esp, 4

; 1126 :     return -1;

  0028d	83 c8 ff	 or	 eax, -1
  00290	e9 f1 00 00 00	 jmp	 $LN12@LoadLib
$LN6@LoadLib:

; 1127 :   }
; 1128 :   if (LibraryMode==0) {

  00295	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  0029c	75 27		 jne	 SHORT $LN7@LoadLib

; 1129 :     if (strcmp((LPSTR)&Lib[ListNr].Identification,SymbolLibraryCode1)==0) {

  0029e	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@CAKLMLEK@Symbol?5library?5version?51?40?$AA@
  002a3	6b 45 08 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  002a7	05 00 00 00 00	 add	 eax, OFFSET _Lib
  002ac	50		 push	 eax
  002ad	e8 00 00 00 00	 call	 _strcmp
  002b2	83 c4 08	 add	 esp, 8
  002b5	85 c0		 test	 eax, eax
  002b7	75 0a		 jne	 SHORT $LN9@LoadLib

; 1130 :       WrongLibrary=0;

  002b9	c7 85 c4 f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR _WrongLibrary$[ebp], 0
$LN9@LoadLib:

; 1131 :     }
; 1132 :   } else {

  002c3	eb 25		 jmp	 SHORT $LN8@LoadLib
$LN7@LoadLib:

; 1133 :     if (strcmp((LPSTR)&Lib[ListNr].Identification,GeometryLibraryCode1)==0) {

  002c5	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@LDKPIGNM@Geometry?5library?5version?51?40?$AA@
  002ca	6b 45 08 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  002ce	05 00 00 00 00	 add	 eax, OFFSET _Lib
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 _strcmp
  002d9	83 c4 08	 add	 esp, 8
  002dc	85 c0		 test	 eax, eax
  002de	75 0a		 jne	 SHORT $LN8@LoadLib

; 1134 :       WrongLibrary=0;

  002e0	c7 85 c4 f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR _WrongLibrary$[ebp], 0
$LN8@LoadLib:

; 1135 :     }
; 1136 :   }
; 1137 :   if (WrongLibrary) {

  002ea	83 bd c4 f9 ff
	ff 00		 cmp	 DWORD PTR _WrongLibrary$[ebp], 0
  002f1	74 67		 je	 SHORT $LN11@LoadLib

; 1138 :     sprintf(str2,SC(14,"Library %s is wrong"),LibraryFile[ListNr]);

  002f3	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  002f6	c1 e0 09	 shl	 eax, 9
  002f9	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  002fe	50		 push	 eax
  002ff	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@BECAACMB@Library?5?$CFs?5is?5wrong?$AA@
  00304	6a 0e		 push	 14			; 0000000eH
  00306	e8 00 00 00 00	 call	 _StringConvert
  0030b	83 c4 08	 add	 esp, 8
  0030e	50		 push	 eax
  0030f	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _str2$[ebp]
  00315	51		 push	 ecx
  00316	e8 00 00 00 00	 call	 _sprintf
  0031b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1139 :     MessageBoxUTF8(LIBMANWindow,str2,SC(9,"Error"),MB_OK);

  0031e	6a 00		 push	 0
  00320	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00325	6a 09		 push	 9
  00327	e8 00 00 00 00	 call	 _StringConvert
  0032c	83 c4 08	 add	 esp, 8
  0032f	50		 push	 eax
  00330	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  00336	50		 push	 eax
  00337	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  0033d	51		 push	 ecx
  0033e	e8 00 00 00 00	 call	 _MessageBoxUTF8
  00343	83 c4 10	 add	 esp, 16			; 00000010H

; 1140 :     FileClose(fp);

  00346	8b 85 dc f9 ff
	ff		 mov	 eax, DWORD PTR _fp$[ebp]
  0034c	50		 push	 eax
  0034d	e8 00 00 00 00	 call	 _FileClose
  00352	83 c4 04	 add	 esp, 4

; 1141 :     return -1;

  00355	83 c8 ff	 or	 eax, -1
  00358	eb 2c		 jmp	 SHORT $LN12@LoadLib
$LN11@LoadLib:

; 1142 :   }
; 1143 :   FileClose(fp);

  0035a	8b 85 dc f9 ff
	ff		 mov	 eax, DWORD PTR _fp$[ebp]
  00360	50		 push	 eax
  00361	e8 00 00 00 00	 call	 _FileClose
  00366	83 c4 04	 add	 esp, 4

; 1144 :   DisplayLibraryText(1);

  00369	6a 01		 push	 1
  0036b	e8 00 00 00 00	 call	 _DisplayLibraryText
  00370	83 c4 04	 add	 esp, 4

; 1145 :   PutSymbolsIntoList(ListNr,0);

  00373	6a 00		 push	 0
  00375	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  00378	50		 push	 eax
  00379	e8 00 00 00 00	 call	 _PutSymbolsIntoList
  0037e	83 c4 08	 add	 esp, 8

; 1146 : 
; 1147 :   return 1;

  00381	b8 01 00 00 00	 mov	 eax, 1
$LN12@LoadLib:

; 1148 : }

  00386	52		 push	 edx
  00387	8b cd		 mov	 ecx, ebp
  00389	50		 push	 eax
  0038a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN22@LoadLib
  00390	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00395	58		 pop	 eax
  00396	5a		 pop	 edx
  00397	5f		 pop	 edi
  00398	5e		 pop	 esi
  00399	5b		 pop	 ebx
  0039a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0039d	33 cd		 xor	 ecx, ebp
  0039f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003a4	81 c4 58 09 00
	00		 add	 esp, 2392		; 00000958H
  003aa	3b ec		 cmp	 ebp, esp
  003ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003b1	8b e5		 mov	 esp, ebp
  003b3	5d		 pop	 ebp
  003b4	c3		 ret	 0
  003b5	0f 1f 00	 npad	 3
$LN22@LoadLib:
  003b8	04 00 00 00	 DD	 4
  003bc	00 00 00 00	 DD	 $LN21@LoadLib
$LN21@LoadLib:
  003c0	f8 fd ff ff	 DD	 -520			; fffffdf8H
  003c4	00 02 00 00	 DD	 512			; 00000200H
  003c8	00 00 00 00	 DD	 $LN17@LoadLib
  003cc	f0 fb ff ff	 DD	 -1040			; fffffbf0H
  003d0	00 02 00 00	 DD	 512			; 00000200H
  003d4	00 00 00 00	 DD	 $LN18@LoadLib
  003d8	e8 f9 ff ff	 DD	 -1560			; fffff9e8H
  003dc	00 02 00 00	 DD	 512			; 00000200H
  003e0	00 00 00 00	 DD	 $LN19@LoadLib
  003e4	d0 f9 ff ff	 DD	 -1584			; fffff9d0H
  003e8	04 00 00 00	 DD	 4
  003ec	00 00 00 00	 DD	 $LN20@LoadLib
$LN20@LoadLib:
  003f0	72		 DB	 114			; 00000072H
  003f1	65		 DB	 101			; 00000065H
  003f2	73		 DB	 115			; 00000073H
  003f3	75		 DB	 117			; 00000075H
  003f4	6c		 DB	 108			; 0000006cH
  003f5	74		 DB	 116			; 00000074H
  003f6	00		 DB	 0
$LN19@LoadLib:
  003f7	73		 DB	 115			; 00000073H
  003f8	74		 DB	 116			; 00000074H
  003f9	72		 DB	 114			; 00000072H
  003fa	35		 DB	 53			; 00000035H
  003fb	00		 DB	 0
$LN18@LoadLib:
  003fc	73		 DB	 115			; 00000073H
  003fd	74		 DB	 116			; 00000074H
  003fe	72		 DB	 114			; 00000072H
  003ff	32		 DB	 50			; 00000032H
  00400	00		 DB	 0
$LN17@LoadLib:
  00401	73		 DB	 115			; 00000073H
  00402	74		 DB	 116			; 00000074H
  00403	72		 DB	 114			; 00000072H
  00404	00		 DB	 0
_LoadLib ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _CloseLib
_TEXT	SEGMENT
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_res$ = -8						; size = 4
_ListNr$ = 8						; size = 4
_CloseLib PROC						; COMDAT

; 1072 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00012	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1073 :   int32 res;
; 1074 : 
; 1075 :   if (ListNr==0) {

  0001e	83 7d 08 00	 cmp	 DWORD PTR _ListNr$[ebp], 0
  00022	75 51		 jne	 SHORT $LN2@CloseLib

; 1076 :     res=SendMessage(ListWindow1,LB_RESETCONTENT,0,0);

  00024	8b f4		 mov	 esi, esp
  00026	6a 00		 push	 0
  00028	6a 00		 push	 0
  0002a	68 84 01 00 00	 push	 388			; 00000184H
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow1
  00034	50		 push	 eax
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0003b	3b f4		 cmp	 esi, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	89 45 f8	 mov	 DWORD PTR _res$[ebp], eax

; 1077 :     LibraryText1[0]=0;

  00045	b8 01 00 00 00	 mov	 eax, 1
  0004a	6b c8 00	 imul	 ecx, eax, 0
  0004d	89 8d 2c ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  00053	81 bd 2c ff ff
	ff 00 02 00 00	 cmp	 DWORD PTR $T2[ebp], 512	; 00000200H
  0005d	73 02		 jae	 SHORT $LN5@CloseLib
  0005f	eb 05		 jmp	 SHORT $LN6@CloseLib
$LN5@CloseLib:
  00061	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN6@CloseLib:
  00066	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  0006c	c6 82 00 00 00
	00 00		 mov	 BYTE PTR _LibraryText1[edx], 0

; 1078 :   } else {

  00073	eb 4f		 jmp	 SHORT $LN3@CloseLib
$LN2@CloseLib:

; 1079 :     res=SendMessage(ListWindow2,LB_RESETCONTENT,0,0);

  00075	8b f4		 mov	 esi, esp
  00077	6a 00		 push	 0
  00079	6a 00		 push	 0
  0007b	68 84 01 00 00	 push	 388			; 00000184H
  00080	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow2
  00085	50		 push	 eax
  00086	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0008c	3b f4		 cmp	 esi, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	89 45 f8	 mov	 DWORD PTR _res$[ebp], eax

; 1080 :     LibraryText2[0]=0;

  00096	b8 01 00 00 00	 mov	 eax, 1
  0009b	6b c8 00	 imul	 ecx, eax, 0
  0009e	89 8d 20 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  000a4	81 bd 20 ff ff
	ff 00 02 00 00	 cmp	 DWORD PTR $T1[ebp], 512	; 00000200H
  000ae	73 02		 jae	 SHORT $LN7@CloseLib
  000b0	eb 05		 jmp	 SHORT $LN8@CloseLib
$LN7@CloseLib:
  000b2	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN8@CloseLib:
  000b7	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  000bd	c6 82 00 00 00
	00 00		 mov	 BYTE PTR _LibraryText2[edx], 0
$LN3@CloseLib:

; 1081 :   }
; 1082 :   LibraryFile[ListNr][0]=0;

  000c4	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  000c7	c1 e0 09	 shl	 eax, 9
  000ca	b9 01 00 00 00	 mov	 ecx, 1
  000cf	6b d1 00	 imul	 edx, ecx, 0
  000d2	c6 84 10 00 00
	00 00 00	 mov	 BYTE PTR _LibraryFile[eax+edx], 0

; 1083 :   DisplayLibraryText(1);

  000da	6a 01		 push	 1
  000dc	e8 00 00 00 00	 call	 _DisplayLibraryText
  000e1	83 c4 04	 add	 esp, 4
$LN4@CloseLib:

; 1084 : }

  000e4	5f		 pop	 edi
  000e5	5e		 pop	 esi
  000e6	5b		 pop	 ebx
  000e7	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  000ed	3b ec		 cmp	 ebp, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c3		 ret	 0
_CloseLib ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _MakeNewLib
_TEXT	SEGMENT
_LibName$ = -604					; size = 40
_str2$ = -556						; size = 512
_cnt$ = -36						; size = 4
_fp$ = -24						; size = 4
_res$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_ListNr$ = 8						; size = 4
_MakeNewLib PROC					; COMDAT

; 1017 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e0 03 00
	00		 sub	 esp, 992		; 000003e0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 20 fc ff
	ff		 lea	 edi, DWORD PTR [ebp-992]
  00012	b9 f8 00 00 00	 mov	 ecx, 248		; 000000f8H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1018 :   int32 res,fp,cnt;
; 1019 :   char  str2[MAX_LENGTH_STRING];
; 1020 :   LibNameRecord  LibName;
; 1021 : 
; 1022 :   res=DialogBox(LIBMANClass.hInstance,MAKEINTRESOURCE(IDD_DIALOG_NEW_LIB), LIBMANWindow, (DLGPROC)NewLibDialog2);

  00028	8b f4		 mov	 esi, esp
  0002a	6a 00		 push	 0
  0002c	68 00 00 00 00	 push	 OFFSET _NewLibDialog2@16
  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  00036	50		 push	 eax
  00037	68 d0 07 00 00	 push	 2000			; 000007d0H
  0003c	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANClass+16
  00042	51		 push	 ecx
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DialogBoxParamA@20
  00049	3b f4		 cmp	 esi, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	89 45 f4	 mov	 DWORD PTR _res$[ebp], eax

; 1023 : 
; 1024 :   if (res==1) {

  00053	83 7d f4 01	 cmp	 DWORD PTR _res$[ebp], 1
  00057	0f 85 21 02 00
	00		 jne	 $LN1@MakeNewLib

; 1025 :     strcpy(str2,NewLibName);

  0005d	68 00 00 00 00	 push	 OFFSET _NewLibName
  00062	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 _strcpy
  0006e	83 c4 08	 add	 esp, 8

; 1026 :     if (strchr(str2,'.')) {

  00071	6a 2e		 push	 46			; 0000002eH
  00073	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 _strchr
  0007f	83 c4 08	 add	 esp, 8
  00082	85 c0		 test	 eax, eax
  00084	74 0f		 je	 SHORT $LN6@MakeNewLib

; 1027 :       CutExtensionFileName(str2);

  00086	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 _CutExtensionFileName
  00092	83 c4 04	 add	 esp, 4
$LN6@MakeNewLib:

; 1028 :     }
; 1029 :     if (LibraryMode==0) {

  00095	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  0009c	75 1b		 jne	 SHORT $LN7@MakeNewLib

; 1030 :       sprintf(NewLibName,"%s.lib",str2);

  0009e	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  000a4	50		 push	 eax
  000a5	68 00 00 00 00	 push	 OFFSET ??_C@_06GNGMGJIB@?$CFs?4lib?$AA@
  000aa	68 00 00 00 00	 push	 OFFSET _NewLibName
  000af	e8 00 00 00 00	 call	 _sprintf
  000b4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1031 :     } else {

  000b7	eb 19		 jmp	 SHORT $LN8@MakeNewLib
$LN7@MakeNewLib:

; 1032 :       sprintf(NewLibName,"%s.slb",str2);

  000b9	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  000bf	50		 push	 eax
  000c0	68 00 00 00 00	 push	 OFFSET ??_C@_06GDNNOMKD@?$CFs?4slb?$AA@
  000c5	68 00 00 00 00	 push	 OFFSET _NewLibName
  000ca	e8 00 00 00 00	 call	 _sprintf
  000cf	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN8@MakeNewLib:

; 1033 :     }
; 1034 :     if (FileExistsUTF8(NewLibName)==0) {

  000d2	68 00 00 00 00	 push	 OFFSET _NewLibName
  000d7	e8 00 00 00 00	 call	 _FileExistsUTF8
  000dc	83 c4 04	 add	 esp, 4
  000df	85 c0		 test	 eax, eax
  000e1	75 56		 jne	 SHORT $LN9@MakeNewLib

; 1035 :       sprintf(str2,SC(10,"File %s exists overwerite ?"),NewLibName);

  000e3	68 00 00 00 00	 push	 OFFSET _NewLibName
  000e8	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@GDCHEAEN@File?5?$CFs?5exists?5overwerite?5?$DP?$AA@
  000ed	6a 0a		 push	 10			; 0000000aH
  000ef	e8 00 00 00 00	 call	 _StringConvert
  000f4	83 c4 08	 add	 esp, 8
  000f7	50		 push	 eax
  000f8	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  000fe	50		 push	 eax
  000ff	e8 00 00 00 00	 call	 _sprintf
  00104	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1036 :       if (MessageBoxUTF8(LIBMANWindow,str2,SC(9,"Error"),MB_OKCANCEL)!=IDOK) {

  00107	6a 01		 push	 1
  00109	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  0010e	6a 09		 push	 9
  00110	e8 00 00 00 00	 call	 _StringConvert
  00115	83 c4 08	 add	 esp, 8
  00118	50		 push	 eax
  00119	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  0011f	50		 push	 eax
  00120	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 _MessageBoxUTF8
  0012c	83 c4 10	 add	 esp, 16			; 00000010H
  0012f	83 f8 01	 cmp	 eax, 1
  00132	74 05		 je	 SHORT $LN9@MakeNewLib

; 1037 :         return;

  00134	e9 45 01 00 00	 jmp	 $LN1@MakeNewLib
$LN9@MakeNewLib:

; 1038 :       }
; 1039 :     }
; 1040 :     if ((fp=FileOpenWriteUTF8(NewLibName))<0) {

  00139	68 00 00 00 00	 push	 OFFSET _NewLibName
  0013e	e8 00 00 00 00	 call	 _FileOpenWriteUTF8
  00143	83 c4 04	 add	 esp, 4
  00146	89 45 e8	 mov	 DWORD PTR _fp$[ebp], eax
  00149	83 7d e8 00	 cmp	 DWORD PTR _fp$[ebp], 0
  0014d	7d 05		 jge	 SHORT $LN11@MakeNewLib

; 1041 :       return;

  0014f	e9 2a 01 00 00	 jmp	 $LN1@MakeNewLib
$LN11@MakeNewLib:

; 1042 :     }
; 1043 :     memset(&Lib[ListNr],0,sizeof(LibRecord));

  00154	6a 50		 push	 80			; 00000050H
  00156	6a 00		 push	 0
  00158	6b 45 08 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  0015c	05 00 00 00 00	 add	 eax, OFFSET _Lib
  00161	50		 push	 eax
  00162	e8 00 00 00 00	 call	 _memset
  00167	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1044 :     if (LibraryMode==0) {

  0016a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  00171	75 27		 jne	 SHORT $LN12@MakeNewLib

; 1045 :       memmove(&Lib[ListNr].Identification,SymbolLibraryCode1,strlen(SymbolLibraryCode1));

  00173	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@CAKLMLEK@Symbol?5library?5version?51?40?$AA@
  00178	e8 00 00 00 00	 call	 _strlen
  0017d	83 c4 04	 add	 esp, 4
  00180	50		 push	 eax
  00181	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@CAKLMLEK@Symbol?5library?5version?51?40?$AA@
  00186	6b 45 08 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  0018a	05 00 00 00 00	 add	 eax, OFFSET _Lib
  0018f	50		 push	 eax
  00190	e8 00 00 00 00	 call	 _memmove
  00195	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1046 :     } else {

  00198	eb 25		 jmp	 SHORT $LN13@MakeNewLib
$LN12@MakeNewLib:

; 1047 :       memmove(&Lib[ListNr].Identification,GeometryLibraryCode1,strlen(GeometryLibraryCode1));

  0019a	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@LDKPIGNM@Geometry?5library?5version?51?40?$AA@
  0019f	e8 00 00 00 00	 call	 _strlen
  001a4	83 c4 04	 add	 esp, 4
  001a7	50		 push	 eax
  001a8	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@LDKPIGNM@Geometry?5library?5version?51?40?$AA@
  001ad	6b 45 08 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  001b1	05 00 00 00 00	 add	 eax, OFFSET _Lib
  001b6	50		 push	 eax
  001b7	e8 00 00 00 00	 call	 _memmove
  001bc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN13@MakeNewLib:

; 1048 :     }
; 1049 :     Lib[ListNr].MaxNrLibEntries=200;

  001bf	6b 45 08 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  001c3	c7 80 4c 00 00
	00 c8 00 00 00	 mov	 DWORD PTR _Lib[eax+76], 200 ; 000000c8H

; 1050 :     FileWrite(fp,&Lib[ListNr],sizeof(LibRecord),&res);

  001cd	8d 45 f4	 lea	 eax, DWORD PTR _res$[ebp]
  001d0	50		 push	 eax
  001d1	6a 50		 push	 80			; 00000050H
  001d3	6b 4d 08 50	 imul	 ecx, DWORD PTR _ListNr$[ebp], 80
  001d7	81 c1 00 00 00
	00		 add	 ecx, OFFSET _Lib
  001dd	51		 push	 ecx
  001de	8b 55 e8	 mov	 edx, DWORD PTR _fp$[ebp]
  001e1	52		 push	 edx
  001e2	e8 00 00 00 00	 call	 _FileWrite
  001e7	83 c4 10	 add	 esp, 16			; 00000010H

; 1051 :     memset(&LibName,0,sizeof(LibNameRecord));

  001ea	6a 28		 push	 40			; 00000028H
  001ec	6a 00		 push	 0
  001ee	8d 85 a4 fd ff
	ff		 lea	 eax, DWORD PTR _LibName$[ebp]
  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 _memset
  001fa	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1052 :     for (cnt=0;cnt<200;cnt++) {

  001fd	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _cnt$[ebp], 0
  00204	eb 09		 jmp	 SHORT $LN4@MakeNewLib
$LN2@MakeNewLib:
  00206	8b 45 dc	 mov	 eax, DWORD PTR _cnt$[ebp]
  00209	83 c0 01	 add	 eax, 1
  0020c	89 45 dc	 mov	 DWORD PTR _cnt$[ebp], eax
$LN4@MakeNewLib:
  0020f	81 7d dc c8 00
	00 00		 cmp	 DWORD PTR _cnt$[ebp], 200 ; 000000c8H
  00216	7d 1b		 jge	 SHORT $LN3@MakeNewLib

; 1053 :       FileWrite(fp,&LibName,sizeof(LibNameRecord),&res);

  00218	8d 45 f4	 lea	 eax, DWORD PTR _res$[ebp]
  0021b	50		 push	 eax
  0021c	6a 28		 push	 40			; 00000028H
  0021e	8d 8d a4 fd ff
	ff		 lea	 ecx, DWORD PTR _LibName$[ebp]
  00224	51		 push	 ecx
  00225	8b 55 e8	 mov	 edx, DWORD PTR _fp$[ebp]
  00228	52		 push	 edx
  00229	e8 00 00 00 00	 call	 _FileWrite
  0022e	83 c4 10	 add	 esp, 16			; 00000010H

; 1054 :     }

  00231	eb d3		 jmp	 SHORT $LN2@MakeNewLib
$LN3@MakeNewLib:

; 1055 :     FileClose(fp);

  00233	8b 45 e8	 mov	 eax, DWORD PTR _fp$[ebp]
  00236	50		 push	 eax
  00237	e8 00 00 00 00	 call	 _FileClose
  0023c	83 c4 04	 add	 esp, 4

; 1056 :     memset(&LibNames[ListNr],0,sizeof(LibNames[ListNr]));

  0023f	68 00 80 02 00	 push	 163840			; 00028000H
  00244	6a 00		 push	 0
  00246	69 45 08 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  0024d	05 00 00 00 00	 add	 eax, OFFSET _LibNames
  00252	50		 push	 eax
  00253	e8 00 00 00 00	 call	 _memset
  00258	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1057 :     strcpy(LibraryFile[ListNr],NewLibName);

  0025b	68 00 00 00 00	 push	 OFFSET _NewLibName
  00260	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  00263	c1 e0 09	 shl	 eax, 9
  00266	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  0026b	50		 push	 eax
  0026c	e8 00 00 00 00	 call	 _strcpy
  00271	83 c4 08	 add	 esp, 8

; 1058 :     DisplayLibraryText(1);

  00274	6a 01		 push	 1
  00276	e8 00 00 00 00	 call	 _DisplayLibraryText
  0027b	83 c4 04	 add	 esp, 4
$LN1@MakeNewLib:

; 1059 : //    sprintf(str2,"Symbol library %s [%i symbols]",LibraryFile,Lib[ListNr].NrLibEntries);
; 1060 : //    SetWindowText(LIBMANWindow,str2);
; 1061 :   }
; 1062 : 
; 1063 : }

  0027e	52		 push	 edx
  0027f	8b cd		 mov	 ecx, ebp
  00281	50		 push	 eax
  00282	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN19@MakeNewLib
  00288	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0028d	58		 pop	 eax
  0028e	5a		 pop	 edx
  0028f	5f		 pop	 edi
  00290	5e		 pop	 esi
  00291	5b		 pop	 ebx
  00292	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00295	33 cd		 xor	 ecx, ebp
  00297	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0029c	81 c4 e0 03 00
	00		 add	 esp, 992		; 000003e0H
  002a2	3b ec		 cmp	 ebp, esp
  002a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002a9	8b e5		 mov	 esp, ebp
  002ab	5d		 pop	 ebp
  002ac	c3		 ret	 0
  002ad	0f 1f 00	 npad	 3
$LN19@MakeNewLib:
  002b0	03 00 00 00	 DD	 3
  002b4	00 00 00 00	 DD	 $LN18@MakeNewLib
$LN18@MakeNewLib:
  002b8	f4 ff ff ff	 DD	 -12			; fffffff4H
  002bc	04 00 00 00	 DD	 4
  002c0	00 00 00 00	 DD	 $LN15@MakeNewLib
  002c4	d4 fd ff ff	 DD	 -556			; fffffdd4H
  002c8	00 02 00 00	 DD	 512			; 00000200H
  002cc	00 00 00 00	 DD	 $LN16@MakeNewLib
  002d0	a4 fd ff ff	 DD	 -604			; fffffda4H
  002d4	28 00 00 00	 DD	 40			; 00000028H
  002d8	00 00 00 00	 DD	 $LN17@MakeNewLib
$LN17@MakeNewLib:
  002dc	4c		 DB	 76			; 0000004cH
  002dd	69		 DB	 105			; 00000069H
  002de	62		 DB	 98			; 00000062H
  002df	4e		 DB	 78			; 0000004eH
  002e0	61		 DB	 97			; 00000061H
  002e1	6d		 DB	 109			; 0000006dH
  002e2	65		 DB	 101			; 00000065H
  002e3	00		 DB	 0
$LN16@MakeNewLib:
  002e4	73		 DB	 115			; 00000073H
  002e5	74		 DB	 116			; 00000074H
  002e6	72		 DB	 114			; 00000072H
  002e7	32		 DB	 50			; 00000032H
  002e8	00		 DB	 0
$LN15@MakeNewLib:
  002e9	72		 DB	 114			; 00000072H
  002ea	65		 DB	 101			; 00000065H
  002eb	73		 DB	 115			; 00000073H
  002ec	00		 DB	 0
_MakeNewLib ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _NewLibDialog2@16
_TEXT	SEGMENT
tv77 = -924						; size = 4
tv64 = -924						; size = 4
_str$ = -532						; size = 512
_about$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_Dialog$ = 8						; size = 4
_Message$ = 12						; size = 4
_WParam$ = 16						; size = 4
_LParam$ = 20						; size = 4
_NewLibDialog2@16 PROC					; COMDAT

; 977  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 9c 03 00
	00		 sub	 esp, 924		; 0000039cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 64 fc ff
	ff		 lea	 edi, DWORD PTR [ebp-924]
  00012	b9 e7 00 00 00	 mov	 ecx, 231		; 000000e7H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 978  :   int32   about;
; 979  :   char    str[MAX_LENGTH_STRING];
; 980  : 
; 981  :   about = 1;

  00028	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _about$[ebp], 1

; 982  :   switch ( Message ) {

  0002f	8b 45 0c	 mov	 eax, DWORD PTR _Message$[ebp]
  00032	89 85 64 fc ff
	ff		 mov	 DWORD PTR tv64[ebp], eax
  00038	81 bd 64 fc ff
	ff 10 01 00 00	 cmp	 DWORD PTR tv64[ebp], 272 ; 00000110H
  00042	74 15		 je	 SHORT $LN6@NewLibDial
  00044	81 bd 64 fc ff
	ff 11 01 00 00	 cmp	 DWORD PTR tv64[ebp], 273 ; 00000111H
  0004e	0f 84 83 00 00
	00		 je	 $LN8@NewLibDial
  00054	e9 19 01 00 00	 jmp	 $LN2@NewLibDial
$LN6@NewLibDial:

; 983  :     case WM_INITDIALOG:
; 984  :       SetDialogItemText(Dialog,IDOK                       ,SC(3,"OK"));

  00059	68 00 00 00 00	 push	 OFFSET ??_C@_02GIPFHKNO@OK?$AA@
  0005e	6a 03		 push	 3
  00060	e8 00 00 00 00	 call	 _StringConvert
  00065	83 c4 08	 add	 esp, 8
  00068	50		 push	 eax
  00069	6a 01		 push	 1
  0006b	8b 45 08	 mov	 eax, DWORD PTR _Dialog$[ebp]
  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 _SetDialogItemText
  00074	83 c4 0c	 add	 esp, 12			; 0000000cH

; 985  :       SetDialogItemText(Dialog,IDCANCEL                   ,SC(4,"Cancel"));

  00077	68 00 00 00 00	 push	 OFFSET ??_C@_06FMBNCPDL@Cancel?$AA@
  0007c	6a 04		 push	 4
  0007e	e8 00 00 00 00	 call	 _StringConvert
  00083	83 c4 08	 add	 esp, 8
  00086	50		 push	 eax
  00087	6a 02		 push	 2
  00089	8b 45 08	 mov	 eax, DWORD PTR _Dialog$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 _SetDialogItemText
  00092	83 c4 0c	 add	 esp, 12			; 0000000cH

; 986  :       sprintf(str,"%s\\",DefaultLibraryPath);

  00095	68 00 00 00 00	 push	 OFFSET _DefaultLibraryPath
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_03JOOLLLO@?$CFs?2?$AA@
  0009f	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 _sprintf
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH

; 987  :       SendDlgItemMessageUTF8(Dialog,IDC_EDIT1,WM_SETTEXT,0,(LPARAM)(LPSTR)str);

  000ae	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  000b4	50		 push	 eax
  000b5	6a 00		 push	 0
  000b7	6a 0c		 push	 12			; 0000000cH
  000b9	68 e8 03 00 00	 push	 1000			; 000003e8H
  000be	8b 4d 08	 mov	 ecx, DWORD PTR _Dialog$[ebp]
  000c1	51		 push	 ecx
  000c2	e8 00 00 00 00	 call	 _SendDlgItemMessageUTF8
  000c7	83 c4 14	 add	 esp, 20			; 00000014H

; 988  :       return about;

  000ca	8b 45 f4	 mov	 eax, DWORD PTR _about$[ebp]
  000cd	e9 aa 00 00 00	 jmp	 $LN1@NewLibDial

; 989  :     case WM_MOVE:
; 990  :       break;

  000d2	e9 9b 00 00 00	 jmp	 $LN2@NewLibDial
$LN8@NewLibDial:

; 991  :     case WM_COMMAND:
; 992  :       switch (WParam) {

  000d7	8b 45 10	 mov	 eax, DWORD PTR _WParam$[ebp]
  000da	89 85 64 fc ff
	ff		 mov	 DWORD PTR tv77[ebp], eax
  000e0	83 bd 64 fc ff
	ff 01		 cmp	 DWORD PTR tv77[ebp], 1
  000e7	74 0b		 je	 SHORT $LN9@NewLibDial
  000e9	83 bd 64 fc ff
	ff 02		 cmp	 DWORD PTR tv77[ebp], 2
  000f0	74 66		 je	 SHORT $LN12@NewLibDial
  000f2	eb 7e		 jmp	 SHORT $LN2@NewLibDial
$LN9@NewLibDial:

; 993  :         case IDOK:
; 994  :           if (SendDlgItemMessageUTF8(Dialog,IDC_EDIT1,WM_GETTEXT,MAX_LENGTH_STRING-50,
; 995  :                                      (LPARAM)(LPSTR)&DialogTextLine)>0) {

  000f4	68 00 00 00 00	 push	 OFFSET _DialogTextLine
  000f9	68 ce 01 00 00	 push	 462			; 000001ceH
  000fe	6a 0d		 push	 13			; 0000000dH
  00100	68 e8 03 00 00	 push	 1000			; 000003e8H
  00105	8b 45 08	 mov	 eax, DWORD PTR _Dialog$[ebp]
  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 _SendDlgItemMessageUTF8
  0010e	83 c4 14	 add	 esp, 20			; 00000014H
  00111	85 c0		 test	 eax, eax
  00113	7e 29		 jle	 SHORT $LN10@NewLibDial

; 996  :             strcpy((LPSTR)&NewLibName,(LPSTR)&DialogTextLine);

  00115	68 00 00 00 00	 push	 OFFSET _DialogTextLine
  0011a	68 00 00 00 00	 push	 OFFSET _NewLibName
  0011f	e8 00 00 00 00	 call	 _strcpy
  00124	83 c4 08	 add	 esp, 8

; 997  :             EndDialog(Dialog, 1);

  00127	8b f4		 mov	 esi, esp
  00129	6a 01		 push	 1
  0012b	8b 45 08	 mov	 eax, DWORD PTR _Dialog$[ebp]
  0012e	50		 push	 eax
  0012f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8
  00135	3b f4		 cmp	 esi, esp
  00137	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013c	eb 15		 jmp	 SHORT $LN11@NewLibDial
$LN10@NewLibDial:

; 998  :           } else EndDialog(Dialog, 2);

  0013e	8b f4		 mov	 esi, esp
  00140	6a 02		 push	 2
  00142	8b 45 08	 mov	 eax, DWORD PTR _Dialog$[ebp]
  00145	50		 push	 eax
  00146	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8
  0014c	3b f4		 cmp	 esi, esp
  0014e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN11@NewLibDial:

; 999  :           return about;

  00153	8b 45 f4	 mov	 eax, DWORD PTR _about$[ebp]
  00156	eb 24		 jmp	 SHORT $LN1@NewLibDial
$LN12@NewLibDial:

; 1000 :         case IDCANCEL:
; 1001 :           EndDialog(Dialog, 2);

  00158	8b f4		 mov	 esi, esp
  0015a	6a 02		 push	 2
  0015c	8b 45 08	 mov	 eax, DWORD PTR _Dialog$[ebp]
  0015f	50		 push	 eax
  00160	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8
  00166	3b f4		 cmp	 esi, esp
  00168	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1002 :           return about;

  0016d	8b 45 f4	 mov	 eax, DWORD PTR _about$[ebp]
  00170	eb 0a		 jmp	 SHORT $LN1@NewLibDial
$LN2@NewLibDial:

; 1003 :       }
; 1004 :       break;
; 1005 :   }
; 1006 :   about = 0;

  00172	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _about$[ebp], 0

; 1007 :   return about;

  00179	8b 45 f4	 mov	 eax, DWORD PTR _about$[ebp]
$LN1@NewLibDial:

; 1008 : }

  0017c	52		 push	 edx
  0017d	8b cd		 mov	 ecx, ebp
  0017f	50		 push	 eax
  00180	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN16@NewLibDial
  00186	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0018b	58		 pop	 eax
  0018c	5a		 pop	 edx
  0018d	5f		 pop	 edi
  0018e	5e		 pop	 esi
  0018f	5b		 pop	 ebx
  00190	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00193	33 cd		 xor	 ecx, ebp
  00195	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0019a	81 c4 9c 03 00
	00		 add	 esp, 924		; 0000039cH
  001a0	3b ec		 cmp	 ebp, esp
  001a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a7	8b e5		 mov	 esp, ebp
  001a9	5d		 pop	 ebp
  001aa	c2 10 00	 ret	 16			; 00000010H
  001ad	0f 1f 00	 npad	 3
$LN16@NewLibDial:
  001b0	01 00 00 00	 DD	 1
  001b4	00 00 00 00	 DD	 $LN15@NewLibDial
$LN15@NewLibDial:
  001b8	ec fd ff ff	 DD	 -532			; fffffdecH
  001bc	00 02 00 00	 DD	 512			; 00000200H
  001c0	00 00 00 00	 DD	 $LN14@NewLibDial
$LN14@NewLibDial:
  001c4	73		 DB	 115			; 00000073H
  001c5	74		 DB	 116			; 00000074H
  001c6	72		 DB	 114			; 00000072H
  001c7	00		 DB	 0
_NewLibDialog2@16 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _RemoveSymbolFromList
_TEXT	SEGMENT
_res$ = -8						; size = 4
_ListNr$ = 8						; size = 4
_SymbolName$ = 12					; size = 4
_mode$ = 16						; size = 4
_RemoveSymbolFromList PROC				; COMDAT

; 952  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 953  :   int32 res;
; 954  : 
; 955  :   if (ListNr==0) {

  0001e	83 7d 08 00	 cmp	 DWORD PTR _ListNr$[ebp], 0
  00022	75 1f		 jne	 SHORT $LN2@RemoveSymb

; 956  :     res=SendMessageUTF8(ListWindow1,LB_FINDSTRING,(WPARAM)-1,(LPARAM)SymbolName);

  00024	8b 45 0c	 mov	 eax, DWORD PTR _SymbolName$[ebp]
  00027	50		 push	 eax
  00028	6a ff		 push	 -1
  0002a	68 8f 01 00 00	 push	 399			; 0000018fH
  0002f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ListWindow1
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 _SendMessageUTF8
  0003b	83 c4 10	 add	 esp, 16			; 00000010H
  0003e	89 45 f8	 mov	 DWORD PTR _res$[ebp], eax

; 957  :   } else {

  00041	eb 1d		 jmp	 SHORT $LN3@RemoveSymb
$LN2@RemoveSymb:

; 958  :     res=SendMessageUTF8(ListWindow2,LB_FINDSTRING,(WPARAM)-1,(LPARAM)SymbolName);

  00043	8b 45 0c	 mov	 eax, DWORD PTR _SymbolName$[ebp]
  00046	50		 push	 eax
  00047	6a ff		 push	 -1
  00049	68 8f 01 00 00	 push	 399			; 0000018fH
  0004e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ListWindow2
  00054	51		 push	 ecx
  00055	e8 00 00 00 00	 call	 _SendMessageUTF8
  0005a	83 c4 10	 add	 esp, 16			; 00000010H
  0005d	89 45 f8	 mov	 DWORD PTR _res$[ebp], eax
$LN3@RemoveSymb:

; 959  :   }
; 960  :   if (res==LB_ERR) return -1;

  00060	83 7d f8 ff	 cmp	 DWORD PTR _res$[ebp], -1
  00064	75 05		 jne	 SHORT $LN4@RemoveSymb
  00066	83 c8 ff	 or	 eax, -1
  00069	eb 52		 jmp	 SHORT $LN1@RemoveSymb
$LN4@RemoveSymb:

; 961  : 
; 962  :   if (ListNr==0) {

  0006b	83 7d 08 00	 cmp	 DWORD PTR _ListNr$[ebp], 0
  0006f	75 26		 jne	 SHORT $LN5@RemoveSymb

; 963  :     res=SendMessage(ListWindow1,LB_DELETESTRING,res,0);

  00071	8b f4		 mov	 esi, esp
  00073	6a 00		 push	 0
  00075	8b 45 f8	 mov	 eax, DWORD PTR _res$[ebp]
  00078	50		 push	 eax
  00079	68 82 01 00 00	 push	 386			; 00000182H
  0007e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ListWindow1
  00084	51		 push	 ecx
  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0008b	3b f4		 cmp	 esi, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	89 45 f8	 mov	 DWORD PTR _res$[ebp], eax

; 964  :   } else {

  00095	eb 24		 jmp	 SHORT $LN6@RemoveSymb
$LN5@RemoveSymb:

; 965  :     res=SendMessage(ListWindow2,LB_DELETESTRING,res,0);

  00097	8b f4		 mov	 esi, esp
  00099	6a 00		 push	 0
  0009b	8b 45 f8	 mov	 eax, DWORD PTR _res$[ebp]
  0009e	50		 push	 eax
  0009f	68 82 01 00 00	 push	 386			; 00000182H
  000a4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ListWindow2
  000aa	51		 push	 ecx
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  000b1	3b f4		 cmp	 esi, esp
  000b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b8	89 45 f8	 mov	 DWORD PTR _res$[ebp], eax
$LN6@RemoveSymb:

; 966  :   }
; 967  :   return 0;

  000bb	33 c0		 xor	 eax, eax
$LN1@RemoveSymb:

; 968  : }

  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx
  000c0	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000c6	3b ec		 cmp	 ebp, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c3		 ret	 0
_RemoveSymbolFromList ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _AddSymbolToList
_TEXT	SEGMENT
_res$ = -8						; size = 4
_ListNr$ = 8						; size = 4
_SymbolName$ = 12					; size = 4
_mode$ = 16						; size = 4
_AddSymbolToList PROC					; COMDAT

; 927  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 928  :   int32 res;
; 929  : 
; 930  :   if (ListNr==0) {

  0001e	83 7d 08 00	 cmp	 DWORD PTR _ListNr$[ebp], 0
  00022	75 1f		 jne	 SHORT $LN2@AddSymbolT

; 931  :     res=SendMessageUTF8(ListWindow1,LB_FINDSTRING,(WPARAM)-1,(LPARAM)SymbolName);

  00024	8b 45 0c	 mov	 eax, DWORD PTR _SymbolName$[ebp]
  00027	50		 push	 eax
  00028	6a ff		 push	 -1
  0002a	68 8f 01 00 00	 push	 399			; 0000018fH
  0002f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ListWindow1
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 _SendMessageUTF8
  0003b	83 c4 10	 add	 esp, 16			; 00000010H
  0003e	89 45 f8	 mov	 DWORD PTR _res$[ebp], eax

; 932  :   } else {

  00041	eb 1d		 jmp	 SHORT $LN3@AddSymbolT
$LN2@AddSymbolT:

; 933  :     res=SendMessageUTF8(ListWindow2,LB_FINDSTRING,(WPARAM)-1,(LPARAM)SymbolName);

  00043	8b 45 0c	 mov	 eax, DWORD PTR _SymbolName$[ebp]
  00046	50		 push	 eax
  00047	6a ff		 push	 -1
  00049	68 8f 01 00 00	 push	 399			; 0000018fH
  0004e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ListWindow2
  00054	51		 push	 ecx
  00055	e8 00 00 00 00	 call	 _SendMessageUTF8
  0005a	83 c4 10	 add	 esp, 16			; 00000010H
  0005d	89 45 f8	 mov	 DWORD PTR _res$[ebp], eax
$LN3@AddSymbolT:

; 934  :   }
; 935  :   if (res!=LB_ERR) return -1;

  00060	83 7d f8 ff	 cmp	 DWORD PTR _res$[ebp], -1
  00064	74 05		 je	 SHORT $LN4@AddSymbolT
  00066	83 c8 ff	 or	 eax, -1
  00069	eb 44		 jmp	 SHORT $LN1@AddSymbolT
$LN4@AddSymbolT:

; 936  : 
; 937  :   if (ListNr==0) {

  0006b	83 7d 08 00	 cmp	 DWORD PTR _ListNr$[ebp], 0
  0006f	75 1f		 jne	 SHORT $LN5@AddSymbolT

; 938  :     res=SendMessageUTF8(ListWindow1,LB_ADDSTRING,0,(LPARAM)SymbolName);

  00071	8b 45 0c	 mov	 eax, DWORD PTR _SymbolName$[ebp]
  00074	50		 push	 eax
  00075	6a 00		 push	 0
  00077	68 80 01 00 00	 push	 384			; 00000180H
  0007c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ListWindow1
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 _SendMessageUTF8
  00088	83 c4 10	 add	 esp, 16			; 00000010H
  0008b	89 45 f8	 mov	 DWORD PTR _res$[ebp], eax

; 939  :   } else {

  0008e	eb 1d		 jmp	 SHORT $LN6@AddSymbolT
$LN5@AddSymbolT:

; 940  :     res=SendMessageUTF8(ListWindow2,LB_ADDSTRING,0,(LPARAM)SymbolName);

  00090	8b 45 0c	 mov	 eax, DWORD PTR _SymbolName$[ebp]
  00093	50		 push	 eax
  00094	6a 00		 push	 0
  00096	68 80 01 00 00	 push	 384			; 00000180H
  0009b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ListWindow2
  000a1	51		 push	 ecx
  000a2	e8 00 00 00 00	 call	 _SendMessageUTF8
  000a7	83 c4 10	 add	 esp, 16			; 00000010H
  000aa	89 45 f8	 mov	 DWORD PTR _res$[ebp], eax
$LN6@AddSymbolT:

; 941  :   }
; 942  :   return 0;

  000ad	33 c0		 xor	 eax, eax
$LN1@AddSymbolT:

; 943  : }

  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5b		 pop	 ebx
  000b2	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000b8	3b ec		 cmp	 ebp, esp
  000ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c3		 ret	 0
_AddSymbolToList ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _PutSymbolsIntoList
_TEXT	SEGMENT
tv135 = -244						; size = 4
_result$ = -44						; size = 4
_Libfp$ = -32						; size = 4
_cnt$ = -20						; size = 4
_res$ = -8						; size = 4
_ListNr$ = 8						; size = 4
_mode$ = 12						; size = 4
_PutSymbolsIntoList PROC				; COMDAT

; 886  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f4 00 00
	00		 sub	 esp, 244		; 000000f4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00012	b9 3d 00 00 00	 mov	 ecx, 61			; 0000003dH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 887  : 
; 888  :   int32   res,cnt,Libfp,result;
; 889  : 
; 890  :   if (LibraryFile[ListNr][0]==0) {

  0001e	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  00021	c1 e0 09	 shl	 eax, 9
  00024	b9 01 00 00 00	 mov	 ecx, 1
  00029	6b d1 00	 imul	 edx, ecx, 0
  0002c	0f be 84 10 00
	00 00 00	 movsx	 eax, BYTE PTR _LibraryFile[eax+edx]
  00034	85 c0		 test	 eax, eax
  00036	75 38		 jne	 SHORT $LN8@PutSymbols

; 891  :     MessageBoxUTF8(LIBMANWindow,SC(8,"No library file open"),SC(9,"Error"),MB_OK);

  00038	6a 00		 push	 0
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  0003f	6a 09		 push	 9
  00041	e8 00 00 00 00	 call	 _StringConvert
  00046	83 c4 08	 add	 esp, 8
  00049	50		 push	 eax
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FBPFCAMF@No?5library?5file?5open?$AA@
  0004f	6a 08		 push	 8
  00051	e8 00 00 00 00	 call	 _StringConvert
  00056	83 c4 08	 add	 esp, 8
  00059	50		 push	 eax
  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  0005f	50		 push	 eax
  00060	e8 00 00 00 00	 call	 _MessageBoxUTF8
  00065	83 c4 10	 add	 esp, 16			; 00000010H

; 892  :     return -1;

  00068	83 c8 ff	 or	 eax, -1
  0006b	e9 c3 01 00 00	 jmp	 $LN1@PutSymbols
$LN8@PutSymbols:

; 893  :   }
; 894  :   if ((Libfp=FileOpenReadOnlyUTF8(LibraryFile[ListNr]))==-1) {

  00070	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  00073	c1 e0 09	 shl	 eax, 9
  00076	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 _FileOpenReadOnlyUTF8
  00081	83 c4 04	 add	 esp, 4
  00084	89 45 e0	 mov	 DWORD PTR _Libfp$[ebp], eax
  00087	83 7d e0 ff	 cmp	 DWORD PTR _Libfp$[ebp], -1
  0008b	75 08		 jne	 SHORT $LN9@PutSymbols

; 895  :     return -1;

  0008d	83 c8 ff	 or	 eax, -1
  00090	e9 9e 01 00 00	 jmp	 $LN1@PutSymbols
$LN9@PutSymbols:

; 896  :   }
; 897  :   if (FileRead(Libfp,&Lib[ListNr],sizeof(LibRecord),&result)<0) {

  00095	8d 45 d4	 lea	 eax, DWORD PTR _result$[ebp]
  00098	50		 push	 eax
  00099	6a 50		 push	 80			; 00000050H
  0009b	6b 4d 08 50	 imul	 ecx, DWORD PTR _ListNr$[ebp], 80
  0009f	81 c1 00 00 00
	00		 add	 ecx, OFFSET _Lib
  000a5	51		 push	 ecx
  000a6	8b 55 e0	 mov	 edx, DWORD PTR _Libfp$[ebp]
  000a9	52		 push	 edx
  000aa	e8 00 00 00 00	 call	 _FileRead
  000af	83 c4 10	 add	 esp, 16			; 00000010H
  000b2	85 c0		 test	 eax, eax
  000b4	7d 08		 jge	 SHORT $LN10@PutSymbols

; 898  :     return -1;

  000b6	83 c8 ff	 or	 eax, -1
  000b9	e9 75 01 00 00	 jmp	 $LN1@PutSymbols
$LN10@PutSymbols:

; 899  :   }
; 900  :   Lib[ListNr].NrLibEntries=min(MAX_NR_LIB_SYMBOLS,Lib[ListNr].NrLibEntries);

  000be	6b 45 08 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  000c2	81 b8 48 00 00
	00 00 10 00 00	 cmp	 DWORD PTR _Lib[eax+72], 4096 ; 00001000H
  000cc	7e 0c		 jle	 SHORT $LN17@PutSymbols
  000ce	c7 85 0c ff ff
	ff 00 10 00 00	 mov	 DWORD PTR tv135[ebp], 4096 ; 00001000H
  000d8	eb 10		 jmp	 SHORT $LN18@PutSymbols
$LN17@PutSymbols:
  000da	6b 4d 08 50	 imul	 ecx, DWORD PTR _ListNr$[ebp], 80
  000de	8b 91 48 00 00
	00		 mov	 edx, DWORD PTR _Lib[ecx+72]
  000e4	89 95 0c ff ff
	ff		 mov	 DWORD PTR tv135[ebp], edx
$LN18@PutSymbols:
  000ea	6b 45 08 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  000ee	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR tv135[ebp]
  000f4	89 88 48 00 00
	00		 mov	 DWORD PTR _Lib[eax+72], ecx

; 901  :   if (FileRead(Libfp,&LibNames[ListNr],Lib[ListNr].NrLibEntries*sizeof(LibNameRecord),&result)<0) return -1;

  000fa	8d 45 d4	 lea	 eax, DWORD PTR _result$[ebp]
  000fd	50		 push	 eax
  000fe	6b 4d 08 50	 imul	 ecx, DWORD PTR _ListNr$[ebp], 80
  00102	6b 91 48 00 00
	00 28		 imul	 edx, DWORD PTR _Lib[ecx+72], 40
  00109	52		 push	 edx
  0010a	69 45 08 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  00111	05 00 00 00 00	 add	 eax, OFFSET _LibNames
  00116	50		 push	 eax
  00117	8b 4d e0	 mov	 ecx, DWORD PTR _Libfp$[ebp]
  0011a	51		 push	 ecx
  0011b	e8 00 00 00 00	 call	 _FileRead
  00120	83 c4 10	 add	 esp, 16			; 00000010H
  00123	85 c0		 test	 eax, eax
  00125	7d 08		 jge	 SHORT $LN11@PutSymbols
  00127	83 c8 ff	 or	 eax, -1
  0012a	e9 04 01 00 00	 jmp	 $LN1@PutSymbols
$LN11@PutSymbols:

; 902  :   FileClose(Libfp);

  0012f	8b 45 e0	 mov	 eax, DWORD PTR _Libfp$[ebp]
  00132	50		 push	 eax
  00133	e8 00 00 00 00	 call	 _FileClose
  00138	83 c4 04	 add	 esp, 4

; 903  :   if (ListNr==0) {

  0013b	83 7d 08 00	 cmp	 DWORD PTR _ListNr$[ebp], 0
  0013f	75 23		 jne	 SHORT $LN12@PutSymbols

; 904  :     res=SendMessage(ListWindow1,LB_RESETCONTENT,0,0);

  00141	8b f4		 mov	 esi, esp
  00143	6a 00		 push	 0
  00145	6a 00		 push	 0
  00147	68 84 01 00 00	 push	 388			; 00000184H
  0014c	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow1
  00151	50		 push	 eax
  00152	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00158	3b f4		 cmp	 esi, esp
  0015a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015f	89 45 f8	 mov	 DWORD PTR _res$[ebp], eax

; 905  :   } else {

  00162	eb 21		 jmp	 SHORT $LN13@PutSymbols
$LN12@PutSymbols:

; 906  :     res=SendMessage(ListWindow2,LB_RESETCONTENT,0,0);

  00164	8b f4		 mov	 esi, esp
  00166	6a 00		 push	 0
  00168	6a 00		 push	 0
  0016a	68 84 01 00 00	 push	 388			; 00000184H
  0016f	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow2
  00174	50		 push	 eax
  00175	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0017b	3b f4		 cmp	 esi, esp
  0017d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00182	89 45 f8	 mov	 DWORD PTR _res$[ebp], eax
$LN13@PutSymbols:

; 907  :   }
; 908  : 
; 909  :   for (cnt=0;cnt<MAX_NR_LIB_SYMBOLS;cnt++) LibIndex[cnt]=-1;

  00185	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _cnt$[ebp], 0
  0018c	eb 09		 jmp	 SHORT $LN4@PutSymbols
$LN2@PutSymbols:
  0018e	8b 45 ec	 mov	 eax, DWORD PTR _cnt$[ebp]
  00191	83 c0 01	 add	 eax, 1
  00194	89 45 ec	 mov	 DWORD PTR _cnt$[ebp], eax
$LN4@PutSymbols:
  00197	81 7d ec 00 10
	00 00		 cmp	 DWORD PTR _cnt$[ebp], 4096 ; 00001000H
  0019e	7d 10		 jge	 SHORT $LN3@PutSymbols
  001a0	8b 45 ec	 mov	 eax, DWORD PTR _cnt$[ebp]
  001a3	c7 04 85 00 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR _LibIndex[eax*4], -1
  001ae	eb de		 jmp	 SHORT $LN2@PutSymbols
$LN3@PutSymbols:

; 910  :   for (cnt=0;cnt<Lib[ListNr].NrLibEntries;cnt++) {

  001b0	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _cnt$[ebp], 0
  001b7	eb 09		 jmp	 SHORT $LN7@PutSymbols
$LN5@PutSymbols:
  001b9	8b 45 ec	 mov	 eax, DWORD PTR _cnt$[ebp]
  001bc	83 c0 01	 add	 eax, 1
  001bf	89 45 ec	 mov	 DWORD PTR _cnt$[ebp], eax
$LN7@PutSymbols:
  001c2	6b 45 08 50	 imul	 eax, DWORD PTR _ListNr$[ebp], 80
  001c6	8b 4d ec	 mov	 ecx, DWORD PTR _cnt$[ebp]
  001c9	3b 88 48 00 00
	00		 cmp	 ecx, DWORD PTR _Lib[eax+72]
  001cf	7d 60		 jge	 SHORT $LN6@PutSymbols

; 911  :     if (ListNr==0) {

  001d1	83 7d 08 00	 cmp	 DWORD PTR _ListNr$[ebp], 0
  001d5	75 2d		 jne	 SHORT $LN14@PutSymbols

; 912  :       res=SendMessageUTF8(ListWindow1,LB_ADDSTRING,0,(LPARAM)&LibNames[ListNr][cnt].Text);

  001d7	69 45 08 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  001de	6b 4d ec 28	 imul	 ecx, DWORD PTR _cnt$[ebp], 40
  001e2	8d 94 08 00 00
	00 00		 lea	 edx, DWORD PTR _LibNames[eax+ecx]
  001e9	52		 push	 edx
  001ea	6a 00		 push	 0
  001ec	68 80 01 00 00	 push	 384			; 00000180H
  001f1	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow1
  001f6	50		 push	 eax
  001f7	e8 00 00 00 00	 call	 _SendMessageUTF8
  001fc	83 c4 10	 add	 esp, 16			; 00000010H
  001ff	89 45 f8	 mov	 DWORD PTR _res$[ebp], eax

; 913  :     } else {

  00202	eb 2b		 jmp	 SHORT $LN15@PutSymbols
$LN14@PutSymbols:

; 914  :       res=SendMessageUTF8(ListWindow2,LB_ADDSTRING,0,(LPARAM)&LibNames[ListNr][cnt].Text);

  00204	69 45 08 00 80
	02 00		 imul	 eax, DWORD PTR _ListNr$[ebp], 163840
  0020b	6b 4d ec 28	 imul	 ecx, DWORD PTR _cnt$[ebp], 40
  0020f	8d 94 08 00 00
	00 00		 lea	 edx, DWORD PTR _LibNames[eax+ecx]
  00216	52		 push	 edx
  00217	6a 00		 push	 0
  00219	68 80 01 00 00	 push	 384			; 00000180H
  0021e	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindow2
  00223	50		 push	 eax
  00224	e8 00 00 00 00	 call	 _SendMessageUTF8
  00229	83 c4 10	 add	 esp, 16			; 00000010H
  0022c	89 45 f8	 mov	 DWORD PTR _res$[ebp], eax
$LN15@PutSymbols:

; 915  :     }
; 916  :   }

  0022f	eb 88		 jmp	 SHORT $LN5@PutSymbols
$LN6@PutSymbols:

; 917  :   return 0;

  00231	33 c0		 xor	 eax, eax
$LN1@PutSymbols:

; 918  : }

  00233	52		 push	 edx
  00234	8b cd		 mov	 ecx, ebp
  00236	50		 push	 eax
  00237	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN21@PutSymbols
  0023d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00242	58		 pop	 eax
  00243	5a		 pop	 edx
  00244	5f		 pop	 edi
  00245	5e		 pop	 esi
  00246	5b		 pop	 ebx
  00247	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  0024d	3b ec		 cmp	 ebp, esp
  0024f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00254	8b e5		 mov	 esp, ebp
  00256	5d		 pop	 ebp
  00257	c3		 ret	 0
$LN21@PutSymbols:
  00258	01 00 00 00	 DD	 1
  0025c	00 00 00 00	 DD	 $LN20@PutSymbols
$LN20@PutSymbols:
  00260	d4 ff ff ff	 DD	 -44			; ffffffd4H
  00264	04 00 00 00	 DD	 4
  00268	00 00 00 00	 DD	 $LN19@PutSymbols
$LN19@PutSymbols:
  0026c	72		 DB	 114			; 00000072H
  0026d	65		 DB	 101			; 00000065H
  0026e	73		 DB	 115			; 00000073H
  0026f	75		 DB	 117			; 00000075H
  00270	6c		 DB	 108			; 0000006cH
  00271	74		 DB	 116			; 00000074H
  00272	00		 DB	 0
_PutSymbolsIntoList ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _MakeBackup
_TEXT	SEGMENT
_BackupFile1$ = -1560					; size = 512
_FilePart$ = -1040					; size = 512
_DirPart$ = -520					; size = 512
__$ArrayPad$ = -4					; size = 4
_ListNr$ = 8						; size = 4
_MakeBackup PROC					; COMDAT

; 865  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 1c 09 00
	00		 sub	 esp, 2332		; 0000091cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd e4 f6 ff
	ff		 lea	 edi, DWORD PTR [ebp-2332]
  00012	b9 47 02 00 00	 mov	 ecx, 583		; 00000247H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 866  :   char  DirPart[MAX_LENGTH_STRING],FilePart[MAX_LENGTH_STRING],BackupFile1[MAX_LENGTH_STRING];
; 867  : 
; 868  :   if (BackupMade[ListNr]) return 0;

  00028	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  0002b	83 3c 85 00 00
	00 00 00	 cmp	 DWORD PTR _BackupMade[eax*4], 0
  00033	74 07		 je	 SHORT $LN2@MakeBackup
  00035	33 c0		 xor	 eax, eax
  00037	e9 97 00 00 00	 jmp	 $LN1@MakeBackup
$LN2@MakeBackup:

; 869  :   BackupMade[ListNr]=1;

  0003c	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  0003f	c7 04 85 00 00
	00 00 01 00 00
	00		 mov	 DWORD PTR _BackupMade[eax*4], 1

; 870  :   if ((GetDirFromFileName(DirPart,LibraryFile[ListNr])==0)
; 871  :      &&

  0004a	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  0004d	c1 e0 09	 shl	 eax, 9
  00050	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  00055	50		 push	 eax
  00056	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _DirPart$[ebp]
  0005c	51		 push	 ecx
  0005d	e8 00 00 00 00	 call	 _GetDirFromFileName
  00062	83 c4 08	 add	 esp, 8
  00065	85 c0		 test	 eax, eax
  00067	75 61		 jne	 SHORT $LN3@MakeBackup
  00069	8b 45 08	 mov	 eax, DWORD PTR _ListNr$[ebp]
  0006c	c1 e0 09	 shl	 eax, 9
  0006f	05 00 00 00 00	 add	 eax, OFFSET _LibraryFile
  00074	50		 push	 eax
  00075	8d 8d f0 fb ff
	ff		 lea	 ecx, DWORD PTR _FilePart$[ebp]
  0007b	51		 push	 ecx
  0007c	e8 00 00 00 00	 call	 _GetFilePartFromFileName
  00081	83 c4 08	 add	 esp, 8
  00084	85 c0		 test	 eax, eax
  00086	75 42		 jne	 SHORT $LN3@MakeBackup

; 872  :      (GetFilePartFromFileName(FilePart,LibraryFile[ListNr])==0)) {
; 873  :     sprintf(BackupFile1,"%s\\backup\\%s",DirPart,FilePart);

  00088	8d 85 f0 fb ff
	ff		 lea	 eax, DWORD PTR _FilePart$[ebp]
  0008e	50		 push	 eax
  0008f	8d 8d f8 fd ff
	ff		 lea	 ecx, DWORD PTR _DirPart$[ebp]
  00095	51		 push	 ecx
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CPAHMBAI@?$CFs?2backup?2?$CFs?$AA@
  0009b	8d 95 e8 f9 ff
	ff		 lea	 edx, DWORD PTR _BackupFile1$[ebp]
  000a1	52		 push	 edx
  000a2	e8 00 00 00 00	 call	 _sprintf
  000a7	83 c4 10	 add	 esp, 16			; 00000010H

; 874  :     CopyFileUTF8(LibraryFile[ListNr],BackupFile1,0);

  000aa	6a 00		 push	 0
  000ac	8d 85 e8 f9 ff
	ff		 lea	 eax, DWORD PTR _BackupFile1$[ebp]
  000b2	50		 push	 eax
  000b3	8b 4d 08	 mov	 ecx, DWORD PTR _ListNr$[ebp]
  000b6	c1 e1 09	 shl	 ecx, 9
  000b9	81 c1 00 00 00
	00		 add	 ecx, OFFSET _LibraryFile
  000bf	51		 push	 ecx
  000c0	e8 00 00 00 00	 call	 _CopyFileUTF8
  000c5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c8	eb 07		 jmp	 SHORT $LN4@MakeBackup
$LN3@MakeBackup:

; 875  :   } else return -2;

  000ca	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  000cf	eb 02		 jmp	 SHORT $LN1@MakeBackup
$LN4@MakeBackup:

; 876  :   return 0;

  000d1	33 c0		 xor	 eax, eax
$LN1@MakeBackup:

; 877  : }

  000d3	52		 push	 edx
  000d4	8b cd		 mov	 ecx, ebp
  000d6	50		 push	 eax
  000d7	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@MakeBackup
  000dd	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e2	58		 pop	 eax
  000e3	5a		 pop	 edx
  000e4	5f		 pop	 edi
  000e5	5e		 pop	 esi
  000e6	5b		 pop	 ebx
  000e7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ea	33 cd		 xor	 ecx, ebp
  000ec	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f1	81 c4 1c 09 00
	00		 add	 esp, 2332		; 0000091cH
  000f7	3b ec		 cmp	 ebp, esp
  000f9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fe	8b e5		 mov	 esp, ebp
  00100	5d		 pop	 ebp
  00101	c3		 ret	 0
  00102	66 90		 npad	 2
$LN10@MakeBackup:
  00104	03 00 00 00	 DD	 3
  00108	00 00 00 00	 DD	 $LN9@MakeBackup
$LN9@MakeBackup:
  0010c	f8 fd ff ff	 DD	 -520			; fffffdf8H
  00110	00 02 00 00	 DD	 512			; 00000200H
  00114	00 00 00 00	 DD	 $LN6@MakeBackup
  00118	f0 fb ff ff	 DD	 -1040			; fffffbf0H
  0011c	00 02 00 00	 DD	 512			; 00000200H
  00120	00 00 00 00	 DD	 $LN7@MakeBackup
  00124	e8 f9 ff ff	 DD	 -1560			; fffff9e8H
  00128	00 02 00 00	 DD	 512			; 00000200H
  0012c	00 00 00 00	 DD	 $LN8@MakeBackup
$LN8@MakeBackup:
  00130	42		 DB	 66			; 00000042H
  00131	61		 DB	 97			; 00000061H
  00132	63		 DB	 99			; 00000063H
  00133	6b		 DB	 107			; 0000006bH
  00134	75		 DB	 117			; 00000075H
  00135	70		 DB	 112			; 00000070H
  00136	46		 DB	 70			; 00000046H
  00137	69		 DB	 105			; 00000069H
  00138	6c		 DB	 108			; 0000006cH
  00139	65		 DB	 101			; 00000065H
  0013a	31		 DB	 49			; 00000031H
  0013b	00		 DB	 0
$LN7@MakeBackup:
  0013c	46		 DB	 70			; 00000046H
  0013d	69		 DB	 105			; 00000069H
  0013e	6c		 DB	 108			; 0000006cH
  0013f	65		 DB	 101			; 00000065H
  00140	50		 DB	 80			; 00000050H
  00141	61		 DB	 97			; 00000061H
  00142	72		 DB	 114			; 00000072H
  00143	74		 DB	 116			; 00000074H
  00144	00		 DB	 0
$LN6@MakeBackup:
  00145	44		 DB	 68			; 00000044H
  00146	69		 DB	 105			; 00000069H
  00147	72		 DB	 114			; 00000072H
  00148	50		 DB	 80			; 00000050H
  00149	61		 DB	 97			; 00000061H
  0014a	72		 DB	 114			; 00000072H
  0014b	74		 DB	 116			; 00000074H
  0014c	00		 DB	 0
_MakeBackup ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _SelectList2
_TEXT	SEGMENT
_cnt$ = -8						; size = 4
_SelectList2 PROC					; COMDAT

; 849  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 850  :   int32 cnt;
; 851  : 
; 852  :   for (cnt=0;cnt<Lib[1].NrLibEntries;cnt++) {

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cnt$[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@SelectList
$LN2@SelectList:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _cnt$[ebp], eax
$LN4@SelectList:
  00030	b8 50 00 00 00	 mov	 eax, 80			; 00000050H
  00035	c1 e0 00	 shl	 eax, 0
  00038	8b 4d f8	 mov	 ecx, DWORD PTR _cnt$[ebp]
  0003b	3b 88 48 00 00
	00		 cmp	 ecx, DWORD PTR _Lib[eax+72]
  00041	7d 23		 jge	 SHORT $LN1@SelectList

; 853  :     SendMessage(ListWindow2,LB_SETSEL,1,cnt);

  00043	8b f4		 mov	 esi, esp
  00045	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00048	50		 push	 eax
  00049	6a 01		 push	 1
  0004b	68 85 01 00 00	 push	 389			; 00000185H
  00050	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ListWindow2
  00056	51		 push	 ecx
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0005d	3b f4		 cmp	 esi, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 854  :   }

  00064	eb c1		 jmp	 SHORT $LN2@SelectList
$LN1@SelectList:

; 855  : }

  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006f	3b ec		 cmp	 ebp, esp
  00071	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
_SelectList2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _SelectList1
_TEXT	SEGMENT
_cnt$ = -8						; size = 4
_SelectList1 PROC					; COMDAT

; 833  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 834  :   int32 cnt;
; 835  : 
; 836  :   for (cnt=0;cnt<Lib[0].NrLibEntries;cnt++) {

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cnt$[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@SelectList
$LN2@SelectList:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _cnt$[ebp], eax
$LN4@SelectList:
  00030	b8 50 00 00 00	 mov	 eax, 80			; 00000050H
  00035	6b c8 00	 imul	 ecx, eax, 0
  00038	8b 55 f8	 mov	 edx, DWORD PTR _cnt$[ebp]
  0003b	3b 91 48 00 00
	00		 cmp	 edx, DWORD PTR _Lib[ecx+72]
  00041	7d 23		 jge	 SHORT $LN1@SelectList

; 837  :     SendMessage(ListWindow1,LB_SETSEL,1,cnt);

  00043	8b f4		 mov	 esi, esp
  00045	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00048	50		 push	 eax
  00049	6a 01		 push	 1
  0004b	68 85 01 00 00	 push	 389			; 00000185H
  00050	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ListWindow1
  00056	51		 push	 ecx
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0005d	3b f4		 cmp	 esi, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 838  :   }

  00064	eb c1		 jmp	 SHORT $LN2@SelectList
$LN1@SelectList:

; 839  : }

  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006f	3b ec		 cmp	 ebp, esp
  00071	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
_SelectList1 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _DeselectList2
_TEXT	SEGMENT
_cnt$ = -8						; size = 4
_DeselectList2 PROC					; COMDAT

; 817  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 818  :   int32 cnt;
; 819  : 
; 820  :   for (cnt=0;cnt<Lib[1].NrLibEntries;cnt++) {

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cnt$[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@DeselectLi
$LN2@DeselectLi:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _cnt$[ebp], eax
$LN4@DeselectLi:
  00030	b8 50 00 00 00	 mov	 eax, 80			; 00000050H
  00035	c1 e0 00	 shl	 eax, 0
  00038	8b 4d f8	 mov	 ecx, DWORD PTR _cnt$[ebp]
  0003b	3b 88 48 00 00
	00		 cmp	 ecx, DWORD PTR _Lib[eax+72]
  00041	7d 23		 jge	 SHORT $LN1@DeselectLi

; 821  :     SendMessage(ListWindow2,LB_SETSEL,0,cnt);

  00043	8b f4		 mov	 esi, esp
  00045	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00048	50		 push	 eax
  00049	6a 00		 push	 0
  0004b	68 85 01 00 00	 push	 389			; 00000185H
  00050	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ListWindow2
  00056	51		 push	 ecx
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0005d	3b f4		 cmp	 esi, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 822  :   }

  00064	eb c1		 jmp	 SHORT $LN2@DeselectLi
$LN1@DeselectLi:

; 823  : }

  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006f	3b ec		 cmp	 ebp, esp
  00071	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
_DeselectList2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _DeselectList1
_TEXT	SEGMENT
_cnt$ = -8						; size = 4
_DeselectList1 PROC					; COMDAT

; 801  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 802  :   int32 cnt;
; 803  : 
; 804  :   for (cnt=0;cnt<Lib[0].NrLibEntries;cnt++) {

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cnt$[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@DeselectLi
$LN2@DeselectLi:
  00027	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 f8	 mov	 DWORD PTR _cnt$[ebp], eax
$LN4@DeselectLi:
  00030	b8 50 00 00 00	 mov	 eax, 80			; 00000050H
  00035	6b c8 00	 imul	 ecx, eax, 0
  00038	8b 55 f8	 mov	 edx, DWORD PTR _cnt$[ebp]
  0003b	3b 91 48 00 00
	00		 cmp	 edx, DWORD PTR _Lib[ecx+72]
  00041	7d 23		 jge	 SHORT $LN1@DeselectLi

; 805  :     SendMessage(ListWindow1,LB_SETSEL,0,cnt);

  00043	8b f4		 mov	 esi, esp
  00045	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00048	50		 push	 eax
  00049	6a 00		 push	 0
  0004b	68 85 01 00 00	 push	 389			; 00000185H
  00050	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ListWindow1
  00056	51		 push	 ecx
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  0005d	3b f4		 cmp	 esi, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 806  :   }

  00064	eb c1		 jmp	 SHORT $LN2@DeselectLi
$LN1@DeselectLi:

; 807  : }

  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006f	3b ec		 cmp	 ebp, esp
  00071	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
_DeselectList1 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _WindowPaint
_TEXT	SEGMENT
_Rect$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_WindowPaint PROC					; COMDAT

; 765  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00012	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 766  :   RECT Rect;
; 767  : 
; 768  :   GetClientRect(LIBMANWindow,&Rect);

  00028	8b f4		 mov	 esi, esp
  0002a	8d 45 e8	 lea	 eax, DWORD PTR _Rect$[ebp]
  0002d	50		 push	 eax
  0002e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00034	51		 push	 ecx
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  0003b	3b f4		 cmp	 esi, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 769  :   if ( GetUpdateRect(LIBMANWindow,&UpdateRect,0) ) {

  00042	8b f4		 mov	 esi, esp
  00044	6a 00		 push	 0
  00046	68 00 00 00 00	 push	 OFFSET _UpdateRect
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  00050	50		 push	 eax
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetUpdateRect@12
  00057	3b f4		 cmp	 esi, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005e	85 c0		 test	 eax, eax
  00060	0f 84 58 01 00
	00		 je	 $LN1@WindowPain

; 770  :     Painting=1;

  00066	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _Painting, 1

; 771  :     InitDeviceContext();

  00070	e8 00 00 00 00	 call	 _InitDeviceContext

; 772  :     FillRect(LIBMANDisplay,&UpdateRect,GetStockObject(LTGRAY_BRUSH));

  00075	8b f4		 mov	 esi, esp
  00077	6a 01		 push	 1
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetStockObject@4
  0007f	3b f4		 cmp	 esi, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b f4		 mov	 esi, esp
  00088	50		 push	 eax
  00089	68 00 00 00 00	 push	 OFFSET _UpdateRect
  0008e	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANDisplay
  00093	50		 push	 eax
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FillRect@12
  0009a	3b f4		 cmp	 esi, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 773  :     Rect.right=10000;

  000a1	c7 45 f0 10 27
	00 00		 mov	 DWORD PTR _Rect$[ebp+8], 10000 ; 00002710H

; 774  :     Rect.bottom=1;

  000a8	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _Rect$[ebp+12], 1

; 775  :     FillRect(LIBMANDisplay,&Rect,GetStockObject(BLACK_BRUSH));

  000af	8b f4		 mov	 esi, esp
  000b1	6a 04		 push	 4
  000b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetStockObject@4
  000b9	3b f4		 cmp	 esi, esp
  000bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c0	8b f4		 mov	 esi, esp
  000c2	50		 push	 eax
  000c3	8d 45 e8	 lea	 eax, DWORD PTR _Rect$[ebp]
  000c6	50		 push	 eax
  000c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANDisplay
  000cd	51		 push	 ecx
  000ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FillRect@12
  000d4	3b f4		 cmp	 esi, esp
  000d6	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 776  : 
; 777  :     InitDrawingColorBlack();

  000db	e8 00 00 00 00	 call	 _InitDrawingColorBlack

; 778  :     rect4a(RectListWindow1.left-7,RectListWindow1.top-30,

  000e0	6a 00		 push	 0
  000e2	a1 0c 00 00 00	 mov	 eax, DWORD PTR _RectListWindow1+12
  000e7	83 c0 71	 add	 eax, 113		; 00000071H
  000ea	50		 push	 eax
  000eb	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow1+8
  000f1	83 c1 20	 add	 ecx, 32			; 00000020H
  000f4	51		 push	 ecx
  000f5	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow1+4
  000fb	83 ea 1e	 sub	 edx, 30			; 0000001eH
  000fe	52		 push	 edx
  000ff	a1 00 00 00 00	 mov	 eax, DWORD PTR _RectListWindow1
  00104	83 e8 07	 sub	 eax, 7
  00107	50		 push	 eax
  00108	e8 00 00 00 00	 call	 _rect4a
  0010d	83 c4 14	 add	 esp, 20			; 00000014H

; 779  :           RectListWindow1.right+32,RectListWindow1.bottom+113,0);
; 780  :     rect4a(RectListWindow2.left-7,RectListWindow2.top-30,

  00110	6a 00		 push	 0
  00112	a1 0c 00 00 00	 mov	 eax, DWORD PTR _RectListWindow2+12
  00117	83 c0 71	 add	 eax, 113		; 00000071H
  0011a	50		 push	 eax
  0011b	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow2+8
  00121	83 c1 20	 add	 ecx, 32			; 00000020H
  00124	51		 push	 ecx
  00125	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow2+4
  0012b	83 ea 1e	 sub	 edx, 30			; 0000001eH
  0012e	52		 push	 edx
  0012f	a1 00 00 00 00	 mov	 eax, DWORD PTR _RectListWindow2
  00134	83 e8 07	 sub	 eax, 7
  00137	50		 push	 eax
  00138	e8 00 00 00 00	 call	 _rect4a
  0013d	83 c4 14	 add	 esp, 20			; 00000014H

; 781  :           RectListWindow2.right+32,RectListWindow2.bottom+113,0);
; 782  :     InitDrawingColorWhite();

  00140	e8 00 00 00 00	 call	 _InitDrawingColorWhite

; 783  :     rect4a(RectListWindow1.left+1,RectListWindow1.top-23,

  00145	6a 00		 push	 0
  00147	a1 04 00 00 00	 mov	 eax, DWORD PTR _RectListWindow1+4
  0014c	83 e8 06	 sub	 eax, 6
  0014f	50		 push	 eax
  00150	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow1+8
  00156	83 c1 18	 add	 ecx, 24			; 00000018H
  00159	51		 push	 ecx
  0015a	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow1+4
  00160	83 ea 17	 sub	 edx, 23			; 00000017H
  00163	52		 push	 edx
  00164	a1 00 00 00 00	 mov	 eax, DWORD PTR _RectListWindow1
  00169	83 c0 01	 add	 eax, 1
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 _rect4a
  00172	83 c4 14	 add	 esp, 20			; 00000014H

; 784  :           RectListWindow1.right+24,RectListWindow1.top-6,0);
; 785  :     rect4a(RectListWindow2.left+1,RectListWindow2.top-23,

  00175	6a 00		 push	 0
  00177	a1 04 00 00 00	 mov	 eax, DWORD PTR _RectListWindow2+4
  0017c	83 e8 06	 sub	 eax, 6
  0017f	50		 push	 eax
  00180	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow2+8
  00186	83 c1 18	 add	 ecx, 24			; 00000018H
  00189	51		 push	 ecx
  0018a	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR _RectListWindow2+4
  00190	83 ea 17	 sub	 edx, 23			; 00000017H
  00193	52		 push	 edx
  00194	a1 00 00 00 00	 mov	 eax, DWORD PTR _RectListWindow2
  00199	83 c0 01	 add	 eax, 1
  0019c	50		 push	 eax
  0019d	e8 00 00 00 00	 call	 _rect4a
  001a2	83 c4 14	 add	 esp, 20			; 00000014H

; 786  :           RectListWindow2.right+24,RectListWindow2.top-6,0);
; 787  :     DisplayLibraryText(0);

  001a5	6a 00		 push	 0
  001a7	e8 00 00 00 00	 call	 _DisplayLibraryText
  001ac	83 c4 04	 add	 esp, 4

; 788  :     DoneDeviceContext();

  001af	e8 00 00 00 00	 call	 _DoneDeviceContext

; 789  :     Painting=0;

  001b4	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _Painting, 0
$LN1@WindowPain:

; 790  :   }
; 791  : }

  001be	52		 push	 edx
  001bf	8b cd		 mov	 ecx, ebp
  001c1	50		 push	 eax
  001c2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@WindowPain
  001c8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001cd	58		 pop	 eax
  001ce	5a		 pop	 edx
  001cf	5f		 pop	 edi
  001d0	5e		 pop	 esi
  001d1	5b		 pop	 ebx
  001d2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001d5	33 cd		 xor	 ecx, ebp
  001d7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001dc	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  001e2	3b ec		 cmp	 ebp, esp
  001e4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001e9	8b e5		 mov	 esp, ebp
  001eb	5d		 pop	 ebp
  001ec	c3		 ret	 0
  001ed	0f 1f 00	 npad	 3
$LN6@WindowPain:
  001f0	01 00 00 00	 DD	 1
  001f4	00 00 00 00	 DD	 $LN5@WindowPain
$LN5@WindowPain:
  001f8	e8 ff ff ff	 DD	 -24			; ffffffe8H
  001fc	10 00 00 00	 DD	 16			; 00000010H
  00200	00 00 00 00	 DD	 $LN4@WindowPain
$LN4@WindowPain:
  00204	52		 DB	 82			; 00000052H
  00205	65		 DB	 101			; 00000065H
  00206	63		 DB	 99			; 00000063H
  00207	74		 DB	 116			; 00000074H
  00208	00		 DB	 0
_WindowPaint ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _DisplayLibraryText
_TEXT	SEGMENT
_mode$ = 8						; size = 4
_DisplayLibraryText PROC				; COMDAT

; 726  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 727  : 
; 728  :   if (mode==1) {

  0001e	83 7d 08 01	 cmp	 DWORD PTR _mode$[ebp], 1
  00022	75 05		 jne	 SHORT $LN2@DisplayLib

; 729  :     StartDrawingEditingWindow();

  00024	e8 00 00 00 00	 call	 _StartDrawingEditingWindow
$LN2@DisplayLib:

; 730  :   }
; 731  :   if (SaveFont==(HGDIOBJ)-1) SaveFont=SelectObject(OutputDisplay,NewFont);

  00029	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR _SaveFont, -1
  00030	75 23		 jne	 SHORT $LN3@DisplayLib
  00032	8b f4		 mov	 esi, esp
  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  00039	50		 push	 eax
  0003a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _OutputDisplay
  00040	51		 push	 ecx
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectObject@8
  00047	3b f4		 cmp	 esi, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	a3 00 00 00 00	 mov	 DWORD PTR _SaveFont, eax
  00053	eb 1c		 jmp	 SHORT $LN4@DisplayLib
$LN3@DisplayLib:

; 732  :   else SelectObject(OutputDisplay,NewFont);

  00055	8b f4		 mov	 esi, esp
  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  0005c	50		 push	 eax
  0005d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _OutputDisplay
  00063	51		 push	 ecx
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectObject@8
  0006a	3b f4		 cmp	 esi, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@DisplayLib:

; 733  : 
; 734  :   strcpy(LibraryText1,"                                                                           ");

  00071	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CNNPBJJJ@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
  00076	68 00 00 00 00	 push	 OFFSET _LibraryText1
  0007b	e8 00 00 00 00	 call	 _strcpy
  00080	83 c4 08	 add	 esp, 8

; 735  :   if (LibraryFile[0][0]!=0) {

  00083	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  00088	6b c8 00	 imul	 ecx, eax, 0
  0008b	ba 01 00 00 00	 mov	 edx, 1
  00090	6b c2 00	 imul	 eax, edx, 0
  00093	0f be 8c 01 00
	00 00 00	 movsx	 ecx, BYTE PTR _LibraryFile[ecx+eax]
  0009b	85 c9		 test	 ecx, ecx
  0009d	0f 84 81 00 00
	00		 je	 $LN5@DisplayLib

; 736  :     if (LibraryMode==0) {

  000a3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  000aa	75 3d		 jne	 SHORT $LN6@DisplayLib

; 737  :       sprintf(LibraryText1,SC(6,"%s [%i symbols]"),LibraryFile[0],Lib[0].NrLibEntries);

  000ac	b8 50 00 00 00	 mov	 eax, 80			; 00000050H
  000b1	6b c8 00	 imul	 ecx, eax, 0
  000b4	8b 91 48 00 00
	00		 mov	 edx, DWORD PTR _Lib[ecx+72]
  000ba	52		 push	 edx
  000bb	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  000c0	6b c8 00	 imul	 ecx, eax, 0
  000c3	81 c1 00 00 00
	00		 add	 ecx, OFFSET _LibraryFile
  000c9	51		 push	 ecx
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@EICOPOHD@?$CFs?5?$FL?$CFi?5symbols?$FN?$AA@
  000cf	6a 06		 push	 6
  000d1	e8 00 00 00 00	 call	 _StringConvert
  000d6	83 c4 08	 add	 esp, 8
  000d9	50		 push	 eax
  000da	68 00 00 00 00	 push	 OFFSET _LibraryText1
  000df	e8 00 00 00 00	 call	 _sprintf
  000e4	83 c4 10	 add	 esp, 16			; 00000010H

; 738  :     } else {

  000e7	eb 3b		 jmp	 SHORT $LN5@DisplayLib
$LN6@DisplayLib:

; 739  :       sprintf(LibraryText1,SC(7,"%s [%i geometries]"),LibraryFile[0],Lib[0].NrLibEntries);

  000e9	b8 50 00 00 00	 mov	 eax, 80			; 00000050H
  000ee	6b c8 00	 imul	 ecx, eax, 0
  000f1	8b 91 48 00 00
	00		 mov	 edx, DWORD PTR _Lib[ecx+72]
  000f7	52		 push	 edx
  000f8	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  000fd	6b c8 00	 imul	 ecx, eax, 0
  00100	81 c1 00 00 00
	00		 add	 ecx, OFFSET _LibraryFile
  00106	51		 push	 ecx
  00107	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HPLGHJHN@?$CFs?5?$FL?$CFi?5geometries?$FN?$AA@
  0010c	6a 07		 push	 7
  0010e	e8 00 00 00 00	 call	 _StringConvert
  00113	83 c4 08	 add	 esp, 8
  00116	50		 push	 eax
  00117	68 00 00 00 00	 push	 OFFSET _LibraryText1
  0011c	e8 00 00 00 00	 call	 _sprintf
  00121	83 c4 10	 add	 esp, 16			; 00000010H
$LN5@DisplayLib:

; 740  :     }
; 741  :   }
; 742  :   strcpy(LibraryText2,"                                                                           ");

  00124	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CNNPBJJJ@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
  00129	68 00 00 00 00	 push	 OFFSET _LibraryText2
  0012e	e8 00 00 00 00	 call	 _strcpy
  00133	83 c4 08	 add	 esp, 8

; 743  :   if (LibraryFile[1][0]!=0) {

  00136	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  0013b	c1 e0 00	 shl	 eax, 0
  0013e	b9 01 00 00 00	 mov	 ecx, 1
  00143	6b d1 00	 imul	 edx, ecx, 0
  00146	0f be 84 10 00
	00 00 00	 movsx	 eax, BYTE PTR _LibraryFile[eax+edx]
  0014e	85 c0		 test	 eax, eax
  00150	0f 84 81 00 00
	00		 je	 $LN8@DisplayLib

; 744  :     if (LibraryMode==0) {

  00156	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  0015d	75 3d		 jne	 SHORT $LN9@DisplayLib

; 745  :       sprintf(LibraryText2,SC(6,"%s [%i symbols]"),LibraryFile[1],Lib[1].NrLibEntries);

  0015f	b8 50 00 00 00	 mov	 eax, 80			; 00000050H
  00164	c1 e0 00	 shl	 eax, 0
  00167	8b 88 48 00 00
	00		 mov	 ecx, DWORD PTR _Lib[eax+72]
  0016d	51		 push	 ecx
  0016e	ba 00 02 00 00	 mov	 edx, 512		; 00000200H
  00173	c1 e2 00	 shl	 edx, 0
  00176	81 c2 00 00 00
	00		 add	 edx, OFFSET _LibraryFile
  0017c	52		 push	 edx
  0017d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@EICOPOHD@?$CFs?5?$FL?$CFi?5symbols?$FN?$AA@
  00182	6a 06		 push	 6
  00184	e8 00 00 00 00	 call	 _StringConvert
  00189	83 c4 08	 add	 esp, 8
  0018c	50		 push	 eax
  0018d	68 00 00 00 00	 push	 OFFSET _LibraryText2
  00192	e8 00 00 00 00	 call	 _sprintf
  00197	83 c4 10	 add	 esp, 16			; 00000010H

; 746  :     } else {

  0019a	eb 3b		 jmp	 SHORT $LN8@DisplayLib
$LN9@DisplayLib:

; 747  :       sprintf(LibraryText2,SC(7,"%s [%i geometries]"),LibraryFile[1],Lib[1].NrLibEntries);

  0019c	b8 50 00 00 00	 mov	 eax, 80			; 00000050H
  001a1	c1 e0 00	 shl	 eax, 0
  001a4	8b 88 48 00 00
	00		 mov	 ecx, DWORD PTR _Lib[eax+72]
  001aa	51		 push	 ecx
  001ab	ba 00 02 00 00	 mov	 edx, 512		; 00000200H
  001b0	c1 e2 00	 shl	 edx, 0
  001b3	81 c2 00 00 00
	00		 add	 edx, OFFSET _LibraryFile
  001b9	52		 push	 edx
  001ba	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HPLGHJHN@?$CFs?5?$FL?$CFi?5geometries?$FN?$AA@
  001bf	6a 07		 push	 7
  001c1	e8 00 00 00 00	 call	 _StringConvert
  001c6	83 c4 08	 add	 esp, 8
  001c9	50		 push	 eax
  001ca	68 00 00 00 00	 push	 OFFSET _LibraryText2
  001cf	e8 00 00 00 00	 call	 _sprintf
  001d4	83 c4 10	 add	 esp, 16			; 00000010H
$LN8@DisplayLib:

; 748  :     }
; 749  :   }
; 750  :   TextOutUTF8(OutputDisplay,RectListWindow1.left+3,RectListWindow1.top-22,LibraryText1,strlen(LibraryText1));

  001d7	68 00 00 00 00	 push	 OFFSET _LibraryText1
  001dc	e8 00 00 00 00	 call	 _strlen
  001e1	83 c4 04	 add	 esp, 4
  001e4	50		 push	 eax
  001e5	68 00 00 00 00	 push	 OFFSET _LibraryText1
  001ea	a1 04 00 00 00	 mov	 eax, DWORD PTR _RectListWindow1+4
  001ef	83 e8 16	 sub	 eax, 22			; 00000016H
  001f2	50		 push	 eax
  001f3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow1
  001f9	83 c1 03	 add	 ecx, 3
  001fc	51		 push	 ecx
  001fd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _OutputDisplay
  00203	52		 push	 edx
  00204	e8 00 00 00 00	 call	 _TextOutUTF8
  00209	83 c4 14	 add	 esp, 20			; 00000014H

; 751  :   TextOutUTF8(OutputDisplay,RectListWindow2.left+3,RectListWindow2.top-22,LibraryText2,strlen(LibraryText2));

  0020c	68 00 00 00 00	 push	 OFFSET _LibraryText2
  00211	e8 00 00 00 00	 call	 _strlen
  00216	83 c4 04	 add	 esp, 4
  00219	50		 push	 eax
  0021a	68 00 00 00 00	 push	 OFFSET _LibraryText2
  0021f	a1 04 00 00 00	 mov	 eax, DWORD PTR _RectListWindow2+4
  00224	83 e8 16	 sub	 eax, 22			; 00000016H
  00227	50		 push	 eax
  00228	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _RectListWindow2
  0022e	83 c1 03	 add	 ecx, 3
  00231	51		 push	 ecx
  00232	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _OutputDisplay
  00238	52		 push	 edx
  00239	e8 00 00 00 00	 call	 _TextOutUTF8
  0023e	83 c4 14	 add	 esp, 20			; 00000014H

; 752  :   if (mode==1) {

  00241	83 7d 08 01	 cmp	 DWORD PTR _mode$[ebp], 1
  00245	75 0a		 jne	 SHORT $LN1@DisplayLib

; 753  :     ExitDrawing();

  00247	e8 00 00 00 00	 call	 _ExitDrawing

; 754  :     EndDrawingEditingWindow();

  0024c	e8 00 00 00 00	 call	 _EndDrawingEditingWindow
$LN1@DisplayLib:

; 755  :   }
; 756  : }

  00251	5f		 pop	 edi
  00252	5e		 pop	 esi
  00253	5b		 pop	 ebx
  00254	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0025a	3b ec		 cmp	 ebp, esp
  0025c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00261	8b e5		 mov	 esp, ebp
  00263	5d		 pop	 ebp
  00264	c3		 ret	 0
_DisplayLibraryText ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _rect4a
_TEXT	SEGMENT
_x1$ = 8						; size = 4
_y1$ = 12						; size = 4
_x2$ = 16						; size = 4
_y2$ = 20						; size = 4
_mode$ = 24						; size = 4
_rect4a	PROC						; COMDAT

; 705  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 706  :   if (mode==1) {

  0001e	83 7d 18 01	 cmp	 DWORD PTR _mode$[ebp], 1
  00022	75 05		 jne	 SHORT $LN2@rect4a

; 707  :     StartDrawingEditingWindow();

  00024	e8 00 00 00 00	 call	 _StartDrawingEditingWindow
$LN2@rect4a:

; 708  :   }
; 709  :   DrawLine(x1,y1,x2,y1);

  00029	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 10	 mov	 ecx, DWORD PTR _x2$[ebp]
  00030	51		 push	 ecx
  00031	8b 55 0c	 mov	 edx, DWORD PTR _y1$[ebp]
  00034	52		 push	 edx
  00035	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 _DrawLine
  0003e	83 c4 10	 add	 esp, 16			; 00000010H

; 710  :   DrawLine(x2,y1,x2,y2);

  00041	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  00044	50		 push	 eax
  00045	8b 4d 10	 mov	 ecx, DWORD PTR _x2$[ebp]
  00048	51		 push	 ecx
  00049	8b 55 0c	 mov	 edx, DWORD PTR _y1$[ebp]
  0004c	52		 push	 edx
  0004d	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 _DrawLine
  00056	83 c4 10	 add	 esp, 16			; 00000010H

; 711  :   DrawLine(x2,y2,x1,y2);

  00059	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  0005c	50		 push	 eax
  0005d	8b 4d 08	 mov	 ecx, DWORD PTR _x1$[ebp]
  00060	51		 push	 ecx
  00061	8b 55 14	 mov	 edx, DWORD PTR _y2$[ebp]
  00064	52		 push	 edx
  00065	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 _DrawLine
  0006e	83 c4 10	 add	 esp, 16			; 00000010H

; 712  :   DrawLine(x1,y2,x1,y1);

  00071	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  00074	50		 push	 eax
  00075	8b 4d 08	 mov	 ecx, DWORD PTR _x1$[ebp]
  00078	51		 push	 ecx
  00079	8b 55 14	 mov	 edx, DWORD PTR _y2$[ebp]
  0007c	52		 push	 edx
  0007d	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 _DrawLine
  00086	83 c4 10	 add	 esp, 16			; 00000010H

; 713  :   if (mode==1) {

  00089	83 7d 18 01	 cmp	 DWORD PTR _mode$[ebp], 1
  0008d	75 0a		 jne	 SHORT $LN1@rect4a

; 714  :     ExitDrawing();

  0008f	e8 00 00 00 00	 call	 _ExitDrawing

; 715  :     EndDrawingEditingWindow();

  00094	e8 00 00 00 00	 call	 _EndDrawingEditingWindow
$LN1@rect4a:

; 716  :   }
; 717  : }

  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	5b		 pop	 ebx
  0009c	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  000a2	3b ec		 cmp	 ebp, esp
  000a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c3		 ret	 0
_rect4a	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _DisplayRectangleIn3dLook
_TEXT	SEGMENT
_x1$ = 8						; size = 4
_y1$ = 12						; size = 4
_x2$ = 16						; size = 4
_y2$ = 20						; size = 4
_mode$ = 24						; size = 4
_DisplayRectangleIn3dLook PROC				; COMDAT

; 681  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 682  :   if (mode==1) {

  0001e	83 7d 18 01	 cmp	 DWORD PTR _mode$[ebp], 1
  00022	75 05		 jne	 SHORT $LN2@DisplayRec

; 683  :     StartDrawingEditingWindow();

  00024	e8 00 00 00 00	 call	 _StartDrawingEditingWindow
$LN2@DisplayRec:

; 684  :   }
; 685  :   InitDrawingColorWhite();

  00029	e8 00 00 00 00	 call	 _InitDrawingColorWhite

; 686  :   DrawLine(x1,y1,x2,y1);

  0002e	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  00031	50		 push	 eax
  00032	8b 4d 10	 mov	 ecx, DWORD PTR _x2$[ebp]
  00035	51		 push	 ecx
  00036	8b 55 0c	 mov	 edx, DWORD PTR _y1$[ebp]
  00039	52		 push	 edx
  0003a	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 _DrawLine
  00043	83 c4 10	 add	 esp, 16			; 00000010H

; 687  :   DrawLine(x2,y1,x2,y2);

  00046	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  00049	50		 push	 eax
  0004a	8b 4d 10	 mov	 ecx, DWORD PTR _x2$[ebp]
  0004d	51		 push	 ecx
  0004e	8b 55 0c	 mov	 edx, DWORD PTR _y1$[ebp]
  00051	52		 push	 edx
  00052	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 _DrawLine
  0005b	83 c4 10	 add	 esp, 16			; 00000010H

; 688  :   DrawLine(x2,y2,x1,y2);

  0005e	8b 45 14	 mov	 eax, DWORD PTR _y2$[ebp]
  00061	50		 push	 eax
  00062	8b 4d 08	 mov	 ecx, DWORD PTR _x1$[ebp]
  00065	51		 push	 ecx
  00066	8b 55 14	 mov	 edx, DWORD PTR _y2$[ebp]
  00069	52		 push	 edx
  0006a	8b 45 10	 mov	 eax, DWORD PTR _x2$[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 _DrawLine
  00073	83 c4 10	 add	 esp, 16			; 00000010H

; 689  :   DrawLine(x1,y2,x1,y1);

  00076	8b 45 0c	 mov	 eax, DWORD PTR _y1$[ebp]
  00079	50		 push	 eax
  0007a	8b 4d 08	 mov	 ecx, DWORD PTR _x1$[ebp]
  0007d	51		 push	 ecx
  0007e	8b 55 14	 mov	 edx, DWORD PTR _y2$[ebp]
  00081	52		 push	 edx
  00082	8b 45 08	 mov	 eax, DWORD PTR _x1$[ebp]
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 _DrawLine
  0008b	83 c4 10	 add	 esp, 16			; 00000010H

; 690  :   if (mode==1) {

  0008e	83 7d 18 01	 cmp	 DWORD PTR _mode$[ebp], 1
  00092	75 0a		 jne	 SHORT $LN1@DisplayRec

; 691  :     ExitDrawing();

  00094	e8 00 00 00 00	 call	 _ExitDrawing

; 692  :     EndDrawingEditingWindow();

  00099	e8 00 00 00 00	 call	 _EndDrawingEditingWindow
$LN1@DisplayRec:

; 693  :   }
; 694  : 
; 695  : }

  0009e	5f		 pop	 edi
  0009f	5e		 pop	 esi
  000a0	5b		 pop	 ebx
  000a1	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  000a7	3b ec		 cmp	 ebp, esp
  000a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ae	8b e5		 mov	 esp, ebp
  000b0	5d		 pop	 ebp
  000b1	c3		 ret	 0
_DisplayRectangleIn3dLook ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _InitDrawingColorLightGray
_TEXT	SEGMENT
_InitDrawingColorLightGray PROC				; COMDAT

; 667  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 668  :   if (SavePen==(HGDIOBJ)-1) SavePen=SelectObject(OutputDisplay,LightGrayPen);

  0001e	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR _SavePen, -1
  00025	75 23		 jne	 SHORT $LN2@InitDrawin
  00027	8b f4		 mov	 esi, esp
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR _LightGrayPen
  0002e	50		 push	 eax
  0002f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _OutputDisplay
  00035	51		 push	 ecx
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectObject@8
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	a3 00 00 00 00	 mov	 DWORD PTR _SavePen, eax
  00048	eb 1c		 jmp	 SHORT $LN3@InitDrawin
$LN2@InitDrawin:

; 669  :   else SelectObject(OutputDisplay,LightGrayPen);

  0004a	8b f4		 mov	 esi, esp
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR _LightGrayPen
  00051	50		 push	 eax
  00052	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _OutputDisplay
  00058	51		 push	 ecx
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectObject@8
  0005f	3b f4		 cmp	 esi, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@InitDrawin:

; 670  :   LineColor=RGB_LightGray;

  00066	c7 05 00 00 00
	00 c0 c0 c0 00	 mov	 DWORD PTR _LineColor, 12632256 ; 00c0c0c0H

; 671  : }

  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	5b		 pop	 ebx
  00073	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00079	3b ec		 cmp	 ebp, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
_InitDrawingColorLightGray ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _InitDrawingColorGray
_TEXT	SEGMENT
_InitDrawingColorGray PROC				; COMDAT

; 654  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 655  :   if (SavePen==(HGDIOBJ)-1) SavePen=SelectObject(OutputDisplay,GrayPen);

  0001e	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR _SavePen, -1
  00025	75 23		 jne	 SHORT $LN2@InitDrawin
  00027	8b f4		 mov	 esi, esp
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR _GrayPen
  0002e	50		 push	 eax
  0002f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _OutputDisplay
  00035	51		 push	 ecx
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectObject@8
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	a3 00 00 00 00	 mov	 DWORD PTR _SavePen, eax
  00048	eb 1c		 jmp	 SHORT $LN3@InitDrawin
$LN2@InitDrawin:

; 656  :   else SelectObject(OutputDisplay,GrayPen);

  0004a	8b f4		 mov	 esi, esp
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR _GrayPen
  00051	50		 push	 eax
  00052	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _OutputDisplay
  00058	51		 push	 ecx
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectObject@8
  0005f	3b f4		 cmp	 esi, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@InitDrawin:

; 657  :   LineColor=RGB_Gray;

  00066	c7 05 00 00 00
	00 80 80 80 00	 mov	 DWORD PTR _LineColor, 8421504 ; 00808080H

; 658  : }

  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	5b		 pop	 ebx
  00073	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00079	3b ec		 cmp	 ebp, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
_InitDrawingColorGray ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _InitDrawingColorBlack
_TEXT	SEGMENT
_InitDrawingColorBlack PROC				; COMDAT

; 641  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 642  :   if (SavePen==(HGDIOBJ)-1) SavePen=SelectObject(OutputDisplay,BlackPen);

  0001e	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR _SavePen, -1
  00025	75 23		 jne	 SHORT $LN2@InitDrawin
  00027	8b f4		 mov	 esi, esp
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR _BlackPen
  0002e	50		 push	 eax
  0002f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _OutputDisplay
  00035	51		 push	 ecx
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectObject@8
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	a3 00 00 00 00	 mov	 DWORD PTR _SavePen, eax
  00048	eb 1c		 jmp	 SHORT $LN3@InitDrawin
$LN2@InitDrawin:

; 643  :   else SelectObject(OutputDisplay,BlackPen);

  0004a	8b f4		 mov	 esi, esp
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR _BlackPen
  00051	50		 push	 eax
  00052	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _OutputDisplay
  00058	51		 push	 ecx
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectObject@8
  0005f	3b f4		 cmp	 esi, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@InitDrawin:

; 644  :   LineColor=RGB_Black;

  00066	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _LineColor, 0

; 645  : }

  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	5b		 pop	 ebx
  00073	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00079	3b ec		 cmp	 ebp, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
_InitDrawingColorBlack ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _InitDrawingColorWhite
_TEXT	SEGMENT
_InitDrawingColorWhite PROC				; COMDAT

; 628  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 629  :   if (SavePen==(HGDIOBJ)-1) SavePen=SelectObject(OutputDisplay,WhitePen);

  0001e	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR _SavePen, -1
  00025	75 23		 jne	 SHORT $LN2@InitDrawin
  00027	8b f4		 mov	 esi, esp
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR _WhitePen
  0002e	50		 push	 eax
  0002f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _OutputDisplay
  00035	51		 push	 ecx
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectObject@8
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	a3 00 00 00 00	 mov	 DWORD PTR _SavePen, eax
  00048	eb 1c		 jmp	 SHORT $LN3@InitDrawin
$LN2@InitDrawin:

; 630  :   else SelectObject(OutputDisplay,WhitePen);

  0004a	8b f4		 mov	 esi, esp
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR _WhitePen
  00051	50		 push	 eax
  00052	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _OutputDisplay
  00058	51		 push	 ecx
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectObject@8
  0005f	3b f4		 cmp	 esi, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@InitDrawin:

; 631  :   LineColor=RGB_White;

  00066	c7 05 00 00 00
	00 ff ff ff 00	 mov	 DWORD PTR _LineColor, 16777215 ; 00ffffffH

; 632  : }

  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	5b		 pop	 ebx
  00073	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00079	3b ec		 cmp	 ebp, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
_InitDrawingColorWhite ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _ExitDrawing
_TEXT	SEGMENT
_ExitDrawing PROC					; COMDAT

; 606  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 607  :   if (SaveBrush!=(HGDIOBJ)-1) {

  0001e	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR _SaveBrush, -1
  00025	74 26		 je	 SHORT $LN2@ExitDrawin

; 608  :     SelectObject(OutputDisplay,SaveBrush);

  00027	8b f4		 mov	 esi, esp
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR _SaveBrush
  0002e	50		 push	 eax
  0002f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _OutputDisplay
  00035	51		 push	 ecx
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectObject@8
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 609  :     SaveBrush=(HGDIOBJ)-1;

  00043	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR _SaveBrush, -1
$LN2@ExitDrawin:

; 610  :   }
; 611  :   if (SavePen!=(HGDIOBJ)-1) {

  0004d	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR _SavePen, -1
  00054	74 26		 je	 SHORT $LN3@ExitDrawin

; 612  :     SelectObject(OutputDisplay,SavePen);

  00056	8b f4		 mov	 esi, esp
  00058	a1 00 00 00 00	 mov	 eax, DWORD PTR _SavePen
  0005d	50		 push	 eax
  0005e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _OutputDisplay
  00064	51		 push	 ecx
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectObject@8
  0006b	3b f4		 cmp	 esi, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 613  :     SavePen=(HGDIOBJ)-1;

  00072	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR _SavePen, -1
$LN3@ExitDrawin:

; 614  :   }
; 615  :   if (SaveFont!=(HGDIOBJ)-1) {

  0007c	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR _SaveFont, -1
  00083	74 26		 je	 SHORT $LN1@ExitDrawin

; 616  :     SelectObject(OutputDisplay,SaveFont);

  00085	8b f4		 mov	 esi, esp
  00087	a1 00 00 00 00	 mov	 eax, DWORD PTR _SaveFont
  0008c	50		 push	 eax
  0008d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _OutputDisplay
  00093	51		 push	 ecx
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectObject@8
  0009a	3b f4		 cmp	 esi, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 617  :     SaveFont=(HGDIOBJ)-1;

  000a1	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR _SaveFont, -1
$LN1@ExitDrawin:

; 618  :   }
; 619  : }

  000ab	5f		 pop	 edi
  000ac	5e		 pop	 esi
  000ad	5b		 pop	 ebx
  000ae	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  000b4	3b ec		 cmp	 ebp, esp
  000b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c3		 ret	 0
_ExitDrawing ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _EndDrawingEditingWindow
_TEXT	SEGMENT
_EndDrawingEditingWindow PROC				; COMDAT

; 595  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 596  :   DoneDeviceContext();

  0001e	e8 00 00 00 00	 call	 _DoneDeviceContext

; 597  : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
_EndDrawingEditingWindow ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _DoneDeviceContext
_TEXT	SEGMENT
_DoneDeviceContext PROC					; COMDAT

; 578  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 579  :   if ( DCInUse ) {

  0001e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _DCInUse, 0
  00025	74 5f		 je	 SHORT $LN1@DoneDevice

; 580  :     if ( Painting ) EndPaint(LIBMANWindow, &PS);

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _Painting, 0
  0002e	74 1c		 je	 SHORT $LN3@DoneDevice
  00030	8b f4		 mov	 esi, esp
  00032	68 00 00 00 00	 push	 OFFSET _PS
  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndPaint@8
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	eb 1c		 jmp	 SHORT $LN4@DoneDevice
$LN3@DoneDevice:

; 581  :     else ReleaseDC(LIBMANWindow, LIBMANDisplay);

  0004c	8b f4		 mov	 esi, esp
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANDisplay
  00053	50		 push	 eax
  00054	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  0005a	51		 push	 ecx
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReleaseDC@8
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@DoneDevice:

; 582  :     DCInUse=0;

  00068	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _DCInUse, 0

; 583  :     LIBMANDisplay=NULL;

  00072	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _LIBMANDisplay, 0

; 584  :     OutputDisplay=NULL;

  0007c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _OutputDisplay, 0
$LN1@DoneDevice:

; 585  :   }
; 586  : }

  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	5b		 pop	 ebx
  00089	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0008f	3b ec		 cmp	 ebp, esp
  00091	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
_DoneDeviceContext ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _StartDrawingEditingWindow
_TEXT	SEGMENT
_StartDrawingEditingWindow PROC				; COMDAT

; 566  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 567  :   InitDeviceContext();

  0001e	e8 00 00 00 00	 call	 _InitDeviceContext

; 568  :   SetROP2(OutputDisplay,R2_COPYPEN);

  00023	8b f4		 mov	 esi, esp
  00025	6a 0d		 push	 13			; 0000000dH
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR _OutputDisplay
  0002c	50		 push	 eax
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetROP2@8
  00033	3b f4		 cmp	 esi, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 569  : }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
_StartDrawingEditingWindow ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _InitDeviceContext
_TEXT	SEGMENT
_InitDeviceContext PROC					; COMDAT

; 542  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 543  :   if (!DCInUse) {

  0001e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _DCInUse, 0
  00025	0f 85 c5 00 00
	00		 jne	 $LN1@InitDevice

; 544  :     DCInUse=1;

  0002b	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _DCInUse, 1

; 545  :     if ( Painting ) {

  00035	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _Painting, 0
  0003c	74 2d		 je	 SHORT $LN3@InitDevice

; 546  :       OutputDisplay = LIBMANDisplay = BeginPaint(LIBMANWindow, &PS);

  0003e	8b f4		 mov	 esi, esp
  00040	68 00 00 00 00	 push	 OFFSET _PS
  00045	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  0004a	50		 push	 eax
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__BeginPaint@8
  00051	3b f4		 cmp	 esi, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	a3 00 00 00 00	 mov	 DWORD PTR _LIBMANDisplay, eax
  0005d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANDisplay
  00063	89 0d 00 00 00
	00		 mov	 DWORD PTR _OutputDisplay, ecx

; 547  :     } else {

  00069	eb 26		 jmp	 SHORT $LN4@InitDevice
$LN3@InitDevice:

; 548  :       OutputDisplay = LIBMANDisplay = GetDC(LIBMANWindow);

  0006b	8b f4		 mov	 esi, esp
  0006d	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  00072	50		 push	 eax
  00073	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetDC@4
  00079	3b f4		 cmp	 esi, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	a3 00 00 00 00	 mov	 DWORD PTR _LIBMANDisplay, eax
  00085	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANDisplay
  0008b	89 0d 00 00 00
	00		 mov	 DWORD PTR _OutputDisplay, ecx
$LN4@InitDevice:

; 549  :     }
; 550  :     SetBkMode(LIBMANDisplay,OPAQUE);

  00091	8b f4		 mov	 esi, esp
  00093	6a 02		 push	 2
  00095	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANDisplay
  0009a	50		 push	 eax
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetBkMode@8
  000a1	3b f4		 cmp	 esi, esp
  000a3	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 551  : //    SetBkMode(LIBMANDisplay,TRANSPARENT);
; 552  :     SetTextColor(LIBMANDisplay,RGB_Black);

  000a8	8b f4		 mov	 esi, esp
  000aa	6a 00		 push	 0
  000ac	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANDisplay
  000b1	50		 push	 eax
  000b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8
  000b8	3b f4		 cmp	 esi, esp
  000ba	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 553  :     SetBkColor(LIBMANDisplay,RGB_LightGray);

  000bf	8b f4		 mov	 esi, esp
  000c1	68 c0 c0 c0 00	 push	 12632256		; 00c0c0c0H
  000c6	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANDisplay
  000cb	50		 push	 eax
  000cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetBkColor@8
  000d2	3b f4		 cmp	 esi, esp
  000d4	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 554  :     SetROP2(OutputDisplay,R2_COPYPEN);

  000d9	8b f4		 mov	 esi, esp
  000db	6a 0d		 push	 13			; 0000000dH
  000dd	a1 00 00 00 00	 mov	 eax, DWORD PTR _OutputDisplay
  000e2	50		 push	 eax
  000e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetROP2@8
  000e9	3b f4		 cmp	 esi, esp
  000eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@InitDevice:

; 555  : //    SaveFont = SelectObject(WindowsDisplay, UserFont);
; 556  :   }
; 557  : }

  000f0	5f		 pop	 edi
  000f1	5e		 pop	 esi
  000f2	5b		 pop	 ebx
  000f3	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  000f9	3b ec		 cmp	 ebp, esp
  000fb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00100	8b e5		 mov	 esp, ebp
  00102	5d		 pop	 ebp
  00103	c3		 ret	 0
_InitDeviceContext ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _GetNewDirectory
_TEXT	SEGMENT
_res$ = -8						; size = 4
_NewDir$ = 8						; size = 4
_mode$ = 12						; size = 4
_GetNewDirectory PROC					; COMDAT

; 526  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 527  :   int32 res;
; 528  :   res=DialogBox(LIBMANClass.hInstance,MAKEINTRESOURCE(IDD_DIALOG_GET_DIR), LIBMANWindow, (DLGPROC)GetDirDialog2);

  0001e	8b f4		 mov	 esi, esp
  00020	6a 00		 push	 0
  00022	68 00 00 00 00	 push	 OFFSET _GetDirDialog2@16
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  0002c	50		 push	 eax
  0002d	68 d2 07 00 00	 push	 2002			; 000007d2H
  00032	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANClass+16
  00038	51		 push	 ecx
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DialogBoxParamA@20
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	89 45 f8	 mov	 DWORD PTR _res$[ebp], eax

; 529  : 
; 530  :   if (res==2) return -1;

  00049	83 7d f8 02	 cmp	 DWORD PTR _res$[ebp], 2
  0004d	75 05		 jne	 SHORT $LN2@GetNewDire
  0004f	83 c8 ff	 or	 eax, -1
  00052	eb 02		 jmp	 SHORT $LN1@GetNewDire
$LN2@GetNewDire:

; 531  :   return 0;

  00054	33 c0		 xor	 eax, eax
$LN1@GetNewDire:

; 532  : }

  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
_GetNewDirectory ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _GetDirDialog2@16
_TEXT	SEGMENT
tv170 = -3164						; size = 4
tv64 = -3164						; size = 4
_FileSearchHandle$ = -2196				; size = 4
_FileInfo$ = -2184					; size = 592
_str3$ = -1584						; size = 512
_Dir$ = -1064						; size = 512
_str2$ = -544						; size = 512
_res$ = -24						; size = 4
_about$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_Dialog$ = 8						; size = 4
_Message$ = 12						; size = 4
_WParam$ = 16						; size = 4
_LParam$ = 20						; size = 4
_GetDirDialog2@16 PROC					; COMDAT

; 457  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 5c 0c 00
	00		 sub	 esp, 3164		; 00000c5cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd a4 f3 ff
	ff		 lea	 edi, DWORD PTR [ebp-3164]
  00012	b9 17 03 00 00	 mov	 ecx, 791		; 00000317H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 458  :   int32   about,res;
; 459  :   char    str2[MAX_LENGTH_STRING],Dir[MAX_LENGTH_STRING],str3[MAX_LENGTH_STRING];
; 460  :   WIN32_FIND_DATAW FileInfo;
; 461  :   HANDLE FileSearchHandle;
; 462  : 
; 463  :   about = 1;

  00028	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _about$[ebp], 1

; 464  :   switch ( Message ) {

  0002f	8b 45 0c	 mov	 eax, DWORD PTR _Message$[ebp]
  00032	89 85 a4 f3 ff
	ff		 mov	 DWORD PTR tv64[ebp], eax
  00038	81 bd a4 f3 ff
	ff 10 01 00 00	 cmp	 DWORD PTR tv64[ebp], 272 ; 00000110H
  00042	74 15		 je	 SHORT $LN8@GetDirDial
  00044	81 bd a4 f3 ff
	ff 11 01 00 00	 cmp	 DWORD PTR tv64[ebp], 273 ; 00000111H
  0004e	0f 84 5b 02 00
	00		 je	 $LN17@GetDirDial
  00054	e9 0a 03 00 00	 jmp	 $LN2@GetDirDial
$LN8@GetDirDial:

; 465  :     case WM_INITDIALOG:
; 466  :       SetDialogItemText(Dialog,IDOK                       ,SC(3,"OK"));

  00059	68 00 00 00 00	 push	 OFFSET ??_C@_02GIPFHKNO@OK?$AA@
  0005e	6a 03		 push	 3
  00060	e8 00 00 00 00	 call	 _StringConvert
  00065	83 c4 08	 add	 esp, 8
  00068	50		 push	 eax
  00069	6a 01		 push	 1
  0006b	8b 45 08	 mov	 eax, DWORD PTR _Dialog$[ebp]
  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 _SetDialogItemText
  00074	83 c4 0c	 add	 esp, 12			; 0000000cH

; 467  :       SetDialogItemText(Dialog,IDCANCEL                   ,SC(4,"Cancel"));

  00077	68 00 00 00 00	 push	 OFFSET ??_C@_06FMBNCPDL@Cancel?$AA@
  0007c	6a 04		 push	 4
  0007e	e8 00 00 00 00	 call	 _StringConvert
  00083	83 c4 08	 add	 esp, 8
  00086	50		 push	 eax
  00087	6a 02		 push	 2
  00089	8b 45 08	 mov	 eax, DWORD PTR _Dialog$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 _SetDialogItemText
  00092	83 c4 0c	 add	 esp, 12			; 0000000cH

; 468  :       SetDialogItemText(Dialog,IDC_STATIC1                ,SC(5,"Select directory"));

  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@CGBBLDCE@Select?5directory?$AA@
  0009a	6a 05		 push	 5
  0009c	e8 00 00 00 00	 call	 _StringConvert
  000a1	83 c4 08	 add	 esp, 8
  000a4	50		 push	 eax
  000a5	68 a0 0f 00 00	 push	 4000			; 00000fa0H
  000aa	8b 45 08	 mov	 eax, DWORD PTR _Dialog$[ebp]
  000ad	50		 push	 eax
  000ae	e8 00 00 00 00	 call	 _SetDialogItemText
  000b3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 469  :       SendDlgItemMessage(Dialog,IDC_COMBO1,CB_ADDSTRING,0,(LPARAM)(LPSTR)DefaultSymbolPath);

  000b6	8b f4		 mov	 esi, esp
  000b8	68 00 00 00 00	 push	 OFFSET _DefaultSymbolPath
  000bd	6a 00		 push	 0
  000bf	68 43 01 00 00	 push	 323			; 00000143H
  000c4	68 fc 03 00 00	 push	 1020			; 000003fcH
  000c9	8b 45 08	 mov	 eax, DWORD PTR _Dialog$[ebp]
  000cc	50		 push	 eax
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageA@20
  000d3	3b f4		 cmp	 esi, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 470  :       sprintf(str2,"%s\\*.*",ProjectPath);

  000da	68 00 00 00 00	 push	 OFFSET _ProjectPath
  000df	68 00 00 00 00	 push	 OFFSET ??_C@_06BNHEIDIH@?$CFs?2?$CK?4?$CK?$AA@
  000e4	8d 85 e0 fd ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  000ea	50		 push	 eax
  000eb	e8 00 00 00 00	 call	 _sprintf
  000f0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 471  :       FileSearchHandle=FindFirstFileUTF8(str2,&FileInfo);

  000f3	8d 85 78 f7 ff
	ff		 lea	 eax, DWORD PTR _FileInfo$[ebp]
  000f9	50		 push	 eax
  000fa	8d 8d e0 fd ff
	ff		 lea	 ecx, DWORD PTR _str2$[ebp]
  00100	51		 push	 ecx
  00101	e8 00 00 00 00	 call	 _FindFirstFileUTF8
  00106	83 c4 08	 add	 esp, 8
  00109	89 85 6c f7 ff
	ff		 mov	 DWORD PTR _FileSearchHandle$[ebp], eax

; 472  :       res=1;

  0010f	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR _res$[ebp], 1

; 473  :       if (FileSearchHandle==INVALID_HANDLE_VALUE) res=0;

  00116	83 bd 6c f7 ff
	ff ff		 cmp	 DWORD PTR _FileSearchHandle$[ebp], -1
  0011d	75 07		 jne	 SHORT $LN4@GetDirDial
  0011f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _res$[ebp], 0
$LN4@GetDirDial:

; 474  :       while (res) {

  00126	83 7d e8 00	 cmp	 DWORD PTR _res$[ebp], 0
  0012a	0f 84 36 01 00
	00		 je	 $LN5@GetDirDial

; 475  :         if (((FileInfo.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY))
; 476  :            &&
; 477  :            (wcscmp(FileInfo.cFileName,L".")!=0)
; 478  :            &&

  00130	8b 85 78 f7 ff
	ff		 mov	 eax, DWORD PTR _FileInfo$[ebp]
  00136	83 e0 10	 and	 eax, 16			; 00000010H
  00139	0f 84 02 01 00
	00		 je	 $LN10@GetDirDial
  0013f	68 00 00 00 00	 push	 OFFSET ??_C@_13JOFGPIOO@?$AA?4?$AA?$AA@
  00144	8d 85 a4 f7 ff
	ff		 lea	 eax, DWORD PTR _FileInfo$[ebp+44]
  0014a	50		 push	 eax
  0014b	e8 00 00 00 00	 call	 _wcscmp
  00150	83 c4 08	 add	 esp, 8
  00153	85 c0		 test	 eax, eax
  00155	0f 84 e6 00 00
	00		 je	 $LN10@GetDirDial
  0015b	68 00 00 00 00	 push	 OFFSET ??_C@_15DDHGOCBH@?$AA?4?$AA?4?$AA?$AA@
  00160	8d 85 a4 f7 ff
	ff		 lea	 eax, DWORD PTR _FileInfo$[ebp+44]
  00166	50		 push	 eax
  00167	e8 00 00 00 00	 call	 _wcscmp
  0016c	83 c4 08	 add	 esp, 8
  0016f	85 c0		 test	 eax, eax
  00171	0f 84 ca 00 00
	00		 je	 $LN10@GetDirDial

; 479  :            (wcscmp(FileInfo.cFileName,L"..")!=0)) {
; 480  :           UnicodeToUtf8(FileInfo.cFileName,str3,MAX_LENGTH_STRING-100);

  00177	68 9c 01 00 00	 push	 412			; 0000019cH
  0017c	8d 85 d0 f9 ff
	ff		 lea	 eax, DWORD PTR _str3$[ebp]
  00182	50		 push	 eax
  00183	8d 8d a4 f7 ff
	ff		 lea	 ecx, DWORD PTR _FileInfo$[ebp+44]
  00189	51		 push	 ecx
  0018a	e8 00 00 00 00	 call	 _UnicodeToUtf8
  0018f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 481  :           if (LibraryMode==0) {

  00192	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  00199	75 54		 jne	 SHORT $LN11@GetDirDial

; 482  :             sprintf(Dir,"%s\\%s\\sym",ProjectPath,str3);

  0019b	8d 85 d0 f9 ff
	ff		 lea	 eax, DWORD PTR _str3$[ebp]
  001a1	50		 push	 eax
  001a2	68 00 00 00 00	 push	 OFFSET _ProjectPath
  001a7	68 00 00 00 00	 push	 OFFSET ??_C@_09GBIPEEFN@?$CFs?2?$CFs?2sym?$AA@
  001ac	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR _Dir$[ebp]
  001b2	51		 push	 ecx
  001b3	e8 00 00 00 00	 call	 _sprintf
  001b8	83 c4 10	 add	 esp, 16			; 00000010H

; 483  :             if (DirectoryExistsUTF8(Dir)==0) {

  001bb	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR _Dir$[ebp]
  001c1	50		 push	 eax
  001c2	e8 00 00 00 00	 call	 _DirectoryExistsUTF8
  001c7	83 c4 04	 add	 esp, 4
  001ca	85 c0		 test	 eax, eax
  001cc	75 1f		 jne	 SHORT $LN13@GetDirDial

; 484  :               SendDlgItemMessageUTF8(Dialog,IDC_COMBO1,CB_ADDSTRING,0,(LPARAM)(LPSTR)Dir);

  001ce	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR _Dir$[ebp]
  001d4	50		 push	 eax
  001d5	6a 00		 push	 0
  001d7	68 43 01 00 00	 push	 323			; 00000143H
  001dc	68 fc 03 00 00	 push	 1020			; 000003fcH
  001e1	8b 4d 08	 mov	 ecx, DWORD PTR _Dialog$[ebp]
  001e4	51		 push	 ecx
  001e5	e8 00 00 00 00	 call	 _SendDlgItemMessageUTF8
  001ea	83 c4 14	 add	 esp, 20			; 00000014H
$LN13@GetDirDial:

; 485  :             }
; 486  :           } else {

  001ed	eb 52		 jmp	 SHORT $LN10@GetDirDial
$LN11@GetDirDial:

; 487  :             sprintf(Dir,"%s\\%s\\pcb\\shapes",ProjectPath,str3);

  001ef	8d 85 d0 f9 ff
	ff		 lea	 eax, DWORD PTR _str3$[ebp]
  001f5	50		 push	 eax
  001f6	68 00 00 00 00	 push	 OFFSET _ProjectPath
  001fb	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KOPNLDEO@?$CFs?2?$CFs?2pcb?2shapes?$AA@
  00200	8d 8d d8 fb ff
	ff		 lea	 ecx, DWORD PTR _Dir$[ebp]
  00206	51		 push	 ecx
  00207	e8 00 00 00 00	 call	 _sprintf
  0020c	83 c4 10	 add	 esp, 16			; 00000010H

; 488  :             if (DirectoryExistsUTF8(Dir)==0) {

  0020f	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR _Dir$[ebp]
  00215	50		 push	 eax
  00216	e8 00 00 00 00	 call	 _DirectoryExistsUTF8
  0021b	83 c4 04	 add	 esp, 4
  0021e	85 c0		 test	 eax, eax
  00220	75 1f		 jne	 SHORT $LN10@GetDirDial

; 489  :               SendDlgItemMessageUTF8(Dialog,IDC_COMBO1,CB_ADDSTRING,0,(LPARAM)(LPSTR)Dir);

  00222	8d 85 d8 fb ff
	ff		 lea	 eax, DWORD PTR _Dir$[ebp]
  00228	50		 push	 eax
  00229	6a 00		 push	 0
  0022b	68 43 01 00 00	 push	 323			; 00000143H
  00230	68 fc 03 00 00	 push	 1020			; 000003fcH
  00235	8b 4d 08	 mov	 ecx, DWORD PTR _Dialog$[ebp]
  00238	51		 push	 ecx
  00239	e8 00 00 00 00	 call	 _SendDlgItemMessageUTF8
  0023e	83 c4 14	 add	 esp, 20			; 00000014H
$LN10@GetDirDial:

; 490  :             }
; 491  :           }
; 492  :         }
; 493  :         res=FindNextFileW(FileSearchHandle,&FileInfo);

  00241	8b f4		 mov	 esi, esp
  00243	8d 85 78 f7 ff
	ff		 lea	 eax, DWORD PTR _FileInfo$[ebp]
  00249	50		 push	 eax
  0024a	8b 8d 6c f7 ff
	ff		 mov	 ecx, DWORD PTR _FileSearchHandle$[ebp]
  00250	51		 push	 ecx
  00251	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FindNextFileW@8
  00257	3b f4		 cmp	 esi, esp
  00259	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0025e	89 45 e8	 mov	 DWORD PTR _res$[ebp], eax

; 494  :       }

  00261	e9 c0 fe ff ff	 jmp	 $LN4@GetDirDial
$LN5@GetDirDial:

; 495  :       if (FileSearchHandle!=INVALID_HANDLE_VALUE) {

  00266	83 bd 6c f7 ff
	ff ff		 cmp	 DWORD PTR _FileSearchHandle$[ebp], -1
  0026d	74 16		 je	 SHORT $LN15@GetDirDial

; 496  :         FindClose(FileSearchHandle);

  0026f	8b f4		 mov	 esi, esp
  00271	8b 85 6c f7 ff
	ff		 mov	 eax, DWORD PTR _FileSearchHandle$[ebp]
  00277	50		 push	 eax
  00278	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FindClose@4
  0027e	3b f4		 cmp	 esi, esp
  00280	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN15@GetDirDial:

; 497  :       }
; 498  :       SendDlgItemMessageUTF8(Dialog,IDC_COMBO1,CB_SELECTSTRING,0,(LPARAM)(LPSTR)DefaultSymbolPath);

  00285	68 00 00 00 00	 push	 OFFSET _DefaultSymbolPath
  0028a	6a 00		 push	 0
  0028c	68 4d 01 00 00	 push	 333			; 0000014dH
  00291	68 fc 03 00 00	 push	 1020			; 000003fcH
  00296	8b 45 08	 mov	 eax, DWORD PTR _Dialog$[ebp]
  00299	50		 push	 eax
  0029a	e8 00 00 00 00	 call	 _SendDlgItemMessageUTF8
  0029f	83 c4 14	 add	 esp, 20			; 00000014H

; 499  :       return about;

  002a2	8b 45 f4	 mov	 eax, DWORD PTR _about$[ebp]
  002a5	e9 c3 00 00 00	 jmp	 $LN1@GetDirDial

; 500  :     case WM_MOVE:
; 501  :       break;

  002aa	e9 b4 00 00 00	 jmp	 $LN2@GetDirDial
$LN17@GetDirDial:

; 502  :     case WM_COMMAND:
; 503  :       switch (WParam) {

  002af	8b 45 10	 mov	 eax, DWORD PTR _WParam$[ebp]
  002b2	89 85 a4 f3 ff
	ff		 mov	 DWORD PTR tv170[ebp], eax
  002b8	83 bd a4 f3 ff
	ff 01		 cmp	 DWORD PTR tv170[ebp], 1
  002bf	74 0e		 je	 SHORT $LN18@GetDirDial
  002c1	83 bd a4 f3 ff
	ff 02		 cmp	 DWORD PTR tv170[ebp], 2
  002c8	74 7f		 je	 SHORT $LN21@GetDirDial
  002ca	e9 94 00 00 00	 jmp	 $LN2@GetDirDial
$LN18@GetDirDial:

; 504  :         case IDOK:
; 505  :           res=SendDlgItemMessage(Dialog,IDC_COMBO1,CB_GETCURSEL,0,0);

  002cf	8b f4		 mov	 esi, esp
  002d1	6a 00		 push	 0
  002d3	6a 00		 push	 0
  002d5	68 47 01 00 00	 push	 327			; 00000147H
  002da	68 fc 03 00 00	 push	 1020			; 000003fcH
  002df	8b 45 08	 mov	 eax, DWORD PTR _Dialog$[ebp]
  002e2	50		 push	 eax
  002e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageA@20
  002e9	3b f4		 cmp	 esi, esp
  002eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002f0	89 45 e8	 mov	 DWORD PTR _res$[ebp], eax

; 506  :           if (res!=CB_ERR) {

  002f3	83 7d e8 ff	 cmp	 DWORD PTR _res$[ebp], -1
  002f7	74 36		 je	 SHORT $LN19@GetDirDial

; 507  :             SendDlgItemMessageUTF8(Dialog,IDC_COMBO1,CB_GETLBTEXT,res,(LPARAM)ExportDir);

  002f9	68 00 00 00 00	 push	 OFFSET _ExportDir
  002fe	8b 45 e8	 mov	 eax, DWORD PTR _res$[ebp]
  00301	50		 push	 eax
  00302	68 48 01 00 00	 push	 328			; 00000148H
  00307	68 fc 03 00 00	 push	 1020			; 000003fcH
  0030c	8b 4d 08	 mov	 ecx, DWORD PTR _Dialog$[ebp]
  0030f	51		 push	 ecx
  00310	e8 00 00 00 00	 call	 _SendDlgItemMessageUTF8
  00315	83 c4 14	 add	 esp, 20			; 00000014H

; 508  :             EndDialog(Dialog, 1);

  00318	8b f4		 mov	 esi, esp
  0031a	6a 01		 push	 1
  0031c	8b 45 08	 mov	 eax, DWORD PTR _Dialog$[ebp]
  0031f	50		 push	 eax
  00320	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8
  00326	3b f4		 cmp	 esi, esp
  00328	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 509  :           } else {

  0032d	eb 15		 jmp	 SHORT $LN20@GetDirDial
$LN19@GetDirDial:

; 510  :             EndDialog(Dialog, 2);

  0032f	8b f4		 mov	 esi, esp
  00331	6a 02		 push	 2
  00333	8b 45 08	 mov	 eax, DWORD PTR _Dialog$[ebp]
  00336	50		 push	 eax
  00337	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8
  0033d	3b f4		 cmp	 esi, esp
  0033f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN20@GetDirDial:

; 511  :           }
; 512  :           return about;

  00344	8b 45 f4	 mov	 eax, DWORD PTR _about$[ebp]
  00347	eb 24		 jmp	 SHORT $LN1@GetDirDial
$LN21@GetDirDial:

; 513  :         case IDCANCEL:
; 514  :           EndDialog(Dialog, 2);

  00349	8b f4		 mov	 esi, esp
  0034b	6a 02		 push	 2
  0034d	8b 45 08	 mov	 eax, DWORD PTR _Dialog$[ebp]
  00350	50		 push	 eax
  00351	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8
  00357	3b f4		 cmp	 esi, esp
  00359	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 515  :           return about;

  0035e	8b 45 f4	 mov	 eax, DWORD PTR _about$[ebp]
  00361	eb 0a		 jmp	 SHORT $LN1@GetDirDial
$LN2@GetDirDial:

; 516  :       }
; 517  :       break;
; 518  :   }
; 519  :   about = 0;

  00363	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _about$[ebp], 0

; 520  :   return about;

  0036a	8b 45 f4	 mov	 eax, DWORD PTR _about$[ebp]
$LN1@GetDirDial:

; 521  : }

  0036d	52		 push	 edx
  0036e	8b cd		 mov	 ecx, ebp
  00370	50		 push	 eax
  00371	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN28@GetDirDial
  00377	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0037c	58		 pop	 eax
  0037d	5a		 pop	 edx
  0037e	5f		 pop	 edi
  0037f	5e		 pop	 esi
  00380	5b		 pop	 ebx
  00381	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00384	33 cd		 xor	 ecx, ebp
  00386	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0038b	81 c4 5c 0c 00
	00		 add	 esp, 3164		; 00000c5cH
  00391	3b ec		 cmp	 ebp, esp
  00393	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00398	8b e5		 mov	 esp, ebp
  0039a	5d		 pop	 ebp
  0039b	c2 10 00	 ret	 16			; 00000010H
  0039e	66 90		 npad	 2
$LN28@GetDirDial:
  003a0	04 00 00 00	 DD	 4
  003a4	00 00 00 00	 DD	 $LN27@GetDirDial
$LN27@GetDirDial:
  003a8	e0 fd ff ff	 DD	 -544			; fffffde0H
  003ac	00 02 00 00	 DD	 512			; 00000200H
  003b0	00 00 00 00	 DD	 $LN23@GetDirDial
  003b4	d8 fb ff ff	 DD	 -1064			; fffffbd8H
  003b8	00 02 00 00	 DD	 512			; 00000200H
  003bc	00 00 00 00	 DD	 $LN24@GetDirDial
  003c0	d0 f9 ff ff	 DD	 -1584			; fffff9d0H
  003c4	00 02 00 00	 DD	 512			; 00000200H
  003c8	00 00 00 00	 DD	 $LN25@GetDirDial
  003cc	78 f7 ff ff	 DD	 -2184			; fffff778H
  003d0	50 02 00 00	 DD	 592			; 00000250H
  003d4	00 00 00 00	 DD	 $LN26@GetDirDial
$LN26@GetDirDial:
  003d8	46		 DB	 70			; 00000046H
  003d9	69		 DB	 105			; 00000069H
  003da	6c		 DB	 108			; 0000006cH
  003db	65		 DB	 101			; 00000065H
  003dc	49		 DB	 73			; 00000049H
  003dd	6e		 DB	 110			; 0000006eH
  003de	66		 DB	 102			; 00000066H
  003df	6f		 DB	 111			; 0000006fH
  003e0	00		 DB	 0
$LN25@GetDirDial:
  003e1	73		 DB	 115			; 00000073H
  003e2	74		 DB	 116			; 00000074H
  003e3	72		 DB	 114			; 00000072H
  003e4	33		 DB	 51			; 00000033H
  003e5	00		 DB	 0
$LN24@GetDirDial:
  003e6	44		 DB	 68			; 00000044H
  003e7	69		 DB	 105			; 00000069H
  003e8	72		 DB	 114			; 00000072H
  003e9	00		 DB	 0
$LN23@GetDirDial:
  003ea	73		 DB	 115			; 00000073H
  003eb	74		 DB	 116			; 00000074H
  003ec	72		 DB	 114			; 00000072H
  003ed	32		 DB	 50			; 00000032H
  003ee	00		 DB	 0
_GetDirDialog2@16 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _CopyFileNameToTempMem
_TEXT	SEGMENT
_Length$ = -8						; size = 4
_FileName$ = 8						; size = 4
_CopyFileNameToTempMem PROC				; COMDAT

; 438  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 439  :   int32 Length;
; 440  : 
; 441  :   Length=strlen(FileName);

  0001e	8b 45 08	 mov	 eax, DWORD PTR _FileName$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 _strlen
  00027	83 c4 04	 add	 esp, 4
  0002a	89 45 f8	 mov	 DWORD PTR _Length$[ebp], eax

; 442  :   if (Length+TempMemoryPos+10>MaxTempMemory) {

  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR _TempMemoryPos
  00032	8b 4d f8	 mov	 ecx, DWORD PTR _Length$[ebp]
  00035	8d 54 01 0a	 lea	 edx, DWORD PTR [ecx+eax+10]
  00039	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR _MaxTempMemory
  0003f	7e 13		 jle	 SHORT $LN2@CopyFileNa

; 443  :     AllocateMemTemp(TempMemoryPos+16384);

  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR _TempMemoryPos
  00046	05 00 40 00 00	 add	 eax, 16384		; 00004000H
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 _AllocateMemTemp
  00051	83 c4 04	 add	 esp, 4
$LN2@CopyFileNa:

; 444  :   }
; 445  :   memmove(&TempMem[TempMemoryPos],FileName,Length+1);

  00054	8b 45 f8	 mov	 eax, DWORD PTR _Length$[ebp]
  00057	83 c0 01	 add	 eax, 1
  0005a	50		 push	 eax
  0005b	8b 4d 08	 mov	 ecx, DWORD PTR _FileName$[ebp]
  0005e	51		 push	 ecx
  0005f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _TempMem
  00065	03 15 00 00 00
	00		 add	 edx, DWORD PTR _TempMemoryPos
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 _memmove
  00071	83 c4 0c	 add	 esp, 12			; 0000000cH

; 446  :   TempMemoryPos+=Length+1;

  00074	8b 45 f8	 mov	 eax, DWORD PTR _Length$[ebp]
  00077	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _TempMemoryPos
  0007d	8d 54 01 01	 lea	 edx, DWORD PTR [ecx+eax+1]
  00081	89 15 00 00 00
	00		 mov	 DWORD PTR _TempMemoryPos, edx

; 447  :   TempMem[TempMemoryPos]=0;

  00087	a1 00 00 00 00	 mov	 eax, DWORD PTR _TempMem
  0008c	03 05 00 00 00
	00		 add	 eax, DWORD PTR _TempMemoryPos
  00092	c6 00 00	 mov	 BYTE PTR [eax], 0

; 448  : }

  00095	5f		 pop	 edi
  00096	5e		 pop	 esi
  00097	5b		 pop	 ebx
  00098	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0009e	3b ec		 cmp	 ebp, esp
  000a0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a5	8b e5		 mov	 esp, ebp
  000a7	5d		 pop	 ebp
  000a8	c3		 ret	 0
_CopyFileNameToTempMem ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _DeAllocateMemTemp
_TEXT	SEGMENT
_DeAllocateMemTemp PROC					; COMDAT

; 422  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 423  :   if (GlobalTempMem!=NULL) {

  0001e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _GlobalTempMem, 0
  00025	74 3e		 je	 SHORT $LN1@DeAllocate

; 424  :     GlobalUnlock(GlobalTempMem);

  00027	8b f4		 mov	 esi, esp
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR _GlobalTempMem
  0002e	50		 push	 eax
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalUnlock@4
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 425  :     GlobalFree(GlobalTempMem);

  0003c	8b f4		 mov	 esi, esp
  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR _GlobalTempMem
  00043	50		 push	 eax
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalFree@4
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 426  :     GlobalTempMem=NULL;

  00051	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _GlobalTempMem, 0

; 427  :     MaxTempMemory=0;

  0005b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _MaxTempMemory, 0
$LN1@DeAllocate:

; 428  :   }
; 429  : }

  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0006e	3b ec		 cmp	 ebp, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
_DeAllocateMemTemp ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _AllocateMemTemp
_TEXT	SEGMENT
tv65 = -208						; size = 4
_NewMem$ = -8						; size = 4
_MemSize$ = 8						; size = 4
_AllocateMemTemp PROC					; COMDAT

; 390  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00012	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 391  :   HGLOBAL NewMem;
; 392  : 
; 393  :   MemSize=max(MemSize,16384);

  0001e	81 7d 08 00 40
	00 00		 cmp	 DWORD PTR _MemSize$[ebp], 16384 ; 00004000H
  00025	7e 0b		 jle	 SHORT $LN9@AllocateMe
  00027	8b 45 08	 mov	 eax, DWORD PTR _MemSize$[ebp]
  0002a	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00030	eb 0a		 jmp	 SHORT $LN10@AllocateMe
$LN9@AllocateMe:
  00032	c7 85 30 ff ff
	ff 00 40 00 00	 mov	 DWORD PTR tv65[ebp], 16384 ; 00004000H
$LN10@AllocateMe:
  0003c	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv65[ebp]
  00042	89 4d 08	 mov	 DWORD PTR _MemSize$[ebp], ecx

; 394  :   if (MaxTempMemory==0) {

  00045	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _MaxTempMemory, 0
  0004c	75 5d		 jne	 SHORT $LN2@AllocateMe

; 395  :     if ((GlobalTempMem=GlobalAlloc(GHND,MemSize))==NULL) {

  0004e	8b f4		 mov	 esi, esp
  00050	8b 45 08	 mov	 eax, DWORD PTR _MemSize$[ebp]
  00053	50		 push	 eax
  00054	6a 42		 push	 66			; 00000042H
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalAlloc@8
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	a3 00 00 00 00	 mov	 DWORD PTR _GlobalTempMem, eax
  00068	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _GlobalTempMem, 0
  0006f	75 08		 jne	 SHORT $LN4@AllocateMe

; 396  :       return -1;

  00071	83 c8 ff	 or	 eax, -1
  00074	e9 96 00 00 00	 jmp	 $LN1@AllocateMe
$LN4@AllocateMe:

; 397  :     }
; 398  :     if ((TempMem=GlobalLock(GlobalTempMem))==NULL) {

  00079	8b f4		 mov	 esi, esp
  0007b	a1 00 00 00 00	 mov	 eax, DWORD PTR _GlobalTempMem
  00080	50		 push	 eax
  00081	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalLock@4
  00087	3b f4		 cmp	 esi, esp
  00089	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008e	a3 00 00 00 00	 mov	 DWORD PTR _TempMem, eax
  00093	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _TempMem, 0
  0009a	75 05		 jne	 SHORT $LN5@AllocateMe

; 399  :       return -1;

  0009c	83 c8 ff	 or	 eax, -1
  0009f	eb 6e		 jmp	 SHORT $LN1@AllocateMe
$LN5@AllocateMe:

; 400  :     }
; 401  :     MaxTempMemory=MemSize;

  000a1	8b 45 08	 mov	 eax, DWORD PTR _MemSize$[ebp]
  000a4	a3 00 00 00 00	 mov	 DWORD PTR _MaxTempMemory, eax

; 402  :   } else {

  000a9	eb 62		 jmp	 SHORT $LN3@AllocateMe
$LN2@AllocateMe:

; 403  :     if ((NewMem=GlobalReAlloc(GlobalTempMem,MemSize,GHND))==NULL) {

  000ab	8b f4		 mov	 esi, esp
  000ad	6a 42		 push	 66			; 00000042H
  000af	8b 45 08	 mov	 eax, DWORD PTR _MemSize$[ebp]
  000b2	50		 push	 eax
  000b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _GlobalTempMem
  000b9	51		 push	 ecx
  000ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalReAlloc@12
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	89 45 f8	 mov	 DWORD PTR _NewMem$[ebp], eax
  000ca	83 7d f8 00	 cmp	 DWORD PTR _NewMem$[ebp], 0
  000ce	75 05		 jne	 SHORT $LN6@AllocateMe

; 404  :       return -1;

  000d0	83 c8 ff	 or	 eax, -1
  000d3	eb 3a		 jmp	 SHORT $LN1@AllocateMe
$LN6@AllocateMe:

; 405  :     }
; 406  :     GlobalTempMem=NewMem;

  000d5	8b 45 f8	 mov	 eax, DWORD PTR _NewMem$[ebp]
  000d8	a3 00 00 00 00	 mov	 DWORD PTR _GlobalTempMem, eax

; 407  :     if ((TempMem=GlobalLock(GlobalTempMem))==NULL) {

  000dd	8b f4		 mov	 esi, esp
  000df	a1 00 00 00 00	 mov	 eax, DWORD PTR _GlobalTempMem
  000e4	50		 push	 eax
  000e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GlobalLock@4
  000eb	3b f4		 cmp	 esi, esp
  000ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f2	a3 00 00 00 00	 mov	 DWORD PTR _TempMem, eax
  000f7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _TempMem, 0
  000fe	75 05		 jne	 SHORT $LN7@AllocateMe

; 408  :       return -1;

  00100	83 c8 ff	 or	 eax, -1
  00103	eb 0a		 jmp	 SHORT $LN1@AllocateMe
$LN7@AllocateMe:

; 409  :     }
; 410  :     MaxTempMemory=MemSize;

  00105	8b 45 08	 mov	 eax, DWORD PTR _MemSize$[ebp]
  00108	a3 00 00 00 00	 mov	 DWORD PTR _MaxTempMemory, eax
$LN3@AllocateMe:

; 411  :   }
; 412  :   return 0;

  0010d	33 c0		 xor	 eax, eax
$LN1@AllocateMe:

; 413  : }

  0010f	5f		 pop	 edi
  00110	5e		 pop	 esi
  00111	5b		 pop	 ebx
  00112	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  00118	3b ec		 cmp	 ebp, esp
  0011a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011f	8b e5		 mov	 esp, ebp
  00121	5d		 pop	 ebp
  00122	c3		 ret	 0
_AllocateMemTemp ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _InsertWindowInProject
_TEXT	SEGMENT
_cnt$ = -8						; size = 4
_Window$ = 8						; size = 4
_mode$ = 12						; size = 4
_InsertWindowInProject PROC				; COMDAT

; 363  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 364  :   int32  cnt;
; 365  : 
; 366  :   if (ProjectInfo==NULL) return ;

  0001e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _ProjectInfo, 0
  00025	75 05		 jne	 SHORT $LN4@InsertWind
  00027	e9 81 00 00 00	 jmp	 $LN1@InsertWind
$LN4@InsertWind:

; 367  :   cnt=0;

  0002c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _cnt$[ebp], 0
$LN2@InsertWind:

; 368  :   while ((cnt<32)
; 369  :         &&

  00033	83 7d f8 20	 cmp	 DWORD PTR _cnt$[ebp], 32 ; 00000020H
  00037	7d 1e		 jge	 SHORT $LN3@InsertWind
  00039	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  0003c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ProjectInfo
  00042	83 bc 81 80 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+128], 0
  0004a	74 0b		 je	 SHORT $LN3@InsertWind

; 370  :         (ProjectInfo->FileTypes[cnt]!=0)) cnt++;

  0004c	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  0004f	83 c0 01	 add	 eax, 1
  00052	89 45 f8	 mov	 DWORD PTR _cnt$[ebp], eax
  00055	eb dc		 jmp	 SHORT $LN2@InsertWind
$LN3@InsertWind:

; 371  :   if (cnt==32) return;

  00057	83 7d f8 20	 cmp	 DWORD PTR _cnt$[ebp], 32 ; 00000020H
  0005b	75 02		 jne	 SHORT $LN5@InsertWind
  0005d	eb 4e		 jmp	 SHORT $LN1@InsertWind
$LN5@InsertWind:

; 372  :   ProjectIndexNr=cnt;

  0005f	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00062	a3 00 00 00 00	 mov	 DWORD PTR _ProjectIndexNr, eax

; 373  :   if (LibraryMode==0) {

  00067	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  0006e	75 16		 jne	 SHORT $LN6@InsertWind

; 374  :     ProjectInfo->FileTypes[cnt]=5;

  00070	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00073	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ProjectInfo
  00079	c7 84 81 80 00
	00 00 05 00 00
	00		 mov	 DWORD PTR [ecx+eax*4+128], 5

; 375  :   } else {

  00084	eb 14		 jmp	 SHORT $LN7@InsertWind
$LN6@InsertWind:

; 376  :     ProjectInfo->FileTypes[cnt]=6;

  00086	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  00089	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ProjectInfo
  0008f	c7 84 81 80 00
	00 00 06 00 00
	00		 mov	 DWORD PTR [ecx+eax*4+128], 6
$LN7@InsertWind:

; 377  :   }
; 378  :   ProjectInfo->WindowHandles[cnt]=Window;

  0009a	8b 45 f8	 mov	 eax, DWORD PTR _cnt$[ebp]
  0009d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ProjectInfo
  000a3	8b 55 08	 mov	 edx, DWORD PTR _Window$[ebp]
  000a6	89 94 81 80 01
	00 00		 mov	 DWORD PTR [ecx+eax*4+384], edx
$LN1@InsertWind:

; 379  : 
; 380  : }

  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c3		 ret	 0
_InsertWindowInProject ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _PointInRectangle
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_Rect$ = 16						; size = 4
_PointInRectangle PROC					; COMDAT

; 346  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 347  :   if (x<Rect->left) return 0;

  0001e	8b 45 10	 mov	 eax, DWORD PTR _Rect$[ebp]
  00021	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  00024	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00026	7d 04		 jge	 SHORT $LN2@PointInRec
  00028	33 c0		 xor	 eax, eax
  0002a	eb 32		 jmp	 SHORT $LN1@PointInRec
$LN2@PointInRec:

; 348  :   if (y<Rect->top) return 0;

  0002c	8b 45 10	 mov	 eax, DWORD PTR _Rect$[ebp]
  0002f	8b 4d 0c	 mov	 ecx, DWORD PTR _y$[ebp]
  00032	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00035	7d 04		 jge	 SHORT $LN3@PointInRec
  00037	33 c0		 xor	 eax, eax
  00039	eb 23		 jmp	 SHORT $LN1@PointInRec
$LN3@PointInRec:

; 349  :   if (x>=Rect->right) return 0;

  0003b	8b 45 10	 mov	 eax, DWORD PTR _Rect$[ebp]
  0003e	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]
  00041	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00044	7c 04		 jl	 SHORT $LN4@PointInRec
  00046	33 c0		 xor	 eax, eax
  00048	eb 14		 jmp	 SHORT $LN1@PointInRec
$LN4@PointInRec:

; 350  :   if (y>=Rect->bottom) return 0;

  0004a	8b 45 10	 mov	 eax, DWORD PTR _Rect$[ebp]
  0004d	8b 4d 0c	 mov	 ecx, DWORD PTR _y$[ebp]
  00050	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  00053	7c 04		 jl	 SHORT $LN5@PointInRec
  00055	33 c0		 xor	 eax, eax
  00057	eb 05		 jmp	 SHORT $LN1@PointInRec
$LN5@PointInRec:

; 351  :   return 1;

  00059	b8 01 00 00 00	 mov	 eax, 1
$LN1@PointInRec:

; 352  : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
_PointInRectangle ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _AboutDialogBody@16
_TEXT	SEGMENT
tv133 = -924						; size = 4
tv64 = -924						; size = 4
_str$ = -532						; size = 512
_about$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_Dialog$ = 8						; size = 4
_Message$ = 12						; size = 4
_WParam$ = 16						; size = 4
_LParam$ = 20						; size = 4
_AboutDialogBody@16 PROC				; COMDAT

; 301  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 9c 03 00
	00		 sub	 esp, 924		; 0000039cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 64 fc ff
	ff		 lea	 edi, DWORD PTR [ebp-924]
  00012	b9 e7 00 00 00	 mov	 ecx, 231		; 000000e7H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 302  :   int32    about;
; 303  :   char    str[MAX_LENGTH_STRING];
; 304  : 
; 305  :   about = 1;

  00028	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _about$[ebp], 1

; 306  :   switch ( Message ) {

  0002f	8b 45 0c	 mov	 eax, DWORD PTR _Message$[ebp]
  00032	89 85 64 fc ff
	ff		 mov	 DWORD PTR tv64[ebp], eax
  00038	81 bd 64 fc ff
	ff 10 01 00 00	 cmp	 DWORD PTR tv64[ebp], 272 ; 00000110H
  00042	74 15		 je	 SHORT $LN6@AboutDialo
  00044	81 bd 64 fc ff
	ff 11 01 00 00	 cmp	 DWORD PTR tv64[ebp], 273 ; 00000111H
  0004e	0f 84 d2 00 00
	00		 je	 $LN8@AboutDialo
  00054	e9 03 01 00 00	 jmp	 $LN2@AboutDialo
$LN6@AboutDialo:

; 307  :     case WM_INITDIALOG:
; 308  :       SetWindowText(Dialog,SC(55,"About library manager PCB elegance"));

  00059	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@PECGDHGE@About?5library?5manager?5PCB?5elegan@
  0005e	6a 37		 push	 55			; 00000037H
  00060	e8 00 00 00 00	 call	 _StringConvert
  00065	83 c4 08	 add	 esp, 8
  00068	8b f4		 mov	 esi, esp
  0006a	50		 push	 eax
  0006b	8b 45 08	 mov	 eax, DWORD PTR _Dialog$[ebp]
  0006e	50		 push	 eax
  0006f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowTextA@8
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 309  :       SetDialogItemText(Dialog,IDC_STATIC1  ,SC(56,"library manager PCB Elegance"));

  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@HAKPMFFG@library?5manager?5PCB?5Elegance?$AA@
  00081	6a 38		 push	 56			; 00000038H
  00083	e8 00 00 00 00	 call	 _StringConvert
  00088	83 c4 08	 add	 esp, 8
  0008b	50		 push	 eax
  0008c	68 a0 0f 00 00	 push	 4000			; 00000fa0H
  00091	8b 45 08	 mov	 eax, DWORD PTR _Dialog$[ebp]
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 _SetDialogItemText
  0009a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 310  :       SetDialogItemText(Dialog,IDOK         ,SC(3,"OK"));

  0009d	68 00 00 00 00	 push	 OFFSET ??_C@_02GIPFHKNO@OK?$AA@
  000a2	6a 03		 push	 3
  000a4	e8 00 00 00 00	 call	 _StringConvert
  000a9	83 c4 08	 add	 esp, 8
  000ac	50		 push	 eax
  000ad	6a 01		 push	 1
  000af	8b 45 08	 mov	 eax, DWORD PTR _Dialog$[ebp]
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 _SetDialogItemText
  000b8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 311  :       sprintf(str,SC(57,"Build version %i.%i.%i  [ %s ]"),

  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_0N@MBDMEPPJ@18?5May?0?52012?$AA@
  000c0	68 ed 03 00 00	 push	 1005			; 000003edH
  000c5	6a 32		 push	 50			; 00000032H
  000c7	6a 03		 push	 3
  000c9	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@LOJGINCP@Build?5version?5?$CFi?4?$CFi?4?$CFi?5?5?$FL?5?$CFs?5?$FN?$AA@
  000ce	6a 39		 push	 57			; 00000039H
  000d0	e8 00 00 00 00	 call	 _StringConvert
  000d5	83 c4 08	 add	 esp, 8
  000d8	50		 push	 eax
  000d9	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  000df	50		 push	 eax
  000e0	e8 00 00 00 00	 call	 _sprintf
  000e5	83 c4 18	 add	 esp, 24			; 00000018H

; 312  :                   PROGRAM_VERSION/100,PROGRAM_VERSION % 100,BUILD_VERSION,TIME_STRING);
; 313  : #ifdef GCC_COMP
; 314  :       strcat(str,"\r\n\r\nCompiled with mingw (gcc 4.6.1)");
; 315  : #endif
; 316  : #ifdef VC2005
; 317  :       strcat(str,"\r\n\r\nCompiled with Microsoft Visual Studio 2005");
; 318  : #endif
; 319  : #ifdef VC2010
; 320  :       strcat(str,"\r\n\r\nCompiled with Microsoft Visual Studio 2010");

  000e8	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@PPFINMMK@?$AN?6?$AN?6Compiled?5with?5Microsoft?5Visu@
  000ed	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  000f3	50		 push	 eax
  000f4	e8 00 00 00 00	 call	 _strcat
  000f9	83 c4 08	 add	 esp, 8

; 321  : #endif
; 322  :       SendDlgItemMessage(Dialog,IDC_EDIT1,WM_SETTEXT,0,(LPARAM)(LPSTR)str);

  000fc	8b f4		 mov	 esi, esp
  000fe	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  00104	50		 push	 eax
  00105	6a 00		 push	 0
  00107	6a 0c		 push	 12			; 0000000cH
  00109	68 e8 03 00 00	 push	 1000			; 000003e8H
  0010e	8b 4d 08	 mov	 ecx, DWORD PTR _Dialog$[ebp]
  00111	51		 push	 ecx
  00112	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendDlgItemMessageA@20
  00118	3b f4		 cmp	 esi, esp
  0011a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 323  :       return about;

  0011f	8b 45 f4	 mov	 eax, DWORD PTR _about$[ebp]
  00122	eb 42		 jmp	 SHORT $LN1@AboutDialo

; 324  :     case WM_MOVE:
; 325  :       break;

  00124	eb 36		 jmp	 SHORT $LN2@AboutDialo
$LN8@AboutDialo:

; 326  :     case WM_COMMAND:
; 327  :       switch (LOWORD(WParam)) {

  00126	8b 45 10	 mov	 eax, DWORD PTR _WParam$[ebp]
  00129	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0012e	0f b7 c8	 movzx	 ecx, ax
  00131	89 8d 64 fc ff
	ff		 mov	 DWORD PTR tv133[ebp], ecx
  00137	83 bd 64 fc ff
	ff 01		 cmp	 DWORD PTR tv133[ebp], 1
  0013e	74 02		 je	 SHORT $LN9@AboutDialo
  00140	eb 1a		 jmp	 SHORT $LN2@AboutDialo
$LN9@AboutDialo:

; 328  :         case IDOK:
; 329  :           EndDialog(Dialog,1);

  00142	8b f4		 mov	 esi, esp
  00144	6a 01		 push	 1
  00146	8b 45 08	 mov	 eax, DWORD PTR _Dialog$[ebp]
  00149	50		 push	 eax
  0014a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EndDialog@8
  00150	3b f4		 cmp	 esi, esp
  00152	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 330  :           return about;

  00157	8b 45 f4	 mov	 eax, DWORD PTR _about$[ebp]
  0015a	eb 0a		 jmp	 SHORT $LN1@AboutDialo
$LN2@AboutDialo:

; 331  :       }
; 332  :       break;
; 333  :   }
; 334  :   about = 0;

  0015c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _about$[ebp], 0

; 335  :   return about;

  00163	8b 45 f4	 mov	 eax, DWORD PTR _about$[ebp]
$LN1@AboutDialo:

; 336  : }

  00166	52		 push	 edx
  00167	8b cd		 mov	 ecx, ebp
  00169	50		 push	 eax
  0016a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@AboutDialo
  00170	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00175	58		 pop	 eax
  00176	5a		 pop	 edx
  00177	5f		 pop	 edi
  00178	5e		 pop	 esi
  00179	5b		 pop	 ebx
  0017a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0017d	33 cd		 xor	 ecx, ebp
  0017f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00184	81 c4 9c 03 00
	00		 add	 esp, 924		; 0000039cH
  0018a	3b ec		 cmp	 ebp, esp
  0018c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00191	8b e5		 mov	 esp, ebp
  00193	5d		 pop	 ebp
  00194	c2 10 00	 ret	 16			; 00000010H
  00197	90		 npad	 1
$LN13@AboutDialo:
  00198	01 00 00 00	 DD	 1
  0019c	00 00 00 00	 DD	 $LN12@AboutDialo
$LN12@AboutDialo:
  001a0	ec fd ff ff	 DD	 -532			; fffffdecH
  001a4	00 02 00 00	 DD	 512			; 00000200H
  001a8	00 00 00 00	 DD	 $LN11@AboutDialo
$LN11@AboutDialo:
  001ac	73		 DB	 115			; 00000073H
  001ad	74		 DB	 116			; 00000074H
  001ae	72		 DB	 114			; 00000072H
  001af	00		 DB	 0
_AboutDialogBody@16 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _SetDialogItemText
_TEXT	SEGMENT
_Dialog$ = 8						; size = 4
_DlgItem$ = 12						; size = 4
_Text$ = 16						; size = 4
_SetDialogItemText PROC					; COMDAT

; 290  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 291  :   SendDlgItemMessageUTF8(Dialog,DlgItem,WM_SETTEXT,0,(LPARAM)Text);

  0001e	8b 45 10	 mov	 eax, DWORD PTR _Text$[ebp]
  00021	50		 push	 eax
  00022	6a 00		 push	 0
  00024	6a 0c		 push	 12			; 0000000cH
  00026	8b 4d 0c	 mov	 ecx, DWORD PTR _DlgItem$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 08	 mov	 edx, DWORD PTR _Dialog$[ebp]
  0002d	52		 push	 edx
  0002e	e8 00 00 00 00	 call	 _SendDlgItemMessageUTF8
  00033	83 c4 14	 add	 esp, 20			; 00000014H

; 292  : }

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
_SetDialogItemText ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _LoadSymbolFileNames
_TEXT	SEGMENT
$T1 = -2352						; size = 4
$T2 = -2340						; size = 4
_str5$ = -1560						; size = 512
_str2$ = -1040						; size = 512
_str$ = -520						; size = 512
__$ArrayPad$ = -4					; size = 4
_ListNr$ = 8						; size = 4
_LoadSymbolFileNames PROC				; COMDAT

; 1667 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 34 09 00
	00		 sub	 esp, 2356		; 00000934H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd cc f6 ff
	ff		 lea	 edi, DWORD PTR [ebp-2356]
  00012	b9 4d 02 00 00	 mov	 ecx, 589		; 0000024dH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1668 :   char  str[MAX_LENGTH_STRING],str2[MAX_LENGTH_STRING],str5[MAX_LENGTH_STRING];
; 1669 : 
; 1670 :   str[0]=0;

  00028	b8 01 00 00 00	 mov	 eax, 1
  0002d	6b c8 00	 imul	 ecx, eax, 0
  00030	89 8d dc f6 ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  00036	81 bd dc f6 ff
	ff 00 02 00 00	 cmp	 DWORD PTR $T2[ebp], 512	; 00000200H
  00040	73 02		 jae	 SHORT $LN9@LoadSymbol
  00042	eb 05		 jmp	 SHORT $LN10@LoadSymbol
$LN9@LoadSymbol:
  00044	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN10@LoadSymbol:
  00049	8b 95 dc f6 ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  0004f	c6 84 15 f8 fd
	ff ff 00	 mov	 BYTE PTR _str$[ebp+edx], 0

; 1671 :   str2[0]=0;

  00057	b8 01 00 00 00	 mov	 eax, 1
  0005c	6b c8 00	 imul	 ecx, eax, 0
  0005f	89 8d d0 f6 ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  00065	81 bd d0 f6 ff
	ff 00 02 00 00	 cmp	 DWORD PTR $T1[ebp], 512	; 00000200H
  0006f	73 02		 jae	 SHORT $LN11@LoadSymbol
  00071	eb 05		 jmp	 SHORT $LN12@LoadSymbol
$LN11@LoadSymbol:
  00073	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN12@LoadSymbol:
  00078	8b 95 d0 f6 ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  0007e	c6 84 15 f0 fb
	ff ff 00	 mov	 BYTE PTR _str2$[ebp+edx], 0

; 1672 :   TempMem[0]=0;

  00086	b8 01 00 00 00	 mov	 eax, 1
  0008b	6b c8 00	 imul	 ecx, eax, 0
  0008e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _TempMem
  00094	c6 04 0a 00	 mov	 BYTE PTR [edx+ecx], 0

; 1673 :   TempMem[1]=0;

  00098	b8 01 00 00 00	 mov	 eax, 1
  0009d	c1 e0 00	 shl	 eax, 0
  000a0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _TempMem
  000a6	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1674 : 
; 1675 :   if (LibraryMode==0) {

  000aa	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  000b1	75 21		 jne	 SHORT $LN2@LoadSymbol

; 1676 :     strcpy(str5,SC(27,"Symbol files"));

  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JCIAGPG@Symbol?5files?$AA@
  000b8	6a 1b		 push	 27			; 0000001bH
  000ba	e8 00 00 00 00	 call	 _StringConvert
  000bf	83 c4 08	 add	 esp, 8
  000c2	50		 push	 eax
  000c3	8d 85 e8 f9 ff
	ff		 lea	 eax, DWORD PTR _str5$[ebp]
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 _strcpy
  000cf	83 c4 08	 add	 esp, 8

; 1677 :   } else {

  000d2	eb 1f		 jmp	 SHORT $LN3@LoadSymbol
$LN2@LoadSymbol:

; 1678 :     strcpy(str5,SC(28,"Geometry files"));

  000d4	68 00 00 00 00	 push	 OFFSET ??_C@_0P@ODHBNOGE@Geometry?5files?$AA@
  000d9	6a 1c		 push	 28			; 0000001cH
  000db	e8 00 00 00 00	 call	 _StringConvert
  000e0	83 c4 08	 add	 esp, 8
  000e3	50		 push	 eax
  000e4	8d 85 e8 f9 ff
	ff		 lea	 eax, DWORD PTR _str5$[ebp]
  000ea	50		 push	 eax
  000eb	e8 00 00 00 00	 call	 _strcpy
  000f0	83 c4 08	 add	 esp, 8
$LN3@LoadSymbol:

; 1679 :   }
; 1680 : 
; 1681 :   if (LibraryMode==0) {

  000f3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  000fa	75 45		 jne	 SHORT $LN4@LoadSymbol

; 1682 :     if (GetNewFileUTF8(LIBMANWindow,LIBMANClass.hInstance,(char *)TempMem,
; 1683 :                        SymbolImportDir,str5,NULL,str5,"sym",6)==0) {

  000fc	6a 06		 push	 6
  000fe	68 00 00 00 00	 push	 OFFSET ??_C@_03CMECGJKE@sym?$AA@
  00103	8d 85 e8 f9 ff
	ff		 lea	 eax, DWORD PTR _str5$[ebp]
  00109	50		 push	 eax
  0010a	6a 00		 push	 0
  0010c	8d 8d e8 f9 ff
	ff		 lea	 ecx, DWORD PTR _str5$[ebp]
  00112	51		 push	 ecx
  00113	68 00 00 00 00	 push	 OFFSET _SymbolImportDir
  00118	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _TempMem
  0011e	52		 push	 edx
  0011f	a1 10 00 00 00	 mov	 eax, DWORD PTR _LIBMANClass+16
  00124	50		 push	 eax
  00125	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  0012b	51		 push	 ecx
  0012c	e8 00 00 00 00	 call	 _GetNewFileUTF8
  00131	83 c4 24	 add	 esp, 36			; 00000024H
  00134	85 c0		 test	 eax, eax
  00136	75 07		 jne	 SHORT $LN6@LoadSymbol

; 1684 :       return 1;

  00138	b8 01 00 00 00	 mov	 eax, 1
  0013d	eb 47		 jmp	 SHORT $LN8@LoadSymbol
$LN6@LoadSymbol:

; 1685 :     }
; 1686 :   } else {

  0013f	eb 43		 jmp	 SHORT $LN5@LoadSymbol
$LN4@LoadSymbol:

; 1687 :     if (GetNewFileUTF8(LIBMANWindow,LIBMANClass.hInstance,(char *)TempMem,
; 1688 :                    SymbolImportDir,str5,NULL,str5,"shp",6)==0) {

  00141	6a 06		 push	 6
  00143	68 00 00 00 00	 push	 OFFSET ??_C@_03MOMKMMPP@shp?$AA@
  00148	8d 85 e8 f9 ff
	ff		 lea	 eax, DWORD PTR _str5$[ebp]
  0014e	50		 push	 eax
  0014f	6a 00		 push	 0
  00151	8d 8d e8 f9 ff
	ff		 lea	 ecx, DWORD PTR _str5$[ebp]
  00157	51		 push	 ecx
  00158	68 00 00 00 00	 push	 OFFSET _SymbolImportDir
  0015d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _TempMem
  00163	52		 push	 edx
  00164	a1 10 00 00 00	 mov	 eax, DWORD PTR _LIBMANClass+16
  00169	50		 push	 eax
  0016a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00170	51		 push	 ecx
  00171	e8 00 00 00 00	 call	 _GetNewFileUTF8
  00176	83 c4 24	 add	 esp, 36			; 00000024H
  00179	85 c0		 test	 eax, eax
  0017b	75 07		 jne	 SHORT $LN5@LoadSymbol

; 1689 :       return 1;

  0017d	b8 01 00 00 00	 mov	 eax, 1
  00182	eb 02		 jmp	 SHORT $LN8@LoadSymbol
$LN5@LoadSymbol:

; 1690 :     }
; 1691 :   }
; 1692 :   return 0;

  00184	33 c0		 xor	 eax, eax
$LN8@LoadSymbol:

; 1693 : }

  00186	52		 push	 edx
  00187	8b cd		 mov	 ecx, ebp
  00189	50		 push	 eax
  0018a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN17@LoadSymbol
  00190	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00195	58		 pop	 eax
  00196	5a		 pop	 edx
  00197	5f		 pop	 edi
  00198	5e		 pop	 esi
  00199	5b		 pop	 ebx
  0019a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0019d	33 cd		 xor	 ecx, ebp
  0019f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a4	81 c4 34 09 00
	00		 add	 esp, 2356		; 00000934H
  001aa	3b ec		 cmp	 ebp, esp
  001ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b1	8b e5		 mov	 esp, ebp
  001b3	5d		 pop	 ebp
  001b4	c3		 ret	 0
  001b5	0f 1f 00	 npad	 3
$LN17@LoadSymbol:
  001b8	03 00 00 00	 DD	 3
  001bc	00 00 00 00	 DD	 $LN16@LoadSymbol
$LN16@LoadSymbol:
  001c0	f8 fd ff ff	 DD	 -520			; fffffdf8H
  001c4	00 02 00 00	 DD	 512			; 00000200H
  001c8	00 00 00 00	 DD	 $LN13@LoadSymbol
  001cc	f0 fb ff ff	 DD	 -1040			; fffffbf0H
  001d0	00 02 00 00	 DD	 512			; 00000200H
  001d4	00 00 00 00	 DD	 $LN14@LoadSymbol
  001d8	e8 f9 ff ff	 DD	 -1560			; fffff9e8H
  001dc	00 02 00 00	 DD	 512			; 00000200H
  001e0	00 00 00 00	 DD	 $LN15@LoadSymbol
$LN15@LoadSymbol:
  001e4	73		 DB	 115			; 00000073H
  001e5	74		 DB	 116			; 00000074H
  001e6	72		 DB	 114			; 00000072H
  001e7	35		 DB	 53			; 00000035H
  001e8	00		 DB	 0
$LN14@LoadSymbol:
  001e9	73		 DB	 115			; 00000073H
  001ea	74		 DB	 116			; 00000074H
  001eb	72		 DB	 114			; 00000072H
  001ec	32		 DB	 50			; 00000032H
  001ed	00		 DB	 0
$LN13@LoadSymbol:
  001ee	73		 DB	 115			; 00000073H
  001ef	74		 DB	 116			; 00000074H
  001f0	72		 DB	 114			; 00000072H
  001f1	00		 DB	 0
_LoadSymbolFileNames ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _LIBMANWinProc@16
_TEXT	SEGMENT
tv129 = -264						; size = 4
tv81 = -264						; size = 4
tv76 = -264						; size = 4
tv64 = -264						; size = 4
_CurrentCursor$ = -64					; size = 8
_res$ = -48						; size = 4
_y1$ = -36						; size = 4
_x1$ = -24						; size = 4
_pp$ = -12						; size = 8
_Window$ = 8						; size = 4
_Message$ = 12						; size = 4
_WParam$ = 16						; size = 4
_LParam$ = 20						; size = 4
_LIBMANWinProc@16 PROC					; COMDAT

; 2511 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd f8 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-264]
  00012	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 2512 :   POINT pp;
; 2513 :   int32   x1,y1,res;
; 2514 :   POINT   CurrentCursor;
; 2515 : 
; 2516 :   switch ( Message ) {

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _Message$[ebp]
  00021	89 85 f8 fe ff
	ff		 mov	 DWORD PTR tv64[ebp], eax
  00027	83 bd f8 fe ff
	ff 0f		 cmp	 DWORD PTR tv64[ebp], 15	; 0000000fH
  0002e	77 36		 ja	 SHORT $LN47@LIBMANWinP
  00030	83 bd f8 fe ff
	ff 0f		 cmp	 DWORD PTR tv64[ebp], 15	; 0000000fH
  00037	0f 84 7e 02 00
	00		 je	 $LN23@LIBMANWinP
  0003d	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR tv64[ebp]
  00043	83 e9 01	 sub	 ecx, 1
  00046	89 8d f8 fe ff
	ff		 mov	 DWORD PTR tv64[ebp], ecx
  0004c	83 bd f8 fe ff
	ff 04		 cmp	 DWORD PTR tv64[ebp], 4
  00053	0f 87 6f 05 00
	00		 ja	 $LN42@LIBMANWinP
  00059	8b 95 f8 fe ff
	ff		 mov	 edx, DWORD PTR tv64[ebp]
  0005f	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN54@LIBMANWinP[edx*4]
$LN47@LIBMANWinP:
  00066	81 bd f8 fe ff
	ff 11 01 00 00	 cmp	 DWORD PTR tv64[ebp], 273 ; 00000111H
  00070	77 2f		 ja	 SHORT $LN48@LIBMANWinP
  00072	81 bd f8 fe ff
	ff 11 01 00 00	 cmp	 DWORD PTR tv64[ebp], 273 ; 00000111H
  0007c	0f 84 95 00 00
	00		 je	 $LN10@LIBMANWinP
  00082	83 bd f8 fe ff
	ff 10		 cmp	 DWORD PTR tv64[ebp], 16	; 00000010H
  00089	0f 84 3f 04 00
	00		 je	 $LN35@LIBMANWinP
  0008f	83 bd f8 fe ff
	ff 12		 cmp	 DWORD PTR tv64[ebp], 18	; 00000012H
  00096	0f 84 09 05 00
	00		 je	 $LN40@LIBMANWinP
  0009c	e9 27 05 00 00	 jmp	 $LN42@LIBMANWinP
$LN48@LIBMANWinP:
  000a1	81 bd f8 fe ff
	ff 00 02 00 00	 cmp	 DWORD PTR tv64[ebp], 512 ; 00000200H
  000ab	77 45		 ja	 SHORT $LN49@LIBMANWinP
  000ad	81 bd f8 fe ff
	ff 00 02 00 00	 cmp	 DWORD PTR tv64[ebp], 512 ; 00000200H
  000b7	0f 84 b5 02 00
	00		 je	 $LN28@LIBMANWinP
  000bd	81 bd f8 fe ff
	ff 13 01 00 00	 cmp	 DWORD PTR tv64[ebp], 275 ; 00000113H
  000c7	0f 84 27 03 00
	00		 je	 $LN30@LIBMANWinP
  000cd	81 bd f8 fe ff
	ff 14 01 00 00	 cmp	 DWORD PTR tv64[ebp], 276 ; 00000114H
  000d7	0f 84 ed 01 00
	00		 je	 $LN25@LIBMANWinP
  000dd	81 bd f8 fe ff
	ff 15 01 00 00	 cmp	 DWORD PTR tv64[ebp], 277 ; 00000115H
  000e7	0f 84 d8 01 00
	00		 je	 $LN24@LIBMANWinP
  000ed	e9 d6 04 00 00	 jmp	 $LN42@LIBMANWinP
$LN49@LIBMANWinP:
  000f2	81 bd f8 fe ff
	ff 10 02 00 00	 cmp	 DWORD PTR tv64[ebp], 528 ; 00000210H
  000fc	0f 84 04 03 00
	00		 je	 $LN31@LIBMANWinP
  00102	81 bd f8 fe ff
	ff 33 02 00 00	 cmp	 DWORD PTR tv64[ebp], 563 ; 00000233H
  0010c	0f 84 d6 03 00
	00		 je	 $LN36@LIBMANWinP
  00112	e9 b1 04 00 00	 jmp	 $LN42@LIBMANWinP
$LN10@LIBMANWinP:

; 2517 :     case WM_COMMAND:
; 2518 :       res=1;

  00117	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR _res$[ebp], 1

; 2519 :       if (HIWORD(WParam)==0) {

  0011e	8b 45 10	 mov	 eax, DWORD PTR _WParam$[ebp]
  00121	c1 e8 10	 shr	 eax, 16			; 00000010H
  00124	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00129	0f b7 c8	 movzx	 ecx, ax
  0012c	85 c9		 test	 ecx, ecx
  0012e	75 19		 jne	 SHORT $LN11@LIBMANWinP

; 2520 :         LIBMANCommand(Window,WParam,LParam);

  00130	8b 45 14	 mov	 eax, DWORD PTR _LParam$[ebp]
  00133	50		 push	 eax
  00134	8b 4d 10	 mov	 ecx, DWORD PTR _WParam$[ebp]
  00137	51		 push	 ecx
  00138	8b 55 08	 mov	 edx, DWORD PTR _Window$[ebp]
  0013b	52		 push	 edx
  0013c	e8 00 00 00 00	 call	 _LIBMANCommand
  00141	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2521 :       } else {

  00144	e9 68 01 00 00	 jmp	 $LN12@LIBMANWinP
$LN11@LIBMANWinP:

; 2522 :         switch (LOWORD(WParam)) {

  00149	8b 45 10	 mov	 eax, DWORD PTR _WParam$[ebp]
  0014c	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00151	0f b7 c8	 movzx	 ecx, ax
  00154	89 8d f8 fe ff
	ff		 mov	 DWORD PTR tv76[ebp], ecx
  0015a	81 bd f8 fe ff
	ff 48 08 00 00	 cmp	 DWORD PTR tv76[ebp], 2120 ; 00000848H
  00164	74 15		 je	 SHORT $LN13@LIBMANWinP
  00166	81 bd f8 fe ff
	ff 49 08 00 00	 cmp	 DWORD PTR tv76[ebp], 2121 ; 00000849H
  00170	0f 84 b4 00 00
	00		 je	 $LN18@LIBMANWinP
  00176	e9 36 01 00 00	 jmp	 $LN12@LIBMANWinP
$LN13@LIBMANWinP:

; 2523 :           case ID_LIST1: // List window1
; 2524 :             res=CBN_SETFOCUS;

  0017b	c7 45 d0 03 00
	00 00		 mov	 DWORD PTR _res$[ebp], 3

; 2525 :             res=CBN_KILLFOCUS;

  00182	c7 45 d0 04 00
	00 00		 mov	 DWORD PTR _res$[ebp], 4

; 2526 :             switch (HIWORD(WParam)) {

  00189	8b 45 10	 mov	 eax, DWORD PTR _WParam$[ebp]
  0018c	c1 e8 10	 shr	 eax, 16			; 00000010H
  0018f	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00194	0f b7 c8	 movzx	 ecx, ax
  00197	89 8d f8 fe ff
	ff		 mov	 DWORD PTR tv81[ebp], ecx
  0019d	81 bd f8 fe ff
	ff 00 02 00 00	 cmp	 DWORD PTR tv81[ebp], 512 ; 00000200H
  001a7	7f 20		 jg	 SHORT $LN46@LIBMANWinP
  001a9	81 bd f8 fe ff
	ff 00 02 00 00	 cmp	 DWORD PTR tv81[ebp], 512 ; 00000200H
  001b3	74 69		 je	 SHORT $LN17@LIBMANWinP
  001b5	83 bd f8 fe ff
	ff 01		 cmp	 DWORD PTR tv81[ebp], 1
  001bc	74 3f		 je	 SHORT $LN15@LIBMANWinP
  001be	83 bd f8 fe ff
	ff 02		 cmp	 DWORD PTR tv81[ebp], 2
  001c5	74 42		 je	 SHORT $LN16@LIBMANWinP
  001c7	eb 5c		 jmp	 SHORT $LN6@LIBMANWinP
$LN46@LIBMANWinP:
  001c9	81 bd f8 fe ff
	ff 33 02 00 00	 cmp	 DWORD PTR tv81[ebp], 563 ; 00000233H
  001d3	74 02		 je	 SHORT $LN14@LIBMANWinP
  001d5	eb 4e		 jmp	 SHORT $LN6@LIBMANWinP
$LN14@LIBMANWinP:

; 2527 :               case WM_DROPFILES:
; 2528 :                 PostMessage(LIBMANWindow,WM_COMMAND,(WPARAM)WM_DROPFILES_LIST1,(LPARAM)WParam);

  001d7	8b f4		 mov	 esi, esp
  001d9	8b 45 10	 mov	 eax, DWORD PTR _WParam$[ebp]
  001dc	50		 push	 eax
  001dd	68 52 08 00 00	 push	 2130			; 00000852H
  001e2	68 11 01 00 00	 push	 273			; 00000111H
  001e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  001ed	51		 push	 ecx
  001ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16
  001f4	3b f4		 cmp	 esi, esp
  001f6	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2529 :                 break;

  001fb	eb 28		 jmp	 SHORT $LN6@LIBMANWinP
$LN15@LIBMANWinP:

; 2530 :               case LBN_SELCHANGE:
; 2531 :                 ok=1;

  001fd	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _ok, 1

; 2532 :                 break;

  00207	eb 1c		 jmp	 SHORT $LN6@LIBMANWinP
$LN16@LIBMANWinP:

; 2533 :               case LBN_DBLCLK:
; 2534 :                 PopupMenu(0,1);

  00209	6a 01		 push	 1
  0020b	6a 00		 push	 0
  0020d	e8 00 00 00 00	 call	 _PopupMenu
  00212	83 c4 08	 add	 esp, 8

; 2535 : //                res=GetCapture();
; 2536 :                 res=1;

  00215	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR _res$[ebp], 1

; 2537 :                 break;

  0021c	eb 07		 jmp	 SHORT $LN6@LIBMANWinP
$LN17@LIBMANWinP:

; 2538 :               case WM_MOUSEMOVE:
; 2539 :                 res=1;

  0021e	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR _res$[ebp], 1
$LN6@LIBMANWinP:

; 2540 :                 break;
; 2541 : 
; 2542 :             }
; 2543 :             break;

  00225	e9 87 00 00 00	 jmp	 $LN12@LIBMANWinP
$LN18@LIBMANWinP:

; 2544 :           case ID_LIST2: // List window2
; 2545 :             res=CBN_SETFOCUS;

  0022a	c7 45 d0 03 00
	00 00		 mov	 DWORD PTR _res$[ebp], 3

; 2546 :             res=CBN_KILLFOCUS;

  00231	c7 45 d0 04 00
	00 00		 mov	 DWORD PTR _res$[ebp], 4

; 2547 :             switch (HIWORD(WParam)) {

  00238	8b 45 10	 mov	 eax, DWORD PTR _WParam$[ebp]
  0023b	c1 e8 10	 shr	 eax, 16			; 00000010H
  0023e	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00243	0f b7 c8	 movzx	 ecx, ax
  00246	89 8d f8 fe ff
	ff		 mov	 DWORD PTR tv129[ebp], ecx
  0024c	83 bd f8 fe ff
	ff 01		 cmp	 DWORD PTR tv129[ebp], 1
  00253	74 3d		 je	 SHORT $LN20@LIBMANWinP
  00255	83 bd f8 fe ff
	ff 02		 cmp	 DWORD PTR tv129[ebp], 2
  0025c	74 40		 je	 SHORT $LN21@LIBMANWinP
  0025e	81 bd f8 fe ff
	ff 33 02 00 00	 cmp	 DWORD PTR tv129[ebp], 563 ; 00000233H
  00268	74 02		 je	 SHORT $LN19@LIBMANWinP
  0026a	eb 45		 jmp	 SHORT $LN12@LIBMANWinP
$LN19@LIBMANWinP:

; 2548 :               case WM_DROPFILES:
; 2549 :                 PostMessage(LIBMANWindow,WM_COMMAND,(WPARAM)WM_DROPFILES_LIST2,(LPARAM)WParam);

  0026c	8b f4		 mov	 esi, esp
  0026e	8b 45 10	 mov	 eax, DWORD PTR _WParam$[ebp]
  00271	50		 push	 eax
  00272	68 53 08 00 00	 push	 2131			; 00000853H
  00277	68 11 01 00 00	 push	 273			; 00000111H
  0027c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00282	51		 push	 ecx
  00283	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16
  00289	3b f4		 cmp	 esi, esp
  0028b	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2550 :                 break;

  00290	eb 1f		 jmp	 SHORT $LN12@LIBMANWinP
$LN20@LIBMANWinP:

; 2551 :               case LBN_SELCHANGE:
; 2552 :                 ok=1;

  00292	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _ok, 1

; 2553 :                 break;

  0029c	eb 13		 jmp	 SHORT $LN12@LIBMANWinP
$LN21@LIBMANWinP:

; 2554 :               case LBN_DBLCLK:
; 2555 :                 PopupMenu(1,1);

  0029e	6a 01		 push	 1
  002a0	6a 01		 push	 1
  002a2	e8 00 00 00 00	 call	 _PopupMenu
  002a7	83 c4 08	 add	 esp, 8

; 2556 :                 res=1;

  002aa	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR _res$[ebp], 1
$LN12@LIBMANWinP:

; 2557 :                 break;
; 2558 :             }
; 2559 :             break;
; 2560 :         }
; 2561 :       }
; 2562 :       break;

  002b1	e9 42 03 00 00	 jmp	 $LN2@LIBMANWinP
$LN22@LIBMANWinP:

; 2563 :     case WM_CREATE:
; 2564 :       break;

  002b6	e9 3d 03 00 00	 jmp	 $LN2@LIBMANWinP
$LN23@LIBMANWinP:

; 2565 :     case WM_PAINT:
; 2566 :       WindowPaint();

  002bb	e8 00 00 00 00	 call	 _WindowPaint

; 2567 :       break;

  002c0	e9 33 03 00 00	 jmp	 $LN2@LIBMANWinP
$LN24@LIBMANWinP:

; 2568 :     case WM_VSCROLL:
; 2569 :       break;

  002c5	e9 2e 03 00 00	 jmp	 $LN2@LIBMANWinP
$LN25@LIBMANWinP:

; 2570 :     case WM_HSCROLL:
; 2571 :       break;

  002ca	e9 29 03 00 00	 jmp	 $LN2@LIBMANWinP
$LN26@LIBMANWinP:

; 2572 :     case WM_SIZE:
; 2573 :       GetClientRect(LIBMANWindow,&ClientRect);

  002cf	8b f4		 mov	 esi, esp
  002d1	68 00 00 00 00	 push	 OFFSET _ClientRect
  002d6	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  002db	50		 push	 eax
  002dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetClientRect@8
  002e2	3b f4		 cmp	 esi, esp
  002e4	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2574 :       GetWindowRect(LIBMANWindow,&RealWindow);

  002e9	8b f4		 mov	 esi, esp
  002eb	68 00 00 00 00	 push	 OFFSET _RealWindow
  002f0	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  002f5	50		 push	 eax
  002f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
  002fc	3b f4		 cmp	 esi, esp
  002fe	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2575 :       pp.x=0;

  00303	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pp$[ebp], 0

; 2576 :       pp.y=0;

  0030a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pp$[ebp+4], 0

; 2577 :       ClientToScreen(LIBMANWindow,&pp);

  00311	8b f4		 mov	 esi, esp
  00313	8d 45 f4	 lea	 eax, DWORD PTR _pp$[ebp]
  00316	50		 push	 eax
  00317	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  0031d	51		 push	 ecx
  0031e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ClientToScreen@8
  00324	3b f4		 cmp	 esi, esp
  00326	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2578 : //      ClientStartX=(int16)pp.x;
; 2579 : //      ClientStartY=(int16)pp.y;
; 2580 :       break;

  0032b	e9 c8 02 00 00	 jmp	 $LN2@LIBMANWinP
$LN27@LIBMANWinP:

; 2581 :     case WM_MOVE:
; 2582 :       GetWindowRect(LIBMANWindow,&RealWindow);

  00330	8b f4		 mov	 esi, esp
  00332	68 00 00 00 00	 push	 OFFSET _RealWindow
  00337	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  0033c	50		 push	 eax
  0033d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowRect@8
  00343	3b f4		 cmp	 esi, esp
  00345	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2583 :       pp.x=0;

  0034a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pp$[ebp], 0

; 2584 :       pp.y=0;

  00351	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _pp$[ebp+4], 0

; 2585 :       ClientToScreen(LIBMANWindow,&pp);

  00358	8b f4		 mov	 esi, esp
  0035a	8d 45 f4	 lea	 eax, DWORD PTR _pp$[ebp]
  0035d	50		 push	 eax
  0035e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00364	51		 push	 ecx
  00365	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ClientToScreen@8
  0036b	3b f4		 cmp	 esi, esp
  0036d	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN28@LIBMANWinP:

; 2586 : //      ClientStartX=(int16)pp.x;
; 2587 : //      ClientStartY=(int16)pp.y;
; 2588 : /*
; 2589 :     case WM_CHAR:
; 2590 :       break;
; 2591 :     case WM_KEYDOWN:
; 2592 :     case WM_SYSKEYDOWN:
; 2593 :       break;
; 2594 :     case WM_KEYUP:
; 2595 :     case WM_SYSKEYUP:
; 2596 :       break;
; 2597 : */
; 2598 :     case WM_MOUSEMOVE:
; 2599 :       MousePosX=LOWORD(LParam);

  00372	8b 45 14	 mov	 eax, DWORD PTR _LParam$[ebp]
  00375	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0037a	0f b7 c8	 movzx	 ecx, ax
  0037d	89 0d 00 00 00
	00		 mov	 DWORD PTR _MousePosX, ecx

; 2600 :       MousePosY=HIWORD(LParam);

  00383	8b 45 14	 mov	 eax, DWORD PTR _LParam$[ebp]
  00386	c1 e8 10	 shr	 eax, 16			; 00000010H
  00389	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0038e	0f b7 c8	 movzx	 ecx, ax
  00391	89 0d 00 00 00
	00		 mov	 DWORD PTR _MousePosY, ecx

; 2601 :       GetCursorPos(&CurrentCursor);

  00397	8b f4		 mov	 esi, esp
  00399	8d 45 c0	 lea	 eax, DWORD PTR _CurrentCursor$[ebp]
  0039c	50		 push	 eax
  0039d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCursorPos@4
  003a3	3b f4		 cmp	 esi, esp
  003a5	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2602 :       if (ScreenToClient(LIBMANWindow,&CurrentCursor)) {

  003aa	8b f4		 mov	 esi, esp
  003ac	8d 45 c0	 lea	 eax, DWORD PTR _CurrentCursor$[ebp]
  003af	50		 push	 eax
  003b0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  003b6	51		 push	 ecx
  003b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
  003bd	3b f4		 cmp	 esi, esp
  003bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003c4	85 c0		 test	 eax, eax
  003c6	74 13		 je	 SHORT $LN29@LIBMANWinP

; 2603 :         x1=CurrentCursor.x;

  003c8	8b 45 c0	 mov	 eax, DWORD PTR _CurrentCursor$[ebp]
  003cb	89 45 e8	 mov	 DWORD PTR _x1$[ebp], eax

; 2604 :         y1=CurrentCursor.y;

  003ce	8b 45 c4	 mov	 eax, DWORD PTR _CurrentCursor$[ebp+4]
  003d1	89 45 dc	 mov	 DWORD PTR _y1$[ebp], eax

; 2605 :         res=1;

  003d4	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR _res$[ebp], 1
$LN29@LIBMANWinP:

; 2606 :       }
; 2607 :       MouseCount++;

  003db	a1 00 00 00 00	 mov	 eax, DWORD PTR _MouseCount
  003e0	83 c0 01	 add	 eax, 1
  003e3	a3 00 00 00 00	 mov	 DWORD PTR _MouseCount, eax

; 2608 :       res=1;

  003e8	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR _res$[ebp], 1

; 2609 :       break;

  003ef	e9 04 02 00 00	 jmp	 $LN2@LIBMANWinP
$LN30@LIBMANWinP:

; 2610 : /*
; 2611 :     case WM_LBUTTONDBLCLK:
; 2612 :     case WM_LBUTTONDOWN:
; 2613 :       res=1;
; 2614 :       break;
; 2615 :     case WM_LBUTTONUP:
; 2616 :       break;
; 2617 :     case WM_RBUTTONDOWN:
; 2618 :       ok=1;
; 2619 :       break;
; 2620 :     case WM_VKEYTOITEM:
; 2621 :       res=1;
; 2622 :       break;
; 2623 :     case WM_CHARTOITEM:
; 2624 :       res=1;
; 2625 :       break;
; 2626 :     case WM_RBUTTONUP:
; 2627 :       break;
; 2628 :     case WM_SETFOCUS:
; 2629 :       break;
; 2630 :     case WM_KILLFOCUS:
; 2631 :       break;
; 2632 : */
; 2633 :     case WM_TIMER:
; 2634 :       TimerValue++;

  003f4	a1 00 00 00 00	 mov	 eax, DWORD PTR _TimerValue
  003f9	83 c0 01	 add	 eax, 1
  003fc	a3 00 00 00 00	 mov	 DWORD PTR _TimerValue, eax

; 2635 :       break;

  00401	e9 f2 01 00 00	 jmp	 $LN2@LIBMANWinP
$LN31@LIBMANWinP:

; 2636 :     case WM_PARENTNOTIFY:
; 2637 :       x1=LOWORD(LParam);

  00406	8b 45 14	 mov	 eax, DWORD PTR _LParam$[ebp]
  00409	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0040e	0f b7 c8	 movzx	 ecx, ax
  00411	89 4d e8	 mov	 DWORD PTR _x1$[ebp], ecx

; 2638 :       y1=HIWORD(LParam);

  00414	8b 45 14	 mov	 eax, DWORD PTR _LParam$[ebp]
  00417	c1 e8 10	 shr	 eax, 16			; 00000010H
  0041a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0041f	0f b7 c8	 movzx	 ecx, ax
  00422	89 4d dc	 mov	 DWORD PTR _y1$[ebp], ecx

; 2639 :       MousePosX=x1;

  00425	8b 45 e8	 mov	 eax, DWORD PTR _x1$[ebp]
  00428	a3 00 00 00 00	 mov	 DWORD PTR _MousePosX, eax

; 2640 :       MousePosY=y1;

  0042d	8b 45 dc	 mov	 eax, DWORD PTR _y1$[ebp]
  00430	a3 00 00 00 00	 mov	 DWORD PTR _MousePosY, eax

; 2641 :       if (((LOWORD(WParam)) & WM_RBUTTONDOWN) == WM_RBUTTONDOWN) {

  00435	8b 45 10	 mov	 eax, DWORD PTR _WParam$[ebp]
  00438	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0043d	0f b7 c8	 movzx	 ecx, ax
  00440	81 e1 04 02 00
	00		 and	 ecx, 516		; 00000204H
  00446	81 f9 04 02 00
	00		 cmp	 ecx, 516		; 00000204H
  0044c	75 74		 jne	 SHORT $LN32@LIBMANWinP

; 2642 :         if (PointInRectangle(x1,y1,&RectListWindow1)) {

  0044e	68 00 00 00 00	 push	 OFFSET _RectListWindow1
  00453	8b 45 dc	 mov	 eax, DWORD PTR _y1$[ebp]
  00456	50		 push	 eax
  00457	8b 4d e8	 mov	 ecx, DWORD PTR _x1$[ebp]
  0045a	51		 push	 ecx
  0045b	e8 00 00 00 00	 call	 _PointInRectangle
  00460	83 c4 0c	 add	 esp, 12			; 0000000cH
  00463	85 c0		 test	 eax, eax
  00465	74 21		 je	 SHORT $LN33@LIBMANWinP

; 2643 :           PostMessage(LIBMANWindow,WM_COMMAND,(WPARAM)ID_RIGHT_BUTTON_LIST1,(LPARAM)NULL);

  00467	8b f4		 mov	 esi, esp
  00469	6a 00		 push	 0
  0046b	68 4e 08 00 00	 push	 2126			; 0000084eH
  00470	68 11 01 00 00	 push	 273			; 00000111H
  00475	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  0047a	50		 push	 eax
  0047b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16
  00481	3b f4		 cmp	 esi, esp
  00483	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN33@LIBMANWinP:

; 2644 :         }
; 2645 :         if (PointInRectangle(x1,y1,&RectListWindow2)) {

  00488	68 00 00 00 00	 push	 OFFSET _RectListWindow2
  0048d	8b 45 dc	 mov	 eax, DWORD PTR _y1$[ebp]
  00490	50		 push	 eax
  00491	8b 4d e8	 mov	 ecx, DWORD PTR _x1$[ebp]
  00494	51		 push	 ecx
  00495	e8 00 00 00 00	 call	 _PointInRectangle
  0049a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0049d	85 c0		 test	 eax, eax
  0049f	74 21		 je	 SHORT $LN32@LIBMANWinP

; 2646 :           PostMessage(LIBMANWindow,WM_COMMAND,(WPARAM)ID_RIGHT_BUTTON_LIST2,(LPARAM)NULL);

  004a1	8b f4		 mov	 esi, esp
  004a3	6a 00		 push	 0
  004a5	68 4f 08 00 00	 push	 2127			; 0000084fH
  004aa	68 11 01 00 00	 push	 273			; 00000111H
  004af	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  004b4	50		 push	 eax
  004b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16
  004bb	3b f4		 cmp	 esi, esp
  004bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN32@LIBMANWinP:

; 2647 :         }
; 2648 :       }
; 2649 :       res=1;

  004c2	c7 45 d0 01 00
	00 00		 mov	 DWORD PTR _res$[ebp], 1

; 2650 :       break;

  004c9	e9 2a 01 00 00	 jmp	 $LN2@LIBMANWinP
$LN35@LIBMANWinP:

; 2651 :     case WM_CLOSE:
; 2652 :       DestroyWindow(Window);

  004ce	8b f4		 mov	 esi, esp
  004d0	8b 45 08	 mov	 eax, DWORD PTR _Window$[ebp]
  004d3	50		 push	 eax
  004d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DestroyWindow@4
  004da	3b f4		 cmp	 esi, esp
  004dc	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2653 :       return 0;

  004e1	33 c0		 xor	 eax, eax
  004e3	e9 12 01 00 00	 jmp	 $LN1@LIBMANWinP
$LN36@LIBMANWinP:

; 2654 :     case WM_DROPFILES:
; 2655 : //      DragQueryPoint((HANDLE)WParam,&MPoint);
; 2656 :       GetCursorPos(&CurrentCursor);

  004e8	8b f4		 mov	 esi, esp
  004ea	8d 45 c0	 lea	 eax, DWORD PTR _CurrentCursor$[ebp]
  004ed	50		 push	 eax
  004ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCursorPos@4
  004f4	3b f4		 cmp	 esi, esp
  004f6	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2657 :       if (ScreenToClient(LIBMANWindow,&CurrentCursor)) {

  004fb	8b f4		 mov	 esi, esp
  004fd	8d 45 c0	 lea	 eax, DWORD PTR _CurrentCursor$[ebp]
  00500	50		 push	 eax
  00501	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00507	51		 push	 ecx
  00508	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ScreenToClient@8
  0050e	3b f4		 cmp	 esi, esp
  00510	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00515	85 c0		 test	 eax, eax
  00517	0f 84 86 00 00
	00		 je	 $LN37@LIBMANWinP

; 2658 :         x1=CurrentCursor.x;

  0051d	8b 45 c0	 mov	 eax, DWORD PTR _CurrentCursor$[ebp]
  00520	89 45 e8	 mov	 DWORD PTR _x1$[ebp], eax

; 2659 :         y1=CurrentCursor.y;

  00523	8b 45 c4	 mov	 eax, DWORD PTR _CurrentCursor$[ebp+4]
  00526	89 45 dc	 mov	 DWORD PTR _y1$[ebp], eax

; 2660 :         if (PointInRectangle(x1,y1,&RectListWindow1)) {

  00529	68 00 00 00 00	 push	 OFFSET _RectListWindow1
  0052e	8b 45 dc	 mov	 eax, DWORD PTR _y1$[ebp]
  00531	50		 push	 eax
  00532	8b 4d e8	 mov	 ecx, DWORD PTR _x1$[ebp]
  00535	51		 push	 ecx
  00536	e8 00 00 00 00	 call	 _PointInRectangle
  0053b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0053e	85 c0		 test	 eax, eax
  00540	74 24		 je	 SHORT $LN38@LIBMANWinP

; 2661 :           PostMessage(LIBMANWindow,WM_COMMAND,(WPARAM)WM_DROPFILES_LIST1,(LPARAM)WParam);

  00542	8b f4		 mov	 esi, esp
  00544	8b 45 10	 mov	 eax, DWORD PTR _WParam$[ebp]
  00547	50		 push	 eax
  00548	68 52 08 00 00	 push	 2130			; 00000852H
  0054d	68 11 01 00 00	 push	 273			; 00000111H
  00552	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00558	51		 push	 ecx
  00559	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16
  0055f	3b f4		 cmp	 esi, esp
  00561	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN38@LIBMANWinP:

; 2662 :         }
; 2663 :         if (PointInRectangle(x1,y1,&RectListWindow2)) {

  00566	68 00 00 00 00	 push	 OFFSET _RectListWindow2
  0056b	8b 45 dc	 mov	 eax, DWORD PTR _y1$[ebp]
  0056e	50		 push	 eax
  0056f	8b 4d e8	 mov	 ecx, DWORD PTR _x1$[ebp]
  00572	51		 push	 ecx
  00573	e8 00 00 00 00	 call	 _PointInRectangle
  00578	83 c4 0c	 add	 esp, 12			; 0000000cH
  0057b	85 c0		 test	 eax, eax
  0057d	74 24		 je	 SHORT $LN37@LIBMANWinP

; 2664 :           PostMessage(LIBMANWindow,WM_COMMAND,(WPARAM)WM_DROPFILES_LIST2,(LPARAM)WParam);

  0057f	8b f4		 mov	 esi, esp
  00581	8b 45 10	 mov	 eax, DWORD PTR _WParam$[ebp]
  00584	50		 push	 eax
  00585	68 53 08 00 00	 push	 2131			; 00000853H
  0058a	68 11 01 00 00	 push	 273			; 00000111H
  0058f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  00595	51		 push	 ecx
  00596	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16
  0059c	3b f4		 cmp	 esi, esp
  0059e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN37@LIBMANWinP:

; 2665 :         }
; 2666 :       }
; 2667 :       break;

  005a3	eb 53		 jmp	 SHORT $LN2@LIBMANWinP
$LN40@LIBMANWinP:

; 2668 :     case WM_QUIT:
; 2669 :       ok=1;

  005a5	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _ok, 1

; 2670 :       return 0;

  005af	33 c0		 xor	 eax, eax
  005b1	eb 47		 jmp	 SHORT $LN1@LIBMANWinP
$LN41@LIBMANWinP:

; 2671 :     case WM_DESTROY:
; 2672 :       PostQuitMessage(0);

  005b3	8b f4		 mov	 esi, esp
  005b5	6a 00		 push	 0
  005b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
  005bd	3b f4		 cmp	 esi, esp
  005bf	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2673 :       return 0;

  005c4	33 c0		 xor	 eax, eax
  005c6	eb 32		 jmp	 SHORT $LN1@LIBMANWinP
$LN42@LIBMANWinP:

; 2674 :     default:
; 2675 :       if (Message==StartUpMessage) {

  005c8	8b 45 0c	 mov	 eax, DWORD PTR _Message$[ebp]
  005cb	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR _StartUpMessage
  005d1	75 04		 jne	 SHORT $LN43@LIBMANWinP

; 2676 : //        ChangeFile();
; 2677 :         break;

  005d3	eb 23		 jmp	 SHORT $LN2@LIBMANWinP
  005d5	eb 21		 jmp	 SHORT $LN2@LIBMANWinP
$LN43@LIBMANWinP:

; 2678 :       } else return DefWindowProc(Window, Message, WParam, LParam);

  005d7	8b f4		 mov	 esi, esp
  005d9	8b 45 14	 mov	 eax, DWORD PTR _LParam$[ebp]
  005dc	50		 push	 eax
  005dd	8b 4d 10	 mov	 ecx, DWORD PTR _WParam$[ebp]
  005e0	51		 push	 ecx
  005e1	8b 55 0c	 mov	 edx, DWORD PTR _Message$[ebp]
  005e4	52		 push	 edx
  005e5	8b 45 08	 mov	 eax, DWORD PTR _Window$[ebp]
  005e8	50		 push	 eax
  005e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcA@16
  005ef	3b f4		 cmp	 esi, esp
  005f1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005f6	eb 02		 jmp	 SHORT $LN1@LIBMANWinP
$LN2@LIBMANWinP:

; 2679 :   }
; 2680 :   return 0;

  005f8	33 c0		 xor	 eax, eax
$LN1@LIBMANWinP:

; 2681 : }

  005fa	52		 push	 edx
  005fb	8b cd		 mov	 ecx, ebp
  005fd	50		 push	 eax
  005fe	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN53@LIBMANWinP
  00604	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00609	58		 pop	 eax
  0060a	5a		 pop	 edx
  0060b	5f		 pop	 edi
  0060c	5e		 pop	 esi
  0060d	5b		 pop	 ebx
  0060e	81 c4 08 01 00
	00		 add	 esp, 264		; 00000108H
  00614	3b ec		 cmp	 ebp, esp
  00616	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0061b	8b e5		 mov	 esp, ebp
  0061d	5d		 pop	 ebp
  0061e	c2 10 00	 ret	 16			; 00000010H
  00621	0f 1f 00	 npad	 3
$LN53@LIBMANWinP:
  00624	02 00 00 00	 DD	 2
  00628	00 00 00 00	 DD	 $LN52@LIBMANWinP
$LN52@LIBMANWinP:
  0062c	f4 ff ff ff	 DD	 -12			; fffffff4H
  00630	08 00 00 00	 DD	 8
  00634	00 00 00 00	 DD	 $LN50@LIBMANWinP
  00638	c0 ff ff ff	 DD	 -64			; ffffffc0H
  0063c	08 00 00 00	 DD	 8
  00640	00 00 00 00	 DD	 $LN51@LIBMANWinP
$LN51@LIBMANWinP:
  00644	43		 DB	 67			; 00000043H
  00645	75		 DB	 117			; 00000075H
  00646	72		 DB	 114			; 00000072H
  00647	72		 DB	 114			; 00000072H
  00648	65		 DB	 101			; 00000065H
  00649	6e		 DB	 110			; 0000006eH
  0064a	74		 DB	 116			; 00000074H
  0064b	43		 DB	 67			; 00000043H
  0064c	75		 DB	 117			; 00000075H
  0064d	72		 DB	 114			; 00000072H
  0064e	73		 DB	 115			; 00000073H
  0064f	6f		 DB	 111			; 0000006fH
  00650	72		 DB	 114			; 00000072H
  00651	00		 DB	 0
$LN50@LIBMANWinP:
  00652	70		 DB	 112			; 00000070H
  00653	70		 DB	 112			; 00000070H
  00654	00		 DB	 0
  00655	0f 1f 00	 npad	 3
$LN54@LIBMANWinP:
  00658	00 00 00 00	 DD	 $LN22@LIBMANWinP
  0065c	00 00 00 00	 DD	 $LN41@LIBMANWinP
  00660	00 00 00 00	 DD	 $LN27@LIBMANWinP
  00664	00 00 00 00	 DD	 $LN42@LIBMANWinP
  00668	00 00 00 00	 DD	 $LN26@LIBMANWinP
_LIBMANWinProc@16 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _StringConvert
_TEXT	SEGMENT
_str2$ = -1112						; size = 512
_str1$ = -592						; size = 512
_Length$ = -72						; size = 4
_cnt$ = -60						; size = 4
_ParamCount2$ = -48					; size = 4
_ParamCount1$ = -36					; size = 4
_StringCount2$ = -24					; size = 4
_StringCount1$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_Nr$ = 8						; size = 4
_str$ = 12						; size = 4
_StringConvert PROC					; COMDAT

; 209  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 9c 06 00
	00		 sub	 esp, 1692		; 0000069cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 64 f9 ff
	ff		 lea	 edi, DWORD PTR [ebp-1692]
  00012	b9 a7 01 00 00	 mov	 ecx, 423		; 000001a7H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 210  :   int32  StringCount1,StringCount2,ParamCount1,ParamCount2,cnt,Length;
; 211  :   char   str1[MAX_LENGTH_STRING],str2[MAX_LENGTH_STRING];
; 212  : 
; 213  :   if (!str) {

  00028	83 7d 0c 00	 cmp	 DWORD PTR _str$[ebp], 0
  0002c	75 0a		 jne	 SHORT $LN6@StringConv

; 214  :     return "";

  0002e	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
  00033	e9 7e 01 00 00	 jmp	 $LN1@StringConv
$LN6@StringConv:

; 215  :   }
; 216  : 
; 217  :   if ((Nr<0)
; 218  :      ||
; 219  :      (Nr>=MaxNrLibmanNames)
; 220  :      ||

  00038	83 7d 08 00	 cmp	 DWORD PTR _Nr$[ebp], 0
  0003c	7c 16		 jl	 SHORT $LN8@StringConv
  0003e	81 7d 08 00 04
	00 00		 cmp	 DWORD PTR _Nr$[ebp], 1024 ; 00000400H
  00045	7d 0d		 jge	 SHORT $LN8@StringConv
  00047	8b 45 08	 mov	 eax, DWORD PTR _Nr$[ebp]
  0004a	83 3c 85 00 00
	00 00 00	 cmp	 DWORD PTR _LibmanNamesId[eax*4], 0
  00052	75 08		 jne	 SHORT $LN7@StringConv
$LN8@StringConv:

; 221  :      (LibmanNamesId[Nr]==0)) return str;

  00054	8b 45 0c	 mov	 eax, DWORD PTR _str$[ebp]
  00057	e9 5a 01 00 00	 jmp	 $LN1@StringConv
$LN7@StringConv:

; 222  :   strcpy(str1,str);

  0005c	8b 45 0c	 mov	 eax, DWORD PTR _str$[ebp]
  0005f	50		 push	 eax
  00060	8d 8d b0 fd ff
	ff		 lea	 ecx, DWORD PTR _str1$[ebp]
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 _strcpy
  0006c	83 c4 08	 add	 esp, 8

; 223  :   strcpy(str2,LibmanNamesId[Nr]);

  0006f	8b 45 08	 mov	 eax, DWORD PTR _Nr$[ebp]
  00072	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR _LibmanNamesId[eax*4]
  00079	51		 push	 ecx
  0007a	8d 95 a8 fb ff
	ff		 lea	 edx, DWORD PTR _str2$[ebp]
  00080	52		 push	 edx
  00081	e8 00 00 00 00	 call	 _strcpy
  00086	83 c4 08	 add	 esp, 8

; 224  : 
; 225  :   StringCount1=0;

  00089	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _StringCount1$[ebp], 0

; 226  :   ParamCount1=0;

  00090	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _ParamCount1$[ebp], 0

; 227  :   Length=strlen(str1);

  00097	8d 85 b0 fd ff
	ff		 lea	 eax, DWORD PTR _str1$[ebp]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 _strlen
  000a3	83 c4 04	 add	 esp, 4
  000a6	89 45 b8	 mov	 DWORD PTR _Length$[ebp], eax

; 228  :   cnt=0;

  000a9	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _cnt$[ebp], 0
$LN2@StringConv:

; 229  :   while (cnt<Length) {

  000b0	8b 45 c4	 mov	 eax, DWORD PTR _cnt$[ebp]
  000b3	3b 45 b8	 cmp	 eax, DWORD PTR _Length$[ebp]
  000b6	7d 58		 jge	 SHORT $LN3@StringConv

; 230  :     if (str1[cnt]=='%') {

  000b8	8b 45 c4	 mov	 eax, DWORD PTR _cnt$[ebp]
  000bb	0f be 8c 05 b0
	fd ff ff	 movsx	 ecx, BYTE PTR _str1$[ebp+eax]
  000c3	83 f9 25	 cmp	 ecx, 37			; 00000025H
  000c6	75 3d		 jne	 SHORT $LN9@StringConv

; 231  :       if (cnt<Length-1) {

  000c8	8b 45 b8	 mov	 eax, DWORD PTR _Length$[ebp]
  000cb	83 e8 01	 sub	 eax, 1
  000ce	39 45 c4	 cmp	 DWORD PTR _cnt$[ebp], eax
  000d1	7d 32		 jge	 SHORT $LN9@StringConv

; 232  :         if (str1[cnt+1]=='s') {

  000d3	8b 45 c4	 mov	 eax, DWORD PTR _cnt$[ebp]
  000d6	0f be 8c 05 b1
	fd ff ff	 movsx	 ecx, BYTE PTR _str1$[ebp+eax+1]
  000de	83 f9 73	 cmp	 ecx, 115		; 00000073H
  000e1	75 09		 jne	 SHORT $LN11@StringConv

; 233  :           StringCount1++;

  000e3	8b 45 f4	 mov	 eax, DWORD PTR _StringCount1$[ebp]
  000e6	83 c0 01	 add	 eax, 1
  000e9	89 45 f4	 mov	 DWORD PTR _StringCount1$[ebp], eax
$LN11@StringConv:

; 234  :         }
; 235  :         if (str1[cnt+1]!='%') {

  000ec	8b 45 c4	 mov	 eax, DWORD PTR _cnt$[ebp]
  000ef	0f be 8c 05 b1
	fd ff ff	 movsx	 ecx, BYTE PTR _str1$[ebp+eax+1]
  000f7	83 f9 25	 cmp	 ecx, 37			; 00000025H
  000fa	74 09		 je	 SHORT $LN9@StringConv

; 236  :           ParamCount1++;

  000fc	8b 45 dc	 mov	 eax, DWORD PTR _ParamCount1$[ebp]
  000ff	83 c0 01	 add	 eax, 1
  00102	89 45 dc	 mov	 DWORD PTR _ParamCount1$[ebp], eax
$LN9@StringConv:

; 237  :         }
; 238  :       }
; 239  :     }
; 240  :     cnt++;

  00105	8b 45 c4	 mov	 eax, DWORD PTR _cnt$[ebp]
  00108	83 c0 01	 add	 eax, 1
  0010b	89 45 c4	 mov	 DWORD PTR _cnt$[ebp], eax

; 241  :   }

  0010e	eb a0		 jmp	 SHORT $LN2@StringConv
$LN3@StringConv:

; 242  :   StringCount2=0;

  00110	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _StringCount2$[ebp], 0

; 243  :   ParamCount2=0;

  00117	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _ParamCount2$[ebp], 0

; 244  :   Length=strlen(str2);

  0011e	8d 85 a8 fb ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  00124	50		 push	 eax
  00125	e8 00 00 00 00	 call	 _strlen
  0012a	83 c4 04	 add	 esp, 4
  0012d	89 45 b8	 mov	 DWORD PTR _Length$[ebp], eax

; 245  :   cnt=0;

  00130	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _cnt$[ebp], 0
$LN4@StringConv:

; 246  :   while (cnt<Length) {

  00137	8b 45 c4	 mov	 eax, DWORD PTR _cnt$[ebp]
  0013a	3b 45 b8	 cmp	 eax, DWORD PTR _Length$[ebp]
  0013d	7d 58		 jge	 SHORT $LN5@StringConv

; 247  :     if (str2[cnt]=='%') {

  0013f	8b 45 c4	 mov	 eax, DWORD PTR _cnt$[ebp]
  00142	0f be 8c 05 a8
	fb ff ff	 movsx	 ecx, BYTE PTR _str2$[ebp+eax]
  0014a	83 f9 25	 cmp	 ecx, 37			; 00000025H
  0014d	75 3d		 jne	 SHORT $LN13@StringConv

; 248  :       if (cnt<Length-1) {

  0014f	8b 45 b8	 mov	 eax, DWORD PTR _Length$[ebp]
  00152	83 e8 01	 sub	 eax, 1
  00155	39 45 c4	 cmp	 DWORD PTR _cnt$[ebp], eax
  00158	7d 32		 jge	 SHORT $LN13@StringConv

; 249  :         if (str2[cnt+1]=='s') {

  0015a	8b 45 c4	 mov	 eax, DWORD PTR _cnt$[ebp]
  0015d	0f be 8c 05 a9
	fb ff ff	 movsx	 ecx, BYTE PTR _str2$[ebp+eax+1]
  00165	83 f9 73	 cmp	 ecx, 115		; 00000073H
  00168	75 09		 jne	 SHORT $LN15@StringConv

; 250  :           StringCount2++;

  0016a	8b 45 e8	 mov	 eax, DWORD PTR _StringCount2$[ebp]
  0016d	83 c0 01	 add	 eax, 1
  00170	89 45 e8	 mov	 DWORD PTR _StringCount2$[ebp], eax
$LN15@StringConv:

; 251  :         }
; 252  :         if (str2[cnt+1]!='%') {

  00173	8b 45 c4	 mov	 eax, DWORD PTR _cnt$[ebp]
  00176	0f be 8c 05 a9
	fb ff ff	 movsx	 ecx, BYTE PTR _str2$[ebp+eax+1]
  0017e	83 f9 25	 cmp	 ecx, 37			; 00000025H
  00181	74 09		 je	 SHORT $LN13@StringConv

; 253  :           ParamCount2++;

  00183	8b 45 d0	 mov	 eax, DWORD PTR _ParamCount2$[ebp]
  00186	83 c0 01	 add	 eax, 1
  00189	89 45 d0	 mov	 DWORD PTR _ParamCount2$[ebp], eax
$LN13@StringConv:

; 254  :         }
; 255  :       }
; 256  :     }
; 257  :     cnt++;

  0018c	8b 45 c4	 mov	 eax, DWORD PTR _cnt$[ebp]
  0018f	83 c0 01	 add	 eax, 1
  00192	89 45 c4	 mov	 DWORD PTR _cnt$[ebp], eax

; 258  :   }

  00195	eb a0		 jmp	 SHORT $LN4@StringConv
$LN5@StringConv:

; 259  :   if ((ParamCount1!=ParamCount2)
; 260  :      ||

  00197	8b 45 dc	 mov	 eax, DWORD PTR _ParamCount1$[ebp]
  0019a	3b 45 d0	 cmp	 eax, DWORD PTR _ParamCount2$[ebp]
  0019d	75 08		 jne	 SHORT $LN18@StringConv
  0019f	8b 45 f4	 mov	 eax, DWORD PTR _StringCount1$[ebp]
  001a2	3b 45 e8	 cmp	 eax, DWORD PTR _StringCount2$[ebp]
  001a5	74 05		 je	 SHORT $LN17@StringConv
$LN18@StringConv:

; 261  :      (StringCount1!=StringCount2)) {
; 262  : /*
; 263  :     sprintf(str3,SC(0,"Error in string number %d of the language file (Wrong parameters)."),Nr);
; 264  :     strcat(str3,SC(1,"\n\nInstead the english string will be used"));
; 265  :     MessageBox(NULL,str3,SC(2,"System error"),MB_APPLMODAL|MB_OK);
; 266  : */
; 267  :     return str;

  001a7	8b 45 0c	 mov	 eax, DWORD PTR _str$[ebp]
  001aa	eb 0a		 jmp	 SHORT $LN1@StringConv
$LN17@StringConv:

; 268  :   }
; 269  : 
; 270  :   return LibmanNamesId[Nr];

  001ac	8b 45 08	 mov	 eax, DWORD PTR _Nr$[ebp]
  001af	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR _LibmanNamesId[eax*4]
$LN1@StringConv:

; 271  : }

  001b6	52		 push	 edx
  001b7	8b cd		 mov	 ecx, ebp
  001b9	50		 push	 eax
  001ba	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN23@StringConv
  001c0	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001c5	58		 pop	 eax
  001c6	5a		 pop	 edx
  001c7	5f		 pop	 edi
  001c8	5e		 pop	 esi
  001c9	5b		 pop	 ebx
  001ca	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001cd	33 cd		 xor	 ecx, ebp
  001cf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001d4	81 c4 9c 06 00
	00		 add	 esp, 1692		; 0000069cH
  001da	3b ec		 cmp	 ebp, esp
  001dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001e1	8b e5		 mov	 esp, ebp
  001e3	5d		 pop	 ebp
  001e4	c3		 ret	 0
  001e5	0f 1f 00	 npad	 3
$LN23@StringConv:
  001e8	02 00 00 00	 DD	 2
  001ec	00 00 00 00	 DD	 $LN22@StringConv
$LN22@StringConv:
  001f0	b0 fd ff ff	 DD	 -592			; fffffdb0H
  001f4	00 02 00 00	 DD	 512			; 00000200H
  001f8	00 00 00 00	 DD	 $LN20@StringConv
  001fc	a8 fb ff ff	 DD	 -1112			; fffffba8H
  00200	00 02 00 00	 DD	 512			; 00000200H
  00204	00 00 00 00	 DD	 $LN21@StringConv
$LN21@StringConv:
  00208	73		 DB	 115			; 00000073H
  00209	74		 DB	 116			; 00000074H
  0020a	72		 DB	 114			; 00000072H
  0020b	32		 DB	 50			; 00000032H
  0020c	00		 DB	 0
$LN20@StringConv:
  0020d	73		 DB	 115			; 00000073H
  0020e	74		 DB	 116			; 00000074H
  0020f	72		 DB	 114			; 00000072H
  00210	31		 DB	 49			; 00000031H
  00211	00		 DB	 0
_StringConvert ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT _sscanf
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sscanf	PROC						; COMDAT

; 2261 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 2262 :     int _Result;
; 2263 :     va_list _ArgList;
; 2264 :     __crt_va_start(_ArgList, _Format);

  0001e	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00021	89 45 ec	 mov	 DWORD PTR __ArgList$[ebp], eax

; 2265 :     _Result = _vsscanf_l(_Buffer, _Format, NULL, _ArgList);

  00024	8b 45 ec	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00027	50		 push	 eax
  00028	6a 00		 push	 0
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  0002d	51		 push	 ecx
  0002e	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 __vsscanf_l
  00037	83 c4 10	 add	 esp, 16			; 00000010H
  0003a	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 2266 :     __crt_va_end(_ArgList);

  0003d	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 2267 :     return _Result;

  00044	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]

; 2268 : }

  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
_sscanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT __vsscanf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsscanf_l PROC					; COMDAT

; 2166 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 2167 :     return __stdio_common_vsscanf(

  0001e	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00029	52		 push	 edx
  0002a	6a ff		 push	 -1
  0002c	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ___local_stdio_scanf_options
  00035	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00038	51		 push	 ecx
  00039	8b 10		 mov	 edx, DWORD PTR [eax]
  0003b	52		 push	 edx
  0003c	e8 00 00 00 00	 call	 ___stdio_common_vsscanf
  00041	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2168 :         _CRT_INTERNAL_LOCAL_SCANF_OPTIONS,
; 2169 :         _Buffer, (size_t)-1, _Format, _Locale, _ArgList);
; 2170 : }

  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
__vsscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1776 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1777 :     int _Result;
; 1778 :     va_list _ArgList;
; 1779 :     __crt_va_start(_ArgList, _Format);

  0001e	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00021	89 45 ec	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1780 : 
; 1781 :     #pragma warning(push)
; 1782 :     #pragma warning(disable: 4996) // Deprecation
; 1783 :     _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  00024	8b 45 ec	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00027	50		 push	 eax
  00028	6a 00		 push	 0
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  0002d	51		 push	 ecx
  0002e	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 __vsprintf_l
  00037	83 c4 10	 add	 esp, 16			; 00000010H
  0003a	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 1784 :     #pragma warning(pop)
; 1785 : 
; 1786 :     __crt_va_end(_ArgList);

  0003d	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1787 :     return _Result;

  00044	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]

; 1788 : }

  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1455 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1456 :     #pragma warning(push)
; 1457 :     #pragma warning(disable: 4996) // Deprecation
; 1458 :     return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  0001e	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00029	52		 push	 edx
  0002a	6a ff		 push	 -1
  0002c	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 __vsnprintf_l
  00035	83 c4 14	 add	 esp, 20			; 00000014H

; 1459 :     #pragma warning(pop)
; 1460 : }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -208						; size = 4
__Result$ = -8						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1385 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00012	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1386 :     int const _Result = __stdio_common_vsprintf(

  0001e	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00029	52		 push	 edx
  0002a	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  00031	51		 push	 ecx
  00032	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00037	8b 10		 mov	 edx, DWORD PTR [eax]
  00039	83 ca 01	 or	 edx, 1
  0003c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0003f	50		 push	 eax
  00040	52		 push	 edx
  00041	e8 00 00 00 00	 call	 ___stdio_common_vsprintf
  00046	83 c4 1c	 add	 esp, 28			; 0000001cH
  00049	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 1387 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1388 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1389 : 
; 1390 :     return _Result < 0 ? -1 : _Result;

  0004c	83 7d f8 00	 cmp	 DWORD PTR __Result$[ebp], 0
  00050	7d 0c		 jge	 SHORT $LN3@vsnprintf_
  00052	c7 85 30 ff ff
	ff ff ff ff ff	 mov	 DWORD PTR tv74[ebp], -1
  0005c	eb 09		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  0005e	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]
  00061	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  00067	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv74[ebp]

; 1391 : }

  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi
  0006f	5b		 pop	 ebx
  00070	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  00076	3b ec		 cmp	 ebp, esp
  00078	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 83   :     static unsigned __int64 _OptionsStorage;
; 84   :     return &_OptionsStorage;

  0001e	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9 ; `__local_stdio_scanf_options'::`2'::_OptionsStorage

; 85   : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 74   :     static unsigned __int64 _OptionsStorage;
; 75   :     return &_OptionsStorage;

  0001e	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 76   : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\notes\pcbeleg\software\libman\libman.c
;	COMDAT _WinMain@16
_TEXT	SEGMENT
tv213 = -4220						; size = 4
$T1 = -4212						; size = 4
$T2 = -4200						; size = 4
_vendor$ = -2004					; size = 40
_FlagSSE2$ = -1956					; size = 4
_EDX$ = -1944						; size = 4
_ECX$ = -1932						; size = 4
_EBX$ = -1920						; size = 4
_EAX$ = -1908						; size = 4
_FileName$ = -1896					; size = 4
_str3$ = -1884						; size = 600
_str2$ = -1276						; size = 600
_str$ = -668						; size = 600
_res$ = -60						; size = 4
_length$ = -48						; size = 4
_M$ = -36						; size = 28
__$ArrayPad$ = -4					; size = 4
_hInstance$ = 8						; size = 4
_hPrevInstance$ = 12					; size = 4
_lpszCmd$ = 16						; size = 4
_nCmdShow$ = 20						; size = 4
_WinMain@16 PROC					; COMDAT

; 2876 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 7c 10 00 00	 mov	 eax, 4220		; 0000107cH
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	53		 push	 ebx
  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	8d bd 84 ef ff
	ff		 lea	 edi, DWORD PTR [ebp-4220]
  00016	b9 1f 04 00 00	 mov	 ecx, 1055		; 0000041fH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 2877 :   MSG   M;
; 2878 :   int32 length,res;
; 2879 :   char  str[600],str2[600],str3[600],*FileName;
; 2880 :   uint32 EAX,EBX,ECX,EDX,FlagSSE2=0;

  0002c	c7 85 5c f8 ff
	ff 00 00 00 00	 mov	 DWORD PTR _FlagSSE2$[ebp], 0

; 2881 :   char  vendor[40];
; 2882 :   WCHAR Wstr[MAX_LENGTH_STRING];
; 2883 : 
; 2884 :   GetCPUID(0x0, &EAX, &EBX, &ECX, &EDX);

  00036	8d 85 68 f8 ff
	ff		 lea	 eax, DWORD PTR _EDX$[ebp]
  0003c	50		 push	 eax
  0003d	8d 8d 74 f8 ff
	ff		 lea	 ecx, DWORD PTR _ECX$[ebp]
  00043	51		 push	 ecx
  00044	8d 95 80 f8 ff
	ff		 lea	 edx, DWORD PTR _EBX$[ebp]
  0004a	52		 push	 edx
  0004b	8d 85 8c f8 ff
	ff		 lea	 eax, DWORD PTR _EAX$[ebp]
  00051	50		 push	 eax
  00052	6a 00		 push	 0
  00054	e8 00 00 00 00	 call	 _GetCPUID
  00059	83 c4 14	 add	 esp, 20			; 00000014H

; 2885 :   memset(vendor,0,sizeof(vendor));

  0005c	6a 28		 push	 40			; 00000028H
  0005e	6a 00		 push	 0
  00060	8d 85 2c f8 ff
	ff		 lea	 eax, DWORD PTR _vendor$[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 _memset
  0006c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2886 :   memcpy(vendor  , &EBX, 4);

  0006f	6a 04		 push	 4
  00071	8d 85 80 f8 ff
	ff		 lea	 eax, DWORD PTR _EBX$[ebp]
  00077	50		 push	 eax
  00078	8d 8d 2c f8 ff
	ff		 lea	 ecx, DWORD PTR _vendor$[ebp]
  0007e	51		 push	 ecx
  0007f	e8 00 00 00 00	 call	 _memcpy
  00084	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2887 :   memcpy(vendor+4, &EDX, 4);

  00087	6a 04		 push	 4
  00089	8d 85 68 f8 ff
	ff		 lea	 eax, DWORD PTR _EDX$[ebp]
  0008f	50		 push	 eax
  00090	8d 8d 30 f8 ff
	ff		 lea	 ecx, DWORD PTR _vendor$[ebp+4]
  00096	51		 push	 ecx
  00097	e8 00 00 00 00	 call	 _memcpy
  0009c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2888 :   memcpy(vendor+8, &ECX, 4);

  0009f	6a 04		 push	 4
  000a1	8d 85 74 f8 ff
	ff		 lea	 eax, DWORD PTR _ECX$[ebp]
  000a7	50		 push	 eax
  000a8	8d 8d 34 f8 ff
	ff		 lea	 ecx, DWORD PTR _vendor$[ebp+8]
  000ae	51		 push	 ecx
  000af	e8 00 00 00 00	 call	 _memcpy
  000b4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2889 :   GetCPUID(0x80000000, &EAX, &EBX, &ECX, &EDX);

  000b7	8d 85 68 f8 ff
	ff		 lea	 eax, DWORD PTR _EDX$[ebp]
  000bd	50		 push	 eax
  000be	8d 8d 74 f8 ff
	ff		 lea	 ecx, DWORD PTR _ECX$[ebp]
  000c4	51		 push	 ecx
  000c5	8d 95 80 f8 ff
	ff		 lea	 edx, DWORD PTR _EBX$[ebp]
  000cb	52		 push	 edx
  000cc	8d 85 8c f8 ff
	ff		 lea	 eax, DWORD PTR _EAX$[ebp]
  000d2	50		 push	 eax
  000d3	68 00 00 00 80	 push	 -2147483648		; 80000000H
  000d8	e8 00 00 00 00	 call	 _GetCPUID
  000dd	83 c4 14	 add	 esp, 20			; 00000014H

; 2890 :   GetCPUID(0x1, &EAX, &EBX, &ECX, &EDX);

  000e0	8d 85 68 f8 ff
	ff		 lea	 eax, DWORD PTR _EDX$[ebp]
  000e6	50		 push	 eax
  000e7	8d 8d 74 f8 ff
	ff		 lea	 ecx, DWORD PTR _ECX$[ebp]
  000ed	51		 push	 ecx
  000ee	8d 95 80 f8 ff
	ff		 lea	 edx, DWORD PTR _EBX$[ebp]
  000f4	52		 push	 edx
  000f5	8d 85 8c f8 ff
	ff		 lea	 eax, DWORD PTR _EAX$[ebp]
  000fb	50		 push	 eax
  000fc	6a 01		 push	 1
  000fe	e8 00 00 00 00	 call	 _GetCPUID
  00103	83 c4 14	 add	 esp, 20			; 00000014H

; 2891 :   FlagSSE2 = (EDX>>26) & 0x1;

  00106	8b 85 68 f8 ff
	ff		 mov	 eax, DWORD PTR _EDX$[ebp]
  0010c	c1 e8 1a	 shr	 eax, 26			; 0000001aH
  0010f	83 e0 01	 and	 eax, 1
  00112	89 85 5c f8 ff
	ff		 mov	 DWORD PTR _FlagSSE2$[ebp], eax

; 2892 : 
; 2893 :   if (!FlagSSE2) {

  00118	75 24		 jne	 SHORT $LN6@WinMain

; 2894 :     MessageBox(NULL,"This version of the library manager requires a CPU with SSE2 extensions",

  0011a	8b f4		 mov	 esi, esp
  0011c	6a 00		 push	 0
  0011e	68 00 00 00 00	 push	 OFFSET ??_C@_05NAOIJFC@Error?$AA@
  00123	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@HNOCINJG@This?5version?5of?5the?5library?5mana@
  00128	6a 00		 push	 0
  0012a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MessageBoxA@16
  00130	3b f4		 cmp	 esi, esp
  00132	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2895 :                "Error",MB_APPLMODAL|MB_OK);
; 2896 :     return 0;

  00137	33 c0		 xor	 eax, eax
  00139	e9 1c 08 00 00	 jmp	 $LN34@WinMain
$LN6@WinMain:

; 2897 :   }
; 2898 : 
; 2899 :   GetTempPath(150,TempPath);

  0013e	8b f4		 mov	 esi, esp
  00140	68 00 00 00 00	 push	 OFFSET _TempPath
  00145	68 96 00 00 00	 push	 150			; 00000096H
  0014a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTempPathA@8
  00150	3b f4		 cmp	 esi, esp
  00152	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2900 :   length=strlen(TempPath);

  00157	68 00 00 00 00	 push	 OFFSET _TempPath
  0015c	e8 00 00 00 00	 call	 _strlen
  00161	83 c4 04	 add	 esp, 4
  00164	89 45 d0	 mov	 DWORD PTR _length$[ebp], eax

; 2901 :   if (TempPath[length-1]=='\\') TempPath[length-1]=0;

  00167	8b 45 d0	 mov	 eax, DWORD PTR _length$[ebp]
  0016a	0f be 88 ff ff
	ff ff		 movsx	 ecx, BYTE PTR _TempPath[eax-1]
  00171	83 f9 5c	 cmp	 ecx, 92			; 0000005cH
  00174	75 2c		 jne	 SHORT $LN7@WinMain
  00176	8b 45 d0	 mov	 eax, DWORD PTR _length$[ebp]
  00179	83 e8 01	 sub	 eax, 1
  0017c	89 85 98 ef ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  00182	81 bd 98 ef ff
	ff 00 02 00 00	 cmp	 DWORD PTR $T2[ebp], 512	; 00000200H
  0018c	73 02		 jae	 SHORT $LN35@WinMain
  0018e	eb 05		 jmp	 SHORT $LN36@WinMain
$LN35@WinMain:
  00190	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN36@WinMain:
  00195	8b 8d 98 ef ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  0019b	c6 81 00 00 00
	00 00		 mov	 BYTE PTR _TempPath[ecx], 0
$LN7@WinMain:

; 2902 : 
; 2903 :   strcpy(str,GetCommandLine());

  001a2	8b f4		 mov	 esi, esp
  001a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCommandLineA@0
  001aa	3b f4		 cmp	 esi, esp
  001ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b1	50		 push	 eax
  001b2	8d 85 64 fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  001b8	50		 push	 eax
  001b9	e8 00 00 00 00	 call	 _strcpy
  001be	83 c4 08	 add	 esp, 8

; 2904 :   if (str[0]!='"') {

  001c1	b8 01 00 00 00	 mov	 eax, 1
  001c6	6b c8 00	 imul	 ecx, eax, 0
  001c9	0f be 94 0d 64
	fd ff ff	 movsx	 edx, BYTE PTR _str$[ebp+ecx]
  001d1	83 fa 22	 cmp	 edx, 34			; 00000022H
  001d4	74 18		 je	 SHORT $LN8@WinMain

; 2905 :     GetString(str,str2);

  001d6	8d 85 04 fb ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  001dc	50		 push	 eax
  001dd	8d 8d 64 fd ff
	ff		 lea	 ecx, DWORD PTR _str$[ebp]
  001e3	51		 push	 ecx
  001e4	e8 00 00 00 00	 call	 _GetString
  001e9	83 c4 08	 add	 esp, 8

; 2906 :   } else {

  001ec	eb 16		 jmp	 SHORT $LN9@WinMain
$LN8@WinMain:

; 2907 :     GetQuoteString(str,str2);

  001ee	8d 85 04 fb ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  001f4	50		 push	 eax
  001f5	8d 8d 64 fd ff
	ff		 lea	 ecx, DWORD PTR _str$[ebp]
  001fb	51		 push	 ecx
  001fc	e8 00 00 00 00	 call	 _GetQuoteString
  00201	83 c4 08	 add	 esp, 8
$LN9@WinMain:

; 2908 :   }
; 2909 :   strcpy(str3,str2);

  00204	8d 85 04 fb ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  0020a	50		 push	 eax
  0020b	8d 8d a4 f8 ff
	ff		 lea	 ecx, DWORD PTR _str3$[ebp]
  00211	51		 push	 ecx
  00212	e8 00 00 00 00	 call	 _strcpy
  00217	83 c4 08	 add	 esp, 8

; 2910 :   if (str3[0]!=0) {

  0021a	b8 01 00 00 00	 mov	 eax, 1
  0021f	6b c8 00	 imul	 ecx, eax, 0
  00222	0f be 94 0d a4
	f8 ff ff	 movsx	 edx, BYTE PTR _str3$[ebp+ecx]
  0022a	85 d2		 test	 edx, edx
  0022c	74 29		 je	 SHORT $LN10@WinMain

; 2911 :     GetFullPathName(str3,250,str2,&FileName);

  0022e	8b f4		 mov	 esi, esp
  00230	8d 85 98 f8 ff
	ff		 lea	 eax, DWORD PTR _FileName$[ebp]
  00236	50		 push	 eax
  00237	8d 8d 04 fb ff
	ff		 lea	 ecx, DWORD PTR _str2$[ebp]
  0023d	51		 push	 ecx
  0023e	68 fa 00 00 00	 push	 250			; 000000faH
  00243	8d 95 a4 f8 ff
	ff		 lea	 edx, DWORD PTR _str3$[ebp]
  00249	52		 push	 edx
  0024a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetFullPathNameA@16
  00250	3b f4		 cmp	 esi, esp
  00252	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN10@WinMain:

; 2912 :   }
; 2913 :   GetLongPathNameA(str2,str2,250);

  00257	8b f4		 mov	 esi, esp
  00259	68 fa 00 00 00	 push	 250			; 000000faH
  0025e	8d 85 04 fb ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  00264	50		 push	 eax
  00265	8d 8d 04 fb ff
	ff		 lea	 ecx, DWORD PTR _str2$[ebp]
  0026b	51		 push	 ecx
  0026c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLongPathNameA@12
  00272	3b f4		 cmp	 esi, esp
  00274	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2914 :   GetDirFromFileName(ExecutableDir,str2);

  00279	8d 85 04 fb ff
	ff		 lea	 eax, DWORD PTR _str2$[ebp]
  0027f	50		 push	 eax
  00280	68 00 00 00 00	 push	 OFFSET _ExecutableDir
  00285	e8 00 00 00 00	 call	 _GetDirFromFileName
  0028a	83 c4 08	 add	 esp, 8

; 2915 : 
; 2916 :   WindowWidth=ListWindowWidth*2+ButtonSizeX+65;

  0028d	a1 00 00 00 00	 mov	 eax, DWORD PTR _ListWindowWidth
  00292	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _ButtonSizeX
  00298	8d 54 41 41	 lea	 edx, DWORD PTR [ecx+eax*2+65]
  0029c	89 15 00 00 00
	00		 mov	 DWORD PTR _WindowWidth, edx

; 2917 : //  WindowWidth=805;
; 2918 :   WindowHeigth=550;

  002a2	c7 05 00 00 00
	00 26 02 00 00	 mov	 DWORD PTR _WindowHeigth, 550 ; 00000226H

; 2919 :   Buf=malloc(BufSize);

  002ac	68 00 00 04 00	 push	 262144			; 00040000H
  002b1	e8 00 00 00 00	 call	 _malloc
  002b6	83 c4 04	 add	 esp, 4
  002b9	a3 00 00 00 00	 mov	 DWORD PTR _Buf, eax

; 2920 :   if ( hPrevInstance == 0 ) {

  002be	83 7d 0c 00	 cmp	 DWORD PTR _hPrevInstance$[ebp], 0
  002c2	0f 85 b7 00 00
	00		 jne	 $LN11@WinMain

; 2921 :     LIBMANClass.style = CS_HREDRAW | CS_VREDRAW;

  002c8	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR _LIBMANClass, 3

; 2922 :     LIBMANClass.lpfnWndProc=(WNDPROC)LIBMANWinProc;

  002d2	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR _LIBMANClass+4, OFFSET _LIBMANWinProc@16

; 2923 :     LIBMANClass.cbClsExtra=0;

  002dc	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR _LIBMANClass+8, 0

; 2924 :     LIBMANClass.cbWndExtra=0;

  002e6	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR _LIBMANClass+12, 0

; 2925 :     LIBMANClass.hInstance = hInstance;

  002f0	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  002f3	a3 10 00 00 00	 mov	 DWORD PTR _LIBMANClass+16, eax

; 2926 :     LIBMANClass.hIcon = LoadIcon(hInstance, MAKEINTRESOURCE(ICON1_1));

  002f8	8b f4		 mov	 esi, esp
  002fa	68 a4 06 00 00	 push	 1700			; 000006a4H
  002ff	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00302	50		 push	 eax
  00303	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadIconA@8
  00309	3b f4		 cmp	 esi, esp
  0030b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00310	a3 14 00 00 00	 mov	 DWORD PTR _LIBMANClass+20, eax

; 2927 :     LIBMANClass.hCursor = LoadCursor(0, IDC_ARROW);

  00315	8b f4		 mov	 esi, esp
  00317	68 00 7f 00 00	 push	 32512			; 00007f00H
  0031c	6a 00		 push	 0
  0031e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00324	3b f4		 cmp	 esi, esp
  00326	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0032b	a3 18 00 00 00	 mov	 DWORD PTR _LIBMANClass+24, eax

; 2928 :     LIBMANClass.hbrBackground = GetStockObject(BLACK_BRUSH);

  00330	8b f4		 mov	 esi, esp
  00332	6a 04		 push	 4
  00334	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetStockObject@4
  0033a	3b f4		 cmp	 esi, esp
  0033c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00341	a3 1c 00 00 00	 mov	 DWORD PTR _LIBMANClass+28, eax

; 2929 : //    LIBMANClass.hbrBackground = COLOR_APPWORKSPACE+1;
; 2930 :     LIBMANClass.lpszMenuName= MAKEINTRESOURCE(IDR_MENU1);

  00346	c7 05 20 00 00
	00 40 06 00 00	 mov	 DWORD PTR _LIBMANClass+32, 1600 ; 00000640H

; 2931 :     LIBMANClass.lpszClassName="LIBMAN";

  00350	c7 05 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR _LIBMANClass+36, OFFSET ??_C@_06JNIAGKJN@LIBMAN?$AA@

; 2932 :     if ( ! RegisterClass(&LIBMANClass) ) exit(255);

  0035a	8b f4		 mov	 esi, esp
  0035c	68 00 00 00 00	 push	 OFFSET _LIBMANClass
  00361	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterClassA@4
  00367	3b f4		 cmp	 esi, esp
  00369	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0036e	0f b7 c0	 movzx	 eax, ax
  00371	85 c0		 test	 eax, eax
  00373	75 0a		 jne	 SHORT $LN11@WinMain
  00375	68 ff 00 00 00	 push	 255			; 000000ffH
  0037a	e8 00 00 00 00	 call	 _exit
$LN11@WinMain:

; 2933 :   }
; 2934 : 
; 2935 :   ClipCursor(NULL);

  0037f	8b f4		 mov	 esi, esp
  00381	6a 00		 push	 0
  00383	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ClipCursor@4
  00389	3b f4		 cmp	 esi, esp
  0038b	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2936 : 
; 2937 :   BlackPen      = CreatePen(PS_SOLID,1,RGB_Black);

  00390	8b f4		 mov	 esi, esp
  00392	6a 00		 push	 0
  00394	6a 01		 push	 1
  00396	6a 00		 push	 0
  00398	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreatePen@12
  0039e	3b f4		 cmp	 esi, esp
  003a0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003a5	a3 00 00 00 00	 mov	 DWORD PTR _BlackPen, eax

; 2938 :   GrayPen       = CreatePen(PS_SOLID,1,RGB_Gray);

  003aa	8b f4		 mov	 esi, esp
  003ac	68 80 80 80 00	 push	 8421504			; 00808080H
  003b1	6a 01		 push	 1
  003b3	6a 00		 push	 0
  003b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreatePen@12
  003bb	3b f4		 cmp	 esi, esp
  003bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003c2	a3 00 00 00 00	 mov	 DWORD PTR _GrayPen, eax

; 2939 :   LightGrayPen  = CreatePen(PS_SOLID,1,RGB_LightGray);

  003c7	8b f4		 mov	 esi, esp
  003c9	68 c0 c0 c0 00	 push	 12632256		; 00c0c0c0H
  003ce	6a 01		 push	 1
  003d0	6a 00		 push	 0
  003d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreatePen@12
  003d8	3b f4		 cmp	 esi, esp
  003da	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003df	a3 00 00 00 00	 mov	 DWORD PTR _LightGrayPen, eax

; 2940 :   WhitePen      = CreatePen(PS_SOLID,1,RGB_White);

  003e4	8b f4		 mov	 esi, esp
  003e6	68 ff ff ff 00	 push	 16777215		; 00ffffffH
  003eb	6a 01		 push	 1
  003ed	6a 00		 push	 0
  003ef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreatePen@12
  003f5	3b f4		 cmp	 esi, esp
  003f7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003fc	a3 00 00 00 00	 mov	 DWORD PTR _WhitePen, eax

; 2941 :   EmptyPen      = CreatePen(PS_NULL,0,0);

  00401	8b f4		 mov	 esi, esp
  00403	6a 00		 push	 0
  00405	6a 00		 push	 0
  00407	6a 05		 push	 5
  00409	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreatePen@12
  0040f	3b f4		 cmp	 esi, esp
  00411	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00416	a3 00 00 00 00	 mov	 DWORD PTR _EmptyPen, eax

; 2942 : 
; 2943 :   OSInfo.dwOSVersionInfoSize=sizeof(OSVERSIONINFO);

  0041b	c7 05 00 00 00
	00 94 00 00 00	 mov	 DWORD PTR _OSInfo, 148	; 00000094H

; 2944 :   GetVersionEx(&OSInfo);

  00425	8b f4		 mov	 esi, esp
  00427	68 00 00 00 00	 push	 OFFSET _OSInfo
  0042c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersionExA@4
  00432	3b f4		 cmp	 esi, esp
  00434	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2945 :   switch (OSInfo.dwPlatformId) {

  00439	a1 10 00 00 00	 mov	 eax, DWORD PTR _OSInfo+16
  0043e	89 85 84 ef ff
	ff		 mov	 DWORD PTR tv213[ebp], eax
  00444	83 bd 84 ef ff
	ff 00		 cmp	 DWORD PTR tv213[ebp], 0
  0044b	74 2c		 je	 SHORT $LN15@WinMain
  0044d	83 bd 84 ef ff
	ff 01		 cmp	 DWORD PTR tv213[ebp], 1
  00454	74 17		 je	 SHORT $LN14@WinMain
  00456	83 bd 84 ef ff
	ff 02		 cmp	 DWORD PTR tv213[ebp], 2
  0045d	74 02		 je	 SHORT $LN13@WinMain
  0045f	eb 22		 jmp	 SHORT $LN2@WinMain
$LN13@WinMain:

; 2946 :     case VER_PLATFORM_WIN32_NT:
; 2947 :       OperatingSystem=VER_PLATFORM_WIN32_NT;

  00461	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR _OperatingSystem, 2

; 2948 :       break;

  0046b	eb 16		 jmp	 SHORT $LN2@WinMain
$LN14@WinMain:

; 2949 :     case VER_PLATFORM_WIN32_WINDOWS:
; 2950 :       OperatingSystem=VER_PLATFORM_WIN32_WINDOWS;

  0046d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _OperatingSystem, 1

; 2951 :       break;

  00477	eb 0a		 jmp	 SHORT $LN2@WinMain
$LN15@WinMain:

; 2952 :     case VER_PLATFORM_WIN32s:
; 2953 :       OperatingSystem=VER_PLATFORM_WIN32_WINDOWS;

  00479	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _OperatingSystem, 1
$LN2@WinMain:

; 2954 :       break;
; 2955 :   }
; 2956 : 
; 2957 : 
; 2958 :   OkToUseSharedMemory=0;

  00483	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _OkToUseSharedMemory, 0

; 2959 :   if ((SharedMemoryHandle = OpenFileMapping(FILE_MAP_WRITE,0,MEMORYMAPPEDSTRING))) {

  0048d	8b f4		 mov	 esi, esp
  0048f	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HIBAEOJ@MMFILE_PCB_ELEGANCE?$AA@
  00494	6a 00		 push	 0
  00496	6a 02		 push	 2
  00498	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OpenFileMappingA@12
  0049e	3b f4		 cmp	 esi, esp
  004a0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004a5	a3 00 00 00 00	 mov	 DWORD PTR _SharedMemoryHandle, eax
  004aa	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _SharedMemoryHandle, 0
  004b1	74 4c		 je	 SHORT $LN16@WinMain

; 2960 : // The memory mapped file has already been created by another applicatoin (Design manager)
; 2961 :     SharedMemory=(BYTE *)MapViewOfFile(SharedMemoryHandle,FILE_MAP_ALL_ACCESS,0,0,0);

  004b3	8b f4		 mov	 esi, esp
  004b5	6a 00		 push	 0
  004b7	6a 00		 push	 0
  004b9	6a 00		 push	 0
  004bb	68 1f 00 0f 00	 push	 983071			; 000f001fH
  004c0	a1 00 00 00 00	 mov	 eax, DWORD PTR _SharedMemoryHandle
  004c5	50		 push	 eax
  004c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MapViewOfFile@20
  004cc	3b f4		 cmp	 esi, esp
  004ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004d3	a3 00 00 00 00	 mov	 DWORD PTR _SharedMemory, eax

; 2962 :     if (SharedMemory!=NULL) {

  004d8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _SharedMemory, 0
  004df	74 14		 je	 SHORT $LN17@WinMain

; 2963 :       OkToUseSharedMemory=1;

  004e1	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _OkToUseSharedMemory, 1

; 2964 :       ProjectInfo=(ProjectInfoRecord *)SharedMemory;

  004eb	a1 00 00 00 00	 mov	 eax, DWORD PTR _SharedMemory
  004f0	a3 00 00 00 00	 mov	 DWORD PTR _ProjectInfo, eax
$LN17@WinMain:

; 2965 :     }
; 2966 :     ok=1;

  004f5	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _ok, 1
$LN16@WinMain:

; 2967 :   }
; 2968 : //  ToetsMain();
; 2969 :   AllocateMemTemp(32768);

  004ff	68 00 80 00 00	 push	 32768			; 00008000H
  00504	e8 00 00 00 00	 call	 _AllocateMemTemp
  00509	83 c4 04	 add	 esp, 4

; 2970 :   GetCurrentDirectoryUTF8(200,EditPath);

  0050c	68 00 00 00 00	 push	 OFFSET _EditPath
  00511	68 c8 00 00 00	 push	 200			; 000000c8H
  00516	e8 00 00 00 00	 call	 _GetCurrentDirectoryUTF8
  0051b	83 c4 08	 add	 esp, 8

; 2971 :   ExportDir[0]=0;

  0051e	b8 01 00 00 00	 mov	 eax, 1
  00523	6b c8 00	 imul	 ecx, eax, 0
  00526	89 8d 8c ef ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  0052c	81 bd 8c ef ff
	ff 00 02 00 00	 cmp	 DWORD PTR $T1[ebp], 512	; 00000200H
  00536	73 02		 jae	 SHORT $LN37@WinMain
  00538	eb 05		 jmp	 SHORT $LN38@WinMain
$LN37@WinMain:
  0053a	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN38@WinMain:
  0053f	8b 95 8c ef ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00545	c6 82 00 00 00
	00 00		 mov	 BYTE PTR _ExportDir[edx], 0

; 2972 :   memset(&ExportDir,0,sizeof(ExportDir));

  0054c	68 00 02 00 00	 push	 512			; 00000200H
  00551	6a 00		 push	 0
  00553	68 00 00 00 00	 push	 OFFSET _ExportDir
  00558	e8 00 00 00 00	 call	 _memset
  0055d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2973 :   memset(&LibraryFile,0,sizeof(LibraryFile));

  00560	68 00 04 00 00	 push	 1024			; 00000400H
  00565	6a 00		 push	 0
  00567	68 00 00 00 00	 push	 OFFSET _LibraryFile
  0056c	e8 00 00 00 00	 call	 _memset
  00571	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2974 :   GetParameters(lpszCmd);

  00574	8b 45 10	 mov	 eax, DWORD PTR _lpszCmd$[ebp]
  00577	50		 push	 eax
  00578	e8 00 00 00 00	 call	 _GetParameters
  0057d	83 c4 04	 add	 esp, 4

; 2975 :   DecodeParameters(lpszCmd);

  00580	8b 45 10	 mov	 eax, DWORD PTR _lpszCmd$[ebp]
  00583	50		 push	 eax
  00584	e8 00 00 00 00	 call	 _DecodeParameters
  00589	83 c4 04	 add	 esp, 4

; 2976 :   if (ExePath[0]!=0) {

  0058c	b8 01 00 00 00	 mov	 eax, 1
  00591	6b c8 00	 imul	 ecx, eax, 0
  00594	0f be 91 00 00
	00 00		 movsx	 edx, BYTE PTR _ExePath[ecx]
  0059b	85 d2		 test	 edx, edx
  0059d	74 1b		 je	 SHORT $LN18@WinMain

; 2977 :     sprintf(str,"%s\\LanguageLibman.txt",ExePath);

  0059f	68 00 00 00 00	 push	 OFFSET _ExePath
  005a4	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@CJLLMCAF@?$CFs?2LanguageLibman?4txt?$AA@
  005a9	8d 85 64 fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  005af	50		 push	 eax
  005b0	e8 00 00 00 00	 call	 _sprintf
  005b5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2978 :   } else {

  005b8	eb 19		 jmp	 SHORT $LN19@WinMain
$LN18@WinMain:

; 2979 :     sprintf(str,"%s\\LanguageLibman.txt",ExecutableDir);

  005ba	68 00 00 00 00	 push	 OFFSET _ExecutableDir
  005bf	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@CJLLMCAF@?$CFs?2LanguageLibman?4txt?$AA@
  005c4	8d 85 64 fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  005ca	50		 push	 eax
  005cb	e8 00 00 00 00	 call	 _sprintf
  005d0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN19@WinMain:

; 2980 :   }
; 2981 :   if (AddLibmanLanguageStrings(str)==-2) return -1;

  005d3	8d 85 64 fd ff
	ff		 lea	 eax, DWORD PTR _str$[ebp]
  005d9	50		 push	 eax
  005da	e8 00 00 00 00	 call	 _AddLibmanLanguageStrings
  005df	83 c4 04	 add	 esp, 4
  005e2	83 f8 fe	 cmp	 eax, -2			; fffffffeH
  005e5	75 08		 jne	 SHORT $LN20@WinMain
  005e7	83 c8 ff	 or	 eax, -1
  005ea	e9 6b 03 00 00	 jmp	 $LN34@WinMain
$LN20@WinMain:

; 2982 :   if (ExePath[0]==0) {

  005ef	b8 01 00 00 00	 mov	 eax, 1
  005f4	6b c8 00	 imul	 ecx, eax, 0
  005f7	0f be 91 00 00
	00 00		 movsx	 edx, BYTE PTR _ExePath[ecx]
  005fe	85 d2		 test	 edx, edx
  00600	75 29		 jne	 SHORT $LN21@WinMain

; 2983 :     strcpy(DefaultLibraryPath,EditPath);

  00602	68 00 00 00 00	 push	 OFFSET _EditPath
  00607	68 00 00 00 00	 push	 OFFSET _DefaultLibraryPath
  0060c	e8 00 00 00 00	 call	 _strcpy
  00611	83 c4 08	 add	 esp, 8

; 2984 :     strcpy(ExePath,EditPath);

  00614	68 00 00 00 00	 push	 OFFSET _EditPath
  00619	68 00 00 00 00	 push	 OFFSET _ExePath
  0061e	e8 00 00 00 00	 call	 _strcpy
  00623	83 c4 08	 add	 esp, 8

; 2985 :   } else {

  00626	e9 9f 00 00 00	 jmp	 $LN22@WinMain
$LN21@WinMain:

; 2986 :     if (ProjectPath[0]==0) {

  0062b	b8 01 00 00 00	 mov	 eax, 1
  00630	6b c8 00	 imul	 ecx, eax, 0
  00633	0f be 91 00 00
	00 00		 movsx	 edx, BYTE PTR _ProjectPath[ecx]
  0063a	85 d2		 test	 edx, edx
  0063c	75 12		 jne	 SHORT $LN23@WinMain

; 2987 :       strcpy(ProjectPath,ExePath);

  0063e	68 00 00 00 00	 push	 OFFSET _ExePath
  00643	68 00 00 00 00	 push	 OFFSET _ProjectPath
  00648	e8 00 00 00 00	 call	 _strcpy
  0064d	83 c4 08	 add	 esp, 8
$LN23@WinMain:

; 2988 :     }
; 2989 :     if (DefaultLibraryPath[0]==0) {

  00650	b8 01 00 00 00	 mov	 eax, 1
  00655	6b c8 00	 imul	 ecx, eax, 0
  00658	0f be 91 00 00
	00 00		 movsx	 edx, BYTE PTR _DefaultLibraryPath[ecx]
  0065f	85 d2		 test	 edx, edx
  00661	75 67		 jne	 SHORT $LN22@WinMain

; 2990 :       if (LibraryMode==0) {

  00663	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  0066a	75 30		 jne	 SHORT $LN25@WinMain

; 2991 :         sprintf(DefaultLibraryPath,"%s\\lib",ProjectPath);

  0066c	68 00 00 00 00	 push	 OFFSET _ProjectPath
  00671	68 00 00 00 00	 push	 OFFSET ??_C@_06OOHONKCO@?$CFs?2lib?$AA@
  00676	68 00 00 00 00	 push	 OFFSET _DefaultLibraryPath
  0067b	e8 00 00 00 00	 call	 _sprintf
  00680	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2992 :         sprintf(DefaultSymbolPath,"%s\\sym",ProjectPath);

  00683	68 00 00 00 00	 push	 OFFSET _ProjectPath
  00688	68 00 00 00 00	 push	 OFFSET ??_C@_06HNLKCCFI@?$CFs?2sym?$AA@
  0068d	68 00 00 00 00	 push	 OFFSET _DefaultSymbolPath
  00692	e8 00 00 00 00	 call	 _sprintf
  00697	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2993 :       } else {

  0069a	eb 2e		 jmp	 SHORT $LN22@WinMain
$LN25@WinMain:

; 2994 :         sprintf(DefaultLibraryPath,"%s\\shplib",ProjectPath);

  0069c	68 00 00 00 00	 push	 OFFSET _ProjectPath
  006a1	68 00 00 00 00	 push	 OFFSET ??_C@_09NPGOFAPL@?$CFs?2shplib?$AA@
  006a6	68 00 00 00 00	 push	 OFFSET _DefaultLibraryPath
  006ab	e8 00 00 00 00	 call	 _sprintf
  006b0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2995 :         sprintf(DefaultSymbolPath,"%s\\shapes",ProjectPath);

  006b3	68 00 00 00 00	 push	 OFFSET _ProjectPath
  006b8	68 00 00 00 00	 push	 OFFSET ??_C@_09MCOCNMJK@?$CFs?2shapes?$AA@
  006bd	68 00 00 00 00	 push	 OFFSET _DefaultSymbolPath
  006c2	e8 00 00 00 00	 call	 _sprintf
  006c7	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN22@WinMain:

; 2996 :       }
; 2997 :     }
; 2998 :   }
; 2999 :   if (LibraryMode==0) {

  006ca	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  006d1	75 19		 jne	 SHORT $LN27@WinMain

; 3000 :     sprintf(SymbolImportDir,"%s\\sym",ExePath);

  006d3	68 00 00 00 00	 push	 OFFSET _ExePath
  006d8	68 00 00 00 00	 push	 OFFSET ??_C@_06HNLKCCFI@?$CFs?2sym?$AA@
  006dd	68 00 00 00 00	 push	 OFFSET _SymbolImportDir
  006e2	e8 00 00 00 00	 call	 _sprintf
  006e7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3001 :   } else {

  006ea	eb 17		 jmp	 SHORT $LN28@WinMain
$LN27@WinMain:

; 3002 :     sprintf(SymbolImportDir,"%s\\shapes",ExePath);

  006ec	68 00 00 00 00	 push	 OFFSET _ExePath
  006f1	68 00 00 00 00	 push	 OFFSET ??_C@_09MCOCNMJK@?$CFs?2shapes?$AA@
  006f6	68 00 00 00 00	 push	 OFFSET _SymbolImportDir
  006fb	e8 00 00 00 00	 call	 _sprintf
  00700	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN28@WinMain:

; 3003 :   }
; 3004 : 
; 3005 : //  Utf8ToUnicode("Mibrary manager geometries_ä_Диап_поломки",Wstr,200);
; 3006 : 
; 3007 : //  Utf8ToUnicode("Mibrary manager geometries_ä_Диап_поломкиend_śč",Wstr,200);
; 3008 :   ScreenSizeX=GetSystemMetrics(SM_CXMAXIMIZED)-10;

  00703	8b f4		 mov	 esi, esp
  00705	6a 3d		 push	 61			; 0000003dH
  00707	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  0070d	3b f4		 cmp	 esi, esp
  0070f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00714	83 e8 0a	 sub	 eax, 10			; 0000000aH
  00717	a3 00 00 00 00	 mov	 DWORD PTR _ScreenSizeX, eax

; 3009 :   ScreenSizeY=GetSystemMetrics(SM_CYMAXIMIZED)-10;

  0071c	8b f4		 mov	 esi, esp
  0071e	6a 3e		 push	 62			; 0000003eH
  00720	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemMetrics@4
  00726	3b f4		 cmp	 esi, esp
  00728	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0072d	83 e8 0a	 sub	 eax, 10			; 0000000aH
  00730	a3 00 00 00 00	 mov	 DWORD PTR _ScreenSizeY, eax

; 3010 :   WindowStartX=(ScreenSizeX-WindowWidth)/2;

  00735	a1 00 00 00 00	 mov	 eax, DWORD PTR _ScreenSizeX
  0073a	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR _WindowWidth
  00740	99		 cdq
  00741	2b c2		 sub	 eax, edx
  00743	d1 f8		 sar	 eax, 1
  00745	a3 00 00 00 00	 mov	 DWORD PTR _WindowStartX, eax

; 3011 :   WindowStartY=(ScreenSizeY-WindowHeigth)/2;

  0074a	a1 00 00 00 00	 mov	 eax, DWORD PTR _ScreenSizeY
  0074f	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR _WindowHeigth
  00755	99		 cdq
  00756	2b c2		 sub	 eax, edx
  00758	d1 f8		 sar	 eax, 1
  0075a	a3 00 00 00 00	 mov	 DWORD PTR _WindowStartY, eax

; 3012 :   GetStockObject(DEFAULT_GUI_FONT);

  0075f	8b f4		 mov	 esi, esp
  00761	6a 11		 push	 17			; 00000011H
  00763	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetStockObject@4
  00769	3b f4		 cmp	 esi, esp
  0076b	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 3013 : #if 1
; 3014 :   NewFont=CreateFont(16,0,0,0,0,0,0,0,0,DEFAULT_CHARSET,OUT_DEFAULT_PRECIS,

  00770	8b f4		 mov	 esi, esp
  00772	68 00 00 00 00	 push	 OFFSET ??_C@_05MPFIAJAP@Arial?$AA@
  00777	6a 00		 push	 0
  00779	6a 00		 push	 0
  0077b	6a 00		 push	 0
  0077d	6a 01		 push	 1
  0077f	6a 00		 push	 0
  00781	6a 00		 push	 0
  00783	6a 00		 push	 0
  00785	6a 00		 push	 0
  00787	6a 00		 push	 0
  00789	6a 00		 push	 0
  0078b	6a 00		 push	 0
  0078d	6a 00		 push	 0
  0078f	6a 10		 push	 16			; 00000010H
  00791	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFontA@56
  00797	3b f4		 cmp	 esi, esp
  00799	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0079e	a3 00 00 00 00	 mov	 DWORD PTR _NewFont, eax

; 3015 :                      CLIP_DEFAULT_PRECIS,DEFAULT_QUALITY,"Arial");
; 3016 : #else
; 3017 :   NewFont=CreateFont(-1,0,0,0,0,0,0,0,0,DEFAULT_CHARSET,OUT_DEFAULT_PRECIS,
; 3018 :                      CLIP_DEFAULT_PRECIS,DEFAULT_QUALITY,"MS Sans Serif");
; 3019 : #endif
; 3020 :   LIBMANWindow = CreateWindowExW(0,L"LIBMAN",

  007a3	8b f4		 mov	 esi, esp
  007a5	6a 00		 push	 0
  007a7	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  007aa	50		 push	 eax
  007ab	6a 00		 push	 0
  007ad	6a 00		 push	 0
  007af	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _WindowHeigth
  007b5	51		 push	 ecx
  007b6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _WindowWidth
  007bc	52		 push	 edx
  007bd	a1 00 00 00 00	 mov	 eax, DWORD PTR _WindowStartY
  007c2	50		 push	 eax
  007c3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _WindowStartX
  007c9	51		 push	 ecx
  007ca	68 00 00 cf 00	 push	 13565952		; 00cf0000H
  007cf	68 00 00 00 00	 push	 OFFSET ??_C@_11LOCGONAA@?$AA?$AA@
  007d4	68 00 00 00 00	 push	 OFFSET ??_C@_1O@HPNKJLOD@?$AAL?$AAI?$AAB?$AAM?$AAA?$AAN?$AA?$AA@
  007d9	6a 00		 push	 0
  007db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExW@48
  007e1	3b f4		 cmp	 esi, esp
  007e3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007e8	a3 00 00 00 00	 mov	 DWORD PTR _LIBMANWindow, eax

; 3021 :                                  L"",
; 3022 :                                  WS_OVERLAPPEDWINDOW,
; 3023 :                                  WindowStartX,
; 3024 :                                  WindowStartY,
; 3025 :                                  WindowWidth,
; 3026 :                                  WindowHeigth,
; 3027 :                                  HWND_DESKTOP,
; 3028 :                                  0,
; 3029 :                                  hInstance,
; 3030 :                                  NULL);
; 3031 :   ShowWindow(LIBMANWindow, nCmdShow);

  007ed	8b f4		 mov	 esi, esp
  007ef	8b 45 14	 mov	 eax, DWORD PTR _nCmdShow$[ebp]
  007f2	50		 push	 eax
  007f3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  007f9	51		 push	 ecx
  007fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8
  00800	3b f4		 cmp	 esi, esp
  00802	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 3032 :   MakeMenu();

  00807	e8 00 00 00 00	 call	 _MakeMenu

; 3033 : 
; 3034 :   if (LibraryMode==0) {

  0080c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  00813	75 35		 jne	 SHORT $LN29@WinMain

; 3035 :     SetClassLong(LIBMANWindow,GCL_HICON,(LONG)LoadIcon(LIBMANClass.hInstance, MAKEINTRESOURCE(ICON1_1)));

  00815	8b f4		 mov	 esi, esp
  00817	68 a4 06 00 00	 push	 1700			; 000006a4H
  0081c	a1 10 00 00 00	 mov	 eax, DWORD PTR _LIBMANClass+16
  00821	50		 push	 eax
  00822	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadIconA@8
  00828	3b f4		 cmp	 esi, esp
  0082a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0082f	8b f4		 mov	 esi, esp
  00831	50		 push	 eax
  00832	6a f2		 push	 -14			; fffffff2H
  00834	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  0083a	51		 push	 ecx
  0083b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetClassLongA@12
  00841	3b f4		 cmp	 esi, esp
  00843	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 3036 :   } else {

  00848	eb 33		 jmp	 SHORT $LN30@WinMain
$LN29@WinMain:

; 3037 :     SetClassLong(LIBMANWindow,GCL_HICON,(LONG)LoadIcon(LIBMANClass.hInstance, MAKEINTRESOURCE(ICON1_2)));

  0084a	8b f4		 mov	 esi, esp
  0084c	68 a5 06 00 00	 push	 1701			; 000006a5H
  00851	a1 10 00 00 00	 mov	 eax, DWORD PTR _LIBMANClass+16
  00856	50		 push	 eax
  00857	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadIconA@8
  0085d	3b f4		 cmp	 esi, esp
  0085f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00864	8b f4		 mov	 esi, esp
  00866	50		 push	 eax
  00867	6a f2		 push	 -14			; fffffff2H
  00869	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _LIBMANWindow
  0086f	51		 push	 ecx
  00870	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetClassLongA@12
  00876	3b f4		 cmp	 esi, esp
  00878	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN30@WinMain:

; 3038 :   }
; 3039 : 
; 3040 :   if (ProjectActive) {

  0087d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _ProjectActive, 0
  00884	74 10		 je	 SHORT $LN31@WinMain

; 3041 :     InsertWindowInProject(LIBMANWindow,0);

  00886	6a 00		 push	 0
  00888	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  0088d	50		 push	 eax
  0088e	e8 00 00 00 00	 call	 _InsertWindowInProject
  00893	83 c4 08	 add	 esp, 8
$LN31@WinMain:

; 3042 :   }
; 3043 :   CreateWindowObjects(hInstance);

  00896	8b 45 08	 mov	 eax, DWORD PTR _hInstance$[ebp]
  00899	50		 push	 eax
  0089a	e8 00 00 00 00	 call	 _CreateWindowObjects
  0089f	83 c4 04	 add	 esp, 4

; 3044 : 
; 3045 :   if (LibraryMode==0) {

  008a2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _LibraryMode, 0
  008a9	75 23		 jne	 SHORT $LN32@WinMain

; 3046 :     res=SetWindowTextUTF8(LIBMANWindow,SC(50,"Library manager symbols"));

  008ab	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@NMJBCEHE@Library?5manager?5symbols?$AA@
  008b0	6a 32		 push	 50			; 00000032H
  008b2	e8 00 00 00 00	 call	 _StringConvert
  008b7	83 c4 08	 add	 esp, 8
  008ba	50		 push	 eax
  008bb	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  008c0	50		 push	 eax
  008c1	e8 00 00 00 00	 call	 _SetWindowTextUTF8
  008c6	83 c4 08	 add	 esp, 8
  008c9	89 45 c4	 mov	 DWORD PTR _res$[ebp], eax

; 3047 :   } else {

  008cc	eb 21		 jmp	 SHORT $LN33@WinMain
$LN32@WinMain:

; 3048 :     res=SetWindowTextUTF8(LIBMANWindow,SC(51,"Library manager geometries"));

  008ce	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@ILMGADFO@Library?5manager?5geometries?$AA@
  008d3	6a 33		 push	 51			; 00000033H
  008d5	e8 00 00 00 00	 call	 _StringConvert
  008da	83 c4 08	 add	 esp, 8
  008dd	50		 push	 eax
  008de	a1 00 00 00 00	 mov	 eax, DWORD PTR _LIBMANWindow
  008e3	50		 push	 eax
  008e4	e8 00 00 00 00	 call	 _SetWindowTextUTF8
  008e9	83 c4 08	 add	 esp, 8
  008ec	89 45 c4	 mov	 DWORD PTR _res$[ebp], eax
$LN33@WinMain:

; 3049 :   }
; 3050 : 
; 3051 : 
; 3052 : //  Utf8ToUnicode("Mibrary manager geometries_ä_Диап_поломкиend_śč",Wstr,200);
; 3053 : //  res=SetWindowTextW(LIBMANWindow,Wstr);
; 3054 : //  res=SetWindowTextUTF8(LIBMANWindow,"Mibrary manager geometries_ä_Диап_поломки");
; 3055 : //  res=SendMessageUTF8(LIBMANWindow ,WM_SETTEXT,0,(LPARAM)"Mibrary manager geometries_ä_Диап_поломки");
; 3056 :   TimerValue=0;

  008ef	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _TimerValue, 0
$LN4@WinMain:

; 3057 : 
; 3058 :   while ( GetMessage(&M, 0, 0, 0) ) {

  008f9	8b f4		 mov	 esi, esp
  008fb	6a 00		 push	 0
  008fd	6a 00		 push	 0
  008ff	6a 00		 push	 0
  00901	8d 45 dc	 lea	 eax, DWORD PTR _M$[ebp]
  00904	50		 push	 eax
  00905	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetMessageA@16
  0090b	3b f4		 cmp	 esi, esp
  0090d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00912	85 c0		 test	 eax, eax
  00914	74 28		 je	 SHORT $LN5@WinMain

; 3059 :     TranslateMessage(&M);

  00916	8b f4		 mov	 esi, esp
  00918	8d 45 dc	 lea	 eax, DWORD PTR _M$[ebp]
  0091b	50		 push	 eax
  0091c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TranslateMessage@4
  00922	3b f4		 cmp	 esi, esp
  00924	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 3060 :     DispatchMessage(&M);

  00929	8b f4		 mov	 esi, esp
  0092b	8d 45 dc	 lea	 eax, DWORD PTR _M$[ebp]
  0092e	50		 push	 eax
  0092f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DispatchMessageA@4
  00935	3b f4		 cmp	 esi, esp
  00937	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 3061 :   }

  0093c	eb bb		 jmp	 SHORT $LN4@WinMain
$LN5@WinMain:

; 3062 :   DeleteObject(NewFont);

  0093e	8b f4		 mov	 esi, esp
  00940	a1 00 00 00 00	 mov	 eax, DWORD PTR _NewFont
  00945	50		 push	 eax
  00946	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteObject@4
  0094c	3b f4		 cmp	 esi, esp
  0094e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 3063 : //  Help(0,2);
; 3064 :   DeAllocateMemTemp();

  00953	e8 00 00 00 00	 call	 _DeAllocateMemTemp

; 3065 :   return 0;

  00958	33 c0		 xor	 eax, eax
$LN34@WinMain:

; 3066 : }

  0095a	52		 push	 edx
  0095b	8b cd		 mov	 ecx, ebp
  0095d	50		 push	 eax
  0095e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN51@WinMain
  00964	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00969	58		 pop	 eax
  0096a	5a		 pop	 edx
  0096b	5f		 pop	 edi
  0096c	5e		 pop	 esi
  0096d	5b		 pop	 ebx
  0096e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00971	33 cd		 xor	 ecx, ebp
  00973	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00978	81 c4 7c 10 00
	00		 add	 esp, 4220		; 0000107cH
  0097e	3b ec		 cmp	 ebp, esp
  00980	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00985	8b e5		 mov	 esp, ebp
  00987	5d		 pop	 ebp
  00988	c2 10 00	 ret	 16			; 00000010H
  0098b	90		 npad	 1
$LN51@WinMain:
  0098c	0b 00 00 00	 DD	 11			; 0000000bH
  00990	00 00 00 00	 DD	 $LN50@WinMain
$LN50@WinMain:
  00994	dc ff ff ff	 DD	 -36			; ffffffdcH
  00998	1c 00 00 00	 DD	 28			; 0000001cH
  0099c	00 00 00 00	 DD	 $LN39@WinMain
  009a0	64 fd ff ff	 DD	 -668			; fffffd64H
  009a4	58 02 00 00	 DD	 600			; 00000258H
  009a8	00 00 00 00	 DD	 $LN40@WinMain
  009ac	04 fb ff ff	 DD	 -1276			; fffffb04H
  009b0	58 02 00 00	 DD	 600			; 00000258H
  009b4	00 00 00 00	 DD	 $LN41@WinMain
  009b8	a4 f8 ff ff	 DD	 -1884			; fffff8a4H
  009bc	58 02 00 00	 DD	 600			; 00000258H
  009c0	00 00 00 00	 DD	 $LN42@WinMain
  009c4	98 f8 ff ff	 DD	 -1896			; fffff898H
  009c8	04 00 00 00	 DD	 4
  009cc	00 00 00 00	 DD	 $LN43@WinMain
  009d0	8c f8 ff ff	 DD	 -1908			; fffff88cH
  009d4	04 00 00 00	 DD	 4
  009d8	00 00 00 00	 DD	 $LN44@WinMain
  009dc	80 f8 ff ff	 DD	 -1920			; fffff880H
  009e0	04 00 00 00	 DD	 4
  009e4	00 00 00 00	 DD	 $LN45@WinMain
  009e8	74 f8 ff ff	 DD	 -1932			; fffff874H
  009ec	04 00 00 00	 DD	 4
  009f0	00 00 00 00	 DD	 $LN46@WinMain
  009f4	68 f8 ff ff	 DD	 -1944			; fffff868H
  009f8	04 00 00 00	 DD	 4
  009fc	00 00 00 00	 DD	 $LN47@WinMain
  00a00	2c f8 ff ff	 DD	 -2004			; fffff82cH
  00a04	28 00 00 00	 DD	 40			; 00000028H
  00a08	00 00 00 00	 DD	 $LN48@WinMain
  00a0c	24 f4 ff ff	 DD	 -3036			; fffff424H
  00a10	00 04 00 00	 DD	 1024			; 00000400H
  00a14	00 00 00 00	 DD	 $LN49@WinMain
$LN49@WinMain:
  00a18	57		 DB	 87			; 00000057H
  00a19	73		 DB	 115			; 00000073H
  00a1a	74		 DB	 116			; 00000074H
  00a1b	72		 DB	 114			; 00000072H
  00a1c	00		 DB	 0
$LN48@WinMain:
  00a1d	76		 DB	 118			; 00000076H
  00a1e	65		 DB	 101			; 00000065H
  00a1f	6e		 DB	 110			; 0000006eH
  00a20	64		 DB	 100			; 00000064H
  00a21	6f		 DB	 111			; 0000006fH
  00a22	72		 DB	 114			; 00000072H
  00a23	00		 DB	 0
$LN47@WinMain:
  00a24	45		 DB	 69			; 00000045H
  00a25	44		 DB	 68			; 00000044H
  00a26	58		 DB	 88			; 00000058H
  00a27	00		 DB	 0
$LN46@WinMain:
  00a28	45		 DB	 69			; 00000045H
  00a29	43		 DB	 67			; 00000043H
  00a2a	58		 DB	 88			; 00000058H
  00a2b	00		 DB	 0
$LN45@WinMain:
  00a2c	45		 DB	 69			; 00000045H
  00a2d	42		 DB	 66			; 00000042H
  00a2e	58		 DB	 88			; 00000058H
  00a2f	00		 DB	 0
$LN44@WinMain:
  00a30	45		 DB	 69			; 00000045H
  00a31	41		 DB	 65			; 00000041H
  00a32	58		 DB	 88			; 00000058H
  00a33	00		 DB	 0
$LN43@WinMain:
  00a34	46		 DB	 70			; 00000046H
  00a35	69		 DB	 105			; 00000069H
  00a36	6c		 DB	 108			; 0000006cH
  00a37	65		 DB	 101			; 00000065H
  00a38	4e		 DB	 78			; 0000004eH
  00a39	61		 DB	 97			; 00000061H
  00a3a	6d		 DB	 109			; 0000006dH
  00a3b	65		 DB	 101			; 00000065H
  00a3c	00		 DB	 0
$LN42@WinMain:
  00a3d	73		 DB	 115			; 00000073H
  00a3e	74		 DB	 116			; 00000074H
  00a3f	72		 DB	 114			; 00000072H
  00a40	33		 DB	 51			; 00000033H
  00a41	00		 DB	 0
$LN41@WinMain:
  00a42	73		 DB	 115			; 00000073H
  00a43	74		 DB	 116			; 00000074H
  00a44	72		 DB	 114			; 00000072H
  00a45	32		 DB	 50			; 00000032H
  00a46	00		 DB	 0
$LN40@WinMain:
  00a47	73		 DB	 115			; 00000073H
  00a48	74		 DB	 116			; 00000074H
  00a49	72		 DB	 114			; 00000072H
  00a4a	00		 DB	 0
$LN39@WinMain:
  00a4b	4d		 DB	 77			; 0000004dH
  00a4c	00		 DB	 0
_WinMain@16 ENDP
_TEXT	ENDS
END
